<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深度学习简要笔记</title>
      <link href="/2023/07/04/Deep_laerning/"/>
      <url>/2023/07/04/Deep_laerning/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习简要笔记"><a class="markdownIt-Anchor" href="#深度学习简要笔记"></a> 深度学习简要笔记</h1><h2 id="机器学习算法的类型"><a class="markdownIt-Anchor" href="#机器学习算法的类型"></a> 机器学习算法的类型</h2><p><strong>监督学习</strong>：如果机器学习的目标是建模样本的特征 𝒙 和标签 𝑦 之间的关系：𝑦 =𝑓(𝒙; 𝜃) 或 𝑝(𝑦|𝒙; 𝜃)，并且训练集中每个样本都有标签，那么这类机器学习称为监督学习（Supervised Learning）。</p><ul><li>个人认为简单而言即样本的特征 𝒙 和标签 𝑦 有明确的关系。</li></ul><p><strong>无监督学习</strong>：无监督学习（Unsupervised Learning，UL），是指从不包含目标标签的训练样本中自动学习到一些有价值的信息。典型的无监督学习问题有聚类、密度估计、特征学习、降维等。</p><p><strong>强化学习</strong>：强化学习（Reinforcement Learning，RL），是一类通过交互来学习的机器学习算法。在强化学习中，智能体根据环境的状态做出一个动作，并得到即时或延时的奖励．智能体在和环境的交互中不断学习并调整策略，以取得最大化的期望总回报。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法题目分享总结</title>
      <link href="/2023/06/17/algorithm/"/>
      <url>/2023/06/17/algorithm/</url>
      
        <content type="html"><![CDATA[<h1 id="王道机试指南"><a class="markdownIt-Anchor" href="#王道机试指南"></a> 王道机试指南</h1><h2 id="例题22-反序数"><a class="markdownIt-Anchor" href="#例题22-反序数"></a> 例题2.2 反序数</h2><p><a href="http://t.cn/E9WBrut">题目链接</a></p><p>采用Reverse函数用于求反序数，通过对x不断进行除运算，然后对revx不断进行乘运算。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Reverse</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-type">int</span> revx = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (x != <span class="hljs-number">0</span>) &#123;<br>        revx *= <span class="hljs-number">10</span>;<br>        revx += x % <span class="hljs-number">10</span>;<br>        x /= <span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> revx;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1000</span>; i &lt; <span class="hljs-number">10000</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (i * <span class="hljs-number">9</span> == <span class="hljs-built_in">Reverse</span>(i)) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, i);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题24-输出梯形"><a class="markdownIt-Anchor" href="#例题24-输出梯形"></a> 例题2.4 输出梯形</h2><p>题目描述：输入一个高度h，输出一个高度为h、上底边长度为h的梯形。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> h=<span class="hljs-number">0</span>;<span class="hljs-comment">//梯形的高度</span><br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;h)!=EOF)&#123;<br>        <span class="hljs-type">int</span> all = h+<span class="hljs-number">2</span>*(h<span class="hljs-number">-1</span>);<br>        <span class="hljs-type">int</span> space=<span class="hljs-number">0</span>,star=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;h;i++)&#123;<br>            space=all-(h+<span class="hljs-number">2</span>*i);<br>            star=all-space;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;space;k++)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;star;k++)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>            &#125;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>P.S:可以采用上述while循环的语句能够保证对多组测试数据进行处理，又使程序输入结束后能够正常退出。scanf函数的返回值是成功赋值的个数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;h)!=EOF)<br></code></pre></td></tr></table></figure><h2 id="例题25-叠筐"><a class="markdownIt-Anchor" href="#例题25-叠筐"></a> 例题2.5 叠筐</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2074">题目链接</a></p><p>求解排版题的新思路：当输出的图形具有的规律不能或者很难直接应用到输出时，应该首先用一个缓存数组来保存将要输出的字符阵列，然后在该数组上完成排版，最后按照排版输出整个图形。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> num=<span class="hljs-number">0</span>;<span class="hljs-comment">//输入的奇数</span><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<span class="hljs-comment">//记录输出了多少次</span><br>    <span class="hljs-type">char</span> center,outside;<br>    <span class="hljs-type">char</span> rect[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>];<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c %c&quot;</span>,&amp;num,&amp;center,&amp;outside)!=EOF)&#123;<br>        <span class="hljs-keyword">if</span>(num%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-type">char</span> insert=<span class="hljs-literal">NULL</span>;<br>            <span class="hljs-comment">//中心赋值</span><br>            <span class="hljs-type">int</span> center_index=num/<span class="hljs-number">2</span>;<br>            rect[center_index][center_index]=center;<br>            <span class="hljs-comment">//循环插入外边框</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=num/<span class="hljs-number">2</span>;i++)&#123;<br>                <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>)&#123;<br>                    insert = outside;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    insert = center;<br>                &#125;<br>                <span class="hljs-comment">//插入横向</span><br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=center_index-i;k&lt;=center_index+i;k++)&#123;<br>                    rect[center_index-i][k]=insert;<br>                    rect[center_index+i][k]=insert;<br>                &#125;<br>                <span class="hljs-comment">//插入纵向</span><br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=center_index-i+<span class="hljs-number">1</span>;k&lt;=center_index+i<span class="hljs-number">-1</span>;k++)&#123;<br>                    rect[k][center_index-i]=insert;<br>                    rect[k][center_index+i]=insert;<br>                &#125;<br>                <span class="hljs-comment">//去除四角</span><br>                rect[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-string">&#x27; &#x27;</span>;<br>                rect[<span class="hljs-number">0</span>][num<span class="hljs-number">-1</span>]=<span class="hljs-string">&#x27; &#x27;</span>;<br>                rect[num<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>]=<span class="hljs-string">&#x27; &#x27;</span>;<br>                rect[num<span class="hljs-number">-1</span>][num<span class="hljs-number">-1</span>]=<span class="hljs-string">&#x27; &#x27;</span>;<br>            &#125;<br>            <span class="hljs-comment">//输出图案</span><br>            <span class="hljs-keyword">if</span>(count==<span class="hljs-number">0</span>)&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;num;i++)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;num;j++)&#123;<br>                        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,rect[i][j]);<br>                    &#125;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>                    count=<span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;num;i++)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;num;j++)&#123;<br>                        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,rect[i][j]);<br>                    &#125;<br>                    count=<span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题26-今天的第几天"><a class="markdownIt-Anchor" href="#例题26-今天的第几天"></a> 例题2.6 今天的第几天？</h2><p><a href="http://t.cn/E9jXK5A">题目链接</a></p><p>P.S:注意CPP中的二维数组创建方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//二维数组的定义</span><br><span class="hljs-type">int</span> day_list[<span class="hljs-number">2</span>][<span class="hljs-number">13</span>]=&#123;&#123;<span class="hljs-number">0</span>,<span class="hljs-number">31</span>,<span class="hljs-number">28</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>&#125;,<br>                     &#123;<span class="hljs-number">0</span>,<span class="hljs-number">31</span>,<span class="hljs-number">29</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>&#125;&#125;;<br></code></pre></td></tr></table></figure><p>完整的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">is_leap_year</span><span class="hljs-params">(<span class="hljs-type">int</span> year)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(year%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>||(year%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;year%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//二维数组的定义</span><br><span class="hljs-type">int</span> day_list[<span class="hljs-number">2</span>][<span class="hljs-number">13</span>]=&#123;&#123;<span class="hljs-number">0</span>,<span class="hljs-number">31</span>,<span class="hljs-number">28</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>&#125;,<br>                     &#123;<span class="hljs-number">0</span>,<span class="hljs-number">31</span>,<span class="hljs-number">29</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>&#125;&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">bool</span> leap_year;<br>    <span class="hljs-type">int</span> year,month,day;<br>    <span class="hljs-type">int</span> total_days=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;year,&amp;month,&amp;day)!=EOF)<br>    &#123;<br>        leap_year=<span class="hljs-built_in">is_leap_year</span>(year);<br>        <span class="hljs-keyword">if</span>(leap_year==<span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;month;i++)&#123;<br>                total_days+=day_list[<span class="hljs-number">0</span>][i];<br>            &#125;<br>            total_days+=day;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,total_days);<br>            total_days=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;month;i++)&#123;<br>                total_days+=day_list[<span class="hljs-number">1</span>][i];<br>            &#125;<br>            total_days+=day;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,total_days);<br>            total_days=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题29-剩下的树"><a class="markdownIt-Anchor" href="#例题29-剩下的树"></a> 例题2.9 剩下的树</h2><p><a href="http://t.cn/E9ufYo5">题目链接</a></p><p>P.S:采用指针偏移初始化的方法能够提高一直循环的效率。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//使用指针移动方式初始化数组，提高效率</span><br>    <span class="hljs-type">bool</span> remove_list[<span class="hljs-number">10001</span>];<br>    <span class="hljs-type">bool</span>* p = remove_list;  <span class="hljs-comment">// 指向数组首元素的指针</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10001</span>; i++)<br>    &#123;<br>        *p = <span class="hljs-literal">true</span>;<br>        p++;<br>    &#125;<br></code></pre></td></tr></table></figure><p>完整的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> total,num;<br>    <span class="hljs-type">int</span> total_remove=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> index_1,index_2;<br>    <span class="hljs-comment">//使用指针移动方式初始化数组，提高效率</span><br>    <span class="hljs-type">bool</span> remove_list[<span class="hljs-number">10001</span>];<br>    <span class="hljs-type">bool</span>* p = remove_list;  <span class="hljs-comment">// 指向数组首元素的指针</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10001</span>; i++)<br>    &#123;<br>        *p = <span class="hljs-literal">true</span>;<br>        p++;<br>    &#125;<br><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;total,&amp;num);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;num;i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;index_1,&amp;index_2);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=index_1;j&lt;=index_2;j++)<br>        &#123;<br>            remove_list[j]=<span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=total;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(remove_list[i])<br>        &#123;<br>            total_remove++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,total_remove);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题210-手机键盘"><a class="markdownIt-Anchor" href="#例题210-手机键盘"></a> 例题2.10 手机键盘</h2><p><a href="http://t.cn/E9ulcIc">题目链接</a></p><ul><li>可以先将按键次数记录在一个数组中，每当遇到一个字母，直接访问数组便可得到该字母的按键次数。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">string arr[<span class="hljs-number">8</span>]=&#123;<span class="hljs-string">&quot;abc&quot;</span>,<span class="hljs-string">&quot;def&quot;</span>,<span class="hljs-string">&quot;ghi&quot;</span>,<span class="hljs-string">&quot;jkl&quot;</span>,<span class="hljs-string">&quot;mno&quot;</span>,<span class="hljs-string">&quot;pqrs&quot;</span>,<span class="hljs-string">&quot;tuv&quot;</span>,<span class="hljs-string">&quot;wxyz&quot;</span>&#125;;<br><span class="hljs-type">int</span> keytab[<span class="hljs-number">26</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<br>                <span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>&#125;;<br></code></pre></td></tr></table></figure><ul><li>判断两个字母是否属于同一个按键：如果两个字母同属一个按键，那么字母本身的间距就等于他们按键次数的差。反之，如果不相等，则这两个字母必定属于不同的按键。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//判断在一个按键之内</span><br>            <span class="hljs-keyword">if</span>(i!=<span class="hljs-number">0</span>&amp;&amp;str[i]-str[i<span class="hljs-number">-1</span>]==keytab[str[i]-<span class="hljs-string">&#x27;a&#x27;</span>]-keytab[str[i<span class="hljs-number">-1</span>]-<span class="hljs-string">&#x27;a&#x27;</span>])<br>            &#123;<br>                time+=<span class="hljs-number">2</span>;<br>            &#125;<br></code></pre></td></tr></table></figure><ul><li>应当了解和掌握C++中关于<code>string</code>类型的用法。</li></ul><p>完整的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br>string arr[<span class="hljs-number">8</span>]=&#123;<span class="hljs-string">&quot;abc&quot;</span>,<span class="hljs-string">&quot;def&quot;</span>,<span class="hljs-string">&quot;ghi&quot;</span>,<span class="hljs-string">&quot;jkl&quot;</span>,<span class="hljs-string">&quot;mno&quot;</span>,<span class="hljs-string">&quot;pqrs&quot;</span>,<span class="hljs-string">&quot;tuv&quot;</span>,<span class="hljs-string">&quot;wxyz&quot;</span>&#125;;<br><span class="hljs-type">int</span> keytab[<span class="hljs-number">26</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<br>                <span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    string str;<br>    <span class="hljs-keyword">while</span>(cin&gt;&gt;str)<br>    &#123;<br>        <span class="hljs-type">int</span> time=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;str.<span class="hljs-built_in">size</span>();i++)<br>        &#123;<br>            time+=keytab[str[i]-<span class="hljs-string">&#x27;a&#x27;</span>];<br>            <span class="hljs-comment">//判断在一个按键之内</span><br>            <span class="hljs-keyword">if</span>(i!=<span class="hljs-number">0</span>&amp;&amp;str[i]-str[i<span class="hljs-number">-1</span>]==keytab[str[i]-<span class="hljs-string">&#x27;a&#x27;</span>]-keytab[str[i<span class="hljs-number">-1</span>]-<span class="hljs-string">&#x27;a&#x27;</span>])<br>            &#123;<br>                time+=<span class="hljs-number">2</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,time);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题32-成绩排序"><a class="markdownIt-Anchor" href="#例题32-成绩排序"></a> 例题3.2 成绩排序</h2><p><a href="http://t.cn/E9d3ysv">题目链接</a></p><ul><li>遇到一组基本类型数据时，可以将其封装为一个结构体或类进行处理。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//定义一个结构体</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">student</span>&#123;<br>    <span class="hljs-type">int</span> number;<br>    <span class="hljs-type">int</span> score;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>对于新的排序规则，具有以下准则，当比较函数的返回值为true时，表示第一个参数将会排在第二个参数的前面。<code>sort</code>不填写默认为<strong>升序方式</strong>。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(student x,student y)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x.score==y.score)<br>    &#123;<br>        <span class="hljs-keyword">return</span> x.number&lt;y.number;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> x.score&lt;y.score;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>完整的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//定义一个结构体</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">student</span>&#123;<br>    <span class="hljs-type">int</span> number;<br>    <span class="hljs-type">int</span> score;<br>&#125;;<br><br>student arr[<span class="hljs-number">101</span>];<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(student x,student y)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(x.score==y.score)<br>    &#123;<br>        <span class="hljs-keyword">return</span> x.number&lt;y.number;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> x.score&lt;y.score;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;num)!=EOF)<br>    &#123;<br>        <span class="hljs-comment">//赋值</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;num;i++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;arr[i].number,&amp;arr[i].score);<br>        &#125;<br>        <span class="hljs-built_in">sort</span>(arr,arr+num,cmp);<br>        <span class="hljs-comment">//输出结果</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;num;i++)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d\n&quot;</span>,arr[i].number,arr[i].score);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="例题35-查找"><a class="markdownIt-Anchor" href="#例题35-查找"></a> 例题3.5 查找</h2><p><a href="http://t.cn/E9g8aaR">题目链接</a></p><ul><li>二分查找法必须熟练掌握（采用升序）</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//二分查找法(升序)</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">BinaySearch</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> target)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> left=<span class="hljs-number">0</span>,right=n<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">int</span> middle;<br>    <span class="hljs-keyword">while</span>(left&lt;=right)&#123;<br>        middle=left+(right-left)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(target&lt;arr[middle])<br>        &#123;<br>            right=middle<span class="hljs-number">-1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(target&gt;arr[middle])<br>        &#123;<br>            left=middle+<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<span class="hljs-comment">//找到了</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<span class="hljs-comment">//没有找到</span><br>&#125;<br></code></pre></td></tr></table></figure><p>完整的程序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> arr[<span class="hljs-number">101</span>];<br><br><span class="hljs-comment">//二分查找法(升序)</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">BinaySearch</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> target)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> left=<span class="hljs-number">0</span>,right=n<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">int</span> middle;<br>    <span class="hljs-keyword">while</span>(left&lt;=right)&#123;<br>        middle=left+(right-left)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(target&lt;arr[middle])<br>        &#123;<br>            right=middle<span class="hljs-number">-1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(target&gt;arr[middle])<br>        &#123;<br>            left=middle+<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<span class="hljs-comment">//找到了</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<span class="hljs-comment">//没有找到</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">int</span> num,target;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n)!=EOF)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;arr[i]);<br>        &#125;<br>        <span class="hljs-built_in">sort</span>(arr,arr+n);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;num);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;num;j++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;target);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">BinaySearch</span>(n,target))<br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第四章-字符串处理"><a class="markdownIt-Anchor" href="#第四章-字符串处理"></a> 第四章 字符串处理</h2><h3 id="string中的元素操作"><a class="markdownIt-Anchor" href="#string中的元素操作"></a> string中的元素操作</h3><p>string中的常用元素操作包括：</p><ul><li>在任意位置插入元素的insert()</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    string str=<span class="hljs-string">&quot;hello world&quot;</span>;<br>    str.<span class="hljs-built_in">insert</span>(str.<span class="hljs-built_in">size</span>(),<span class="hljs-string">&quot; and you!&quot;</span>);<br>    cout&lt;&lt;str&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">hello world <span class="hljs-keyword">and</span> you!<br></code></pre></td></tr></table></figure><ul><li>在任意位置删除元素的erase()</li></ul><p>括号内第一个数字是起始下标，第二个数字是偏移。不加第二个数字则为从起始一直擦除到最后。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    string str=<span class="hljs-string">&quot;hello world and you!&quot;</span>;<br>    str.<span class="hljs-built_in">erase</span>(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>);<br>    cout&lt;&lt;str&lt;&lt;endl;<br>    string str2=<span class="hljs-string">&quot;hello world and you!&quot;</span>;<br>    str2.<span class="hljs-built_in">erase</span>(<span class="hljs-number">7</span>);<br>    cout&lt;&lt;str2&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">and</span> you!<br>hello w<br></code></pre></td></tr></table></figure><ul><li>将字符串中所有的内容直接清空的clear()</li></ul><h3 id="string中的运算符"><a class="markdownIt-Anchor" href="#string中的运算符"></a> string中的运算符</h3><ul><li>string类型的字符串可以通过&quot;+“和”+=&quot;来将两个或者多个字符串拼接成一个更长的字符串</li><li>string类型按照字典序进行比较</li></ul><p>在数学中，字典或词典顺序（也称为词汇顺序，字典顺序，字母顺序或词典顺序）是基于字母顺序排列的单词按字母顺序排列的方法,如abcdefg…也称为字典序。字典序最最小：指的是顺序最小和字符串的长度无关。如d和abcd比较，d&gt;a, 然后直接结束比较。abcd为最小字典序。在ab 和 abc 比较，前两个字符一样，然后abc字符串长。ab为最小字典序。</p><h3 id="string中的常用函数"><a class="markdownIt-Anchor" href="#string中的常用函数"></a> string中的常用函数</h3><ul><li>c++中find() 函数与string::npos参数</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//统计ACSII码值在(0-127)中不同字符的个数 </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>string str;<br><span class="hljs-type">int</span> num = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">getline</span>(cin, str);<br><span class="hljs-comment">//int m;</span><br><span class="hljs-comment">//m = str.size();</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">128</span>; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (str.<span class="hljs-built_in">find</span>(i) != string::npos)<br>num++;<br>&#125;<br>cout &lt;&lt; num;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>c++中返回字符串子串函数substr()</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    string str=<span class="hljs-string">&quot;hello world and you!&quot;</span>;<br>    string str2=str.<span class="hljs-built_in">substr</span>(<span class="hljs-number">6</span>,<span class="hljs-number">5</span>);<br>    cout&lt;&lt;str2&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记</title>
      <link href="/2023/04/25/vue_learning/"/>
      <url>/2023/04/25/vue_learning/</url>
      
        <content type="html"><![CDATA[<h1 id="vue学习笔记"><a class="markdownIt-Anchor" href="#vue学习笔记"></a> Vue学习笔记</h1><h2 id="vue数据管理使用data函数提供数据"><a class="markdownIt-Anchor" href="#vue数据管理使用data函数提供数据"></a> Vue数据管理：使用data函数提供数据</h2><ul><li>index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-comment">//data函数返回数据，可以是任何类型</span><br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;vue&quot;</span>,<br>            <span class="hljs-attr">address</span>:&#123;<br>                <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;my_vue&quot;</span>,<br>            &#125;<br>        &#125; <br>    &#125;<br>&#125;);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<span class="hljs-comment">//使得app成为模板，可以使用模板语法</span><br></code></pre></td></tr></table></figure><ul><li>HTML使用模板语法展示返回的数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>hello!&#123;&#123;address.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="vue数据管理在html访问data属性"><a class="markdownIt-Anchor" href="#vue数据管理在html访问data属性"></a> Vue数据管理：在HTML访问data属性</h2><ul><li>指令：是vue提供的一组可以直接在html模板中使用的特殊属性，例如：<code>v-bind</code>、<code>v-for</code>、<code>v-if</code>，用于实现数据绑定、循环、条件判断等。</li><li>index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-comment">//data函数返回数据，可以是任何类型</span><br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;vue&quot;</span>,<br>            <span class="hljs-attr">link</span>:<span class="hljs-string">&quot;https://chuiyugin.github.io/&quot;</span>,<br>        &#125; <br>    &#125;<br>&#125;);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<span class="hljs-comment">//使得app成为模板，可以使用模板语法</span><br></code></pre></td></tr></table></figure><ul><li>在HTML访问data属性(<code>v-bind</code>可以简写为<code>:</code>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-bind:href</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="vue数据管理展示列表数据"><a class="markdownIt-Anchor" href="#vue数据管理展示列表数据"></a> Vue数据管理：展示列表数据</h2><ul><li>使用v-for语句生成列表</li><li>index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-comment">//data函数返回数据，可以是任何类型</span><br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;vue&quot;</span>,<br>            <span class="hljs-attr">todos</span>:[<span class="hljs-string">&quot;学习Vue&quot;</span>,<span class="hljs-string">&quot;热爱生活&quot;</span>,<span class="hljs-string">&quot;平安喜乐&quot;</span>],<br>        &#125; <br>    &#125;<br>&#125;);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<span class="hljs-comment">//使得app成为模板，可以使用模板语法</span><br></code></pre></td></tr></table></figure><ul><li>在HTML中生成列表(不带序号)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot; todo in todos &quot;</span>&gt;</span>&#123;&#123;todo&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>在HTML中生成列表(带序号)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot; (todo,index) in todos &quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; &#123;&#123;todo&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="复选框的使用"><a class="markdownIt-Anchor" href="#复选框的使用"></a> 复选框的使用</h3><ul><li>index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-comment">//data函数返回数据，可以是任何类型</span><br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;vue&quot;</span>,<br>            <span class="hljs-comment">//todos:[&quot;学习Vue&quot;,&quot;热爱生活&quot;,&quot;平安喜乐&quot;],</span><br>            <span class="hljs-attr">todos</span>: [<br>                &#123;<br>                  <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;把项目做完&quot;</span>,<br>                  <span class="hljs-attr">complete</span>: <span class="hljs-literal">true</span>,<br>                &#125;,<br>                &#123;<br>                  <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;去超市购物&quot;</span>,<br>                  <span class="hljs-attr">complete</span>: <span class="hljs-literal">false</span>,<br>                &#125;,<br>                &#123;<br>                  <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;看10分钟的书&quot;</span>,<br>                  <span class="hljs-attr">complete</span>: <span class="hljs-literal">false</span>,<br>                &#125;,<br>              ],<br>        &#125; <br>    &#125;<br>&#125;);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<span class="hljs-comment">//使得app成为模板，可以使用模板语法</span><br></code></pre></td></tr></table></figure><ul><li>在HTML中展示复选框</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot; (todo,index) in todos &quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">:checked</span>=<span class="hljs-string">&quot;todo.complete&quot;</span>&gt;</span> todo.content<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fliplt微软复古翻页时钟屏保</title>
      <link href="/2023/01/16/Fliplt/"/>
      <url>/2023/01/16/Fliplt/</url>
      
        <content type="html"><![CDATA[<h1 id="fliplt微软复古翻页时钟屏保"><a class="markdownIt-Anchor" href="#fliplt微软复古翻页时钟屏保"></a> Fliplt微软复古翻页时钟屏保</h1><ul><li><p>翻转时钟屏幕保护程序。</p></li><li><p>灵感来自 Fliqlo。</p></li><li><p>Windows 上的 Fliqlo 停止使用最近（2015 年 12 月？）Flash 更新，这促使了这个项目。</p></li><li><p>这个项目不使用 Flash。</p></li></ul><p><img src="https://s2.loli.net/2023/01/16/7r5O8hqC1nykzRV.png" alt="" /></p><p>要在不使用 Visual Studio 构建的情况下进行安装，请将<a href="https://github.com/phaselden/FlipIt/releases">发布页面</a>上的 .scr 文件复制到：</p><ul><li>C:\Windows\SysWOW64（在 64 位 Windows 上）</li><li>C:\Windows\System32 （在 32 位 Windows 上）</li></ul><p>最后即可在电脑屏幕保护程序处进行配置！</p>]]></content>
      
      
      <categories>
          
          <category> Fliplt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fliplt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Autohotkey实现鼠标双击桌面隐藏图标</title>
      <link href="/2022/12/25/Autohotkey/"/>
      <url>/2022/12/25/Autohotkey/</url>
      
        <content type="html"><![CDATA[<h1 id="autohotkey-实现鼠标双击桌面隐藏图标"><a class="markdownIt-Anchor" href="#autohotkey-实现鼠标双击桌面隐藏图标"></a> Autohotkey 实现鼠标双击桌面隐藏图标</h1><h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2><p>有时候我们做教程或特殊情况下需要将桌面上密密麻麻的图标暂时隐藏，稍后又要让他显示，那能不能我们随心所欲得让他显示和隐藏呢?今天便给大家解决这一问题。</p><p>1、先下载安装autohotkey，大约2M左右很小，官方下载地址在下方提供 <a href="https://www.autohotkey.com/">网址</a></p><p><img src="https://s2.loli.net/2022/12/25/jRLCWIlyhtMf9ro.png" alt="" /></p><p>2、在随便一个地方创建txt文件，并将以下代码粘贴到txt里保存。最后更改<code>.txt</code>后缀为<code>.ahk</code>!</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>; ===============================================================================================================================<br>; =====隐藏桌面图标：双击<br>; ===============================================================================================================================<br><br><span class="hljs-selector-id">#If</span> IsDesktopUnderMouse()<br>~LButton::<br>LButton_presses++<br>if (LButton_presses=<span class="hljs-number">2</span>)<br>if (!<span class="hljs-built_in">IsObject</span>(<span class="hljs-built_in">GetDesktopIconUnderMouse</span>()) or DesktopIconsIsShow=<span class="hljs-number">0</span>)<br>DesktopIconsIsShow:=<span class="hljs-built_in">HideOrShowDesktopIcons</span>()<br>SetTimer, KeyLButton, -<span class="hljs-number">300</span><br>return<br><br>KeyLButton:<br>LButton_presses := <span class="hljs-number">0</span><br>return<br><br><span class="hljs-built_in">IsDesktopUnderMouse</span>()<br>&#123;<br>MouseGetPos, , , OutputVarWin<br>WinGetClass, OutputVarClass, % &quot;ahk_id&quot; OutputVarWin<br>if (OutputVarClass=&quot;WorkerW&quot; or OutputVarClass=&quot;Progman&quot;)<br>return, <span class="hljs-number">1</span><br>else<br>return, <span class="hljs-number">0</span><br>&#125;<br><br>HideOrShowDesktopIcons()<br>&#123;<br>ControlGet, OutputVarHwnd, Hwnd,, SysListView321, ahk_class WorkerW<br>if (OutputVarHwnd=&quot;&quot;)<br>      ControlGet, OutputVarHwnd, Hwnd,, SysListView321, ahk_class Progman<br><br>if (DllCall(&quot;IsWindowVisible&quot;, UInt, OutputVarHwnd))<br>&#123;<br>WinHide, ahk_id %OutputVarHwnd%<br>return, <span class="hljs-number">0</span><br>&#125;<br>else<br>&#123;<br>WinShow, ahk_id %OutputVarHwnd%<br>return, <span class="hljs-number">1</span><br>&#125;<br>&#125;<br><span class="hljs-selector-id">#If</span><br>; ===============================================================================================================================<br>; GetDesktopIconUnderMouse()<br>; https://www.autohotkey.com/boards/viewtopic.php?p=<span class="hljs-number">260761</span><br>; Function:       Gets the desktop icon under the mouse. See the <span class="hljs-string">&quot;Return values&quot;</span> section below for more information about the<br>;                 <span class="hljs-attribute">icon</span> and associated file data retrieved.<br>; Parameters:     None<br>; Return values:  If there is an icon under the mouse, an associative array with the following keys:<br>;                 - <span class="hljs-attribute">left</span>: the left position of the icon in screen coordinates<br>;                 - <span class="hljs-attribute">top</span>: the top position of the icon in screen coordinates<br>;                 - <span class="hljs-attribute">right</span>: the right position of the icon in screen coordinates<br>;                 - <span class="hljs-attribute">bottom</span>: the bottom position of the icon in screen coordinates<br>;                 - name: the name of the file represented by the icon, e.g. New Text Document.txt<br>;                 - size: the size of the file represented by the icon, e.g. <span class="hljs-number">1.72</span> KB. Note: this value is blank for folders<br>;                 - type: the type of the file represented by the icon, e.g. TXT File, JPEG image, File folder<br>;                 - date: the modified date of the file represented by the icon, e.g. <span class="hljs-number">9</span>/<span class="hljs-number">9</span>/<span class="hljs-number">2016</span> <span class="hljs-number">10</span>:<span class="hljs-number">39</span> AM<br>;                 Otherwise, <span class="hljs-selector-tag">a</span> blank value<br>; Global vars:    None<br>; Dependencies:   None<br>; Tested with:    AHK <span class="hljs-number">1.1</span>.<span class="hljs-number">30.01</span> (A32/U32/U64)<br>; Tested on:      Win <span class="hljs-number">7</span> (x64)<br>; Written by:     iPhilip<br>; ===============================================================================================================================<br><br>GetDesktopIconUnderMouse() &#123;<br>static MEM_COMMIT := <span class="hljs-number">0</span>x1000, MEM_RELEASE := <span class="hljs-number">0</span>x8000, PAGE_ReadWRITE := <span class="hljs-number">0</span>x04<br>, PROCESS_VM_OPERATION := <span class="hljs-number">0</span>x0008, PROCESS_VM_READ := <span class="hljs-number">0</span>x0010<br>, LVM_GETITEMCOUNT := <span class="hljs-number">0</span>x1004, LVM_GETITEMRECT := <span class="hljs-number">0</span>x100E<br><br>Icon := <span class="hljs-string">&quot;&quot;</span><br>MouseGetPos, x, y, hwnd<br>if not (hwnd = <span class="hljs-built_in">WinExist</span>(<span class="hljs-string">&quot;ahk_class Progman&quot;</span>) || hwnd = <span class="hljs-built_in">WinExist</span>(<span class="hljs-string">&quot;ahk_class WorkerW&quot;</span>))<br>return<br>ControlGet, hwnd, HWND, , SysListView321<br>if not <span class="hljs-built_in">WinExist</span>(<span class="hljs-string">&quot;ahk_id&quot;</span> hwnd)<br>return<br>WinGet, pid, PID<br>if (hProcess := <span class="hljs-built_in">DllCall</span>(<span class="hljs-string">&quot;OpenProcess&quot;</span> , <span class="hljs-string">&quot;UInt&quot;</span>, Process_VM_OPERATION|Process_VM_Read, <span class="hljs-string">&quot;Int&quot;</span>,  false, <span class="hljs-string">&quot;UInt&quot;</span>, pid)) &#123;<br>VarSetCapacity(iCoord, <span class="hljs-number">16</span>)<br>SendMessage, %LVM_GETITEMCOUNT%, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>loop, %ErrorLevel% &#123;<br>pItemCoord := <span class="hljs-built_in">DllCall</span>(<span class="hljs-string">&quot;VirtualAllocEx&quot;</span>, <span class="hljs-string">&quot;Ptr&quot;</span>, hProcess, <span class="hljs-string">&quot;Ptr&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;UInt&quot;</span>, <span class="hljs-number">16</span>, <span class="hljs-string">&quot;UInt&quot;</span>, MEM_COMMIT, <span class="hljs-string">&quot;UInt&quot;</span>, PAGE_ReadWRITE)<br>SendMessage, %LVM_GETITEMRECT%, % A_Index-<span class="hljs-number">1</span>, %pItemCoord%<br><span class="hljs-built_in">DllCall</span>(<span class="hljs-string">&quot;ReadProcessMemory&quot;</span>, <span class="hljs-string">&quot;Ptr&quot;</span>, hProcess, <span class="hljs-string">&quot;Ptr&quot;</span>, pItemCoord, <span class="hljs-string">&quot;Ptr&quot;</span>, &amp;iCoord, <span class="hljs-string">&quot;UInt&quot;</span>, <span class="hljs-number">16</span>, <span class="hljs-string">&quot;UInt&quot;</span>, <span class="hljs-number">0</span>)<br><span class="hljs-built_in">DllCall</span>(<span class="hljs-string">&quot;VirtualFreeEx&quot;</span>, <span class="hljs-string">&quot;Ptr&quot;</span>, hProcess, <span class="hljs-string">&quot;Ptr&quot;</span>, pItemCoord, <span class="hljs-string">&quot;UInt&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;UInt&quot;</span>, MEM_RELEASE)<br>left   := <span class="hljs-built_in">NumGet</span>(iCoord,  <span class="hljs-number">0</span>, <span class="hljs-string">&quot;Int&quot;</span>)<br>top    := <span class="hljs-built_in">NumGet</span>(iCoord,  <span class="hljs-number">4</span>, <span class="hljs-string">&quot;Int&quot;</span>)<br>Right  := <span class="hljs-built_in">NumGet</span>(iCoord,  <span class="hljs-number">8</span>, <span class="hljs-string">&quot;Int&quot;</span>)<br>bottom := <span class="hljs-built_in">NumGet</span>(iCoord, <span class="hljs-number">12</span>, <span class="hljs-string">&quot;Int&quot;</span>)<br>if (left &lt; x and x &lt; Right and top &lt; y and y &lt; bottom) &#123;<br>ControlGet, list, List<br>RegExMatch(StrSplit(list, &quot;`n&quot;)<span class="hljs-selector-attr">[A_Index]</span>, &quot;O)(.*)\t(.*)\t(.*)\t(.*)&quot;, Match)<br><span class="hljs-attribute">Icon</span> := &#123;<span class="hljs-attribute">left</span><span class="hljs-selector-pseudo">:left</span>, <span class="hljs-attribute">top</span>:top, Right:Right, bottom:bottom<br>, name:Match[<span class="hljs-number">1</span>], size:Match[<span class="hljs-number">2</span>], type:Match[<span class="hljs-number">3</span>]<br>; Delete extraneous date characters (https://goo.gl/pMw6AM):<br>; - Unicode LTR (<span class="hljs-attribute">Left</span>-<span class="hljs-selector-tag">to</span>-<span class="hljs-attribute">Right</span>) <span class="hljs-selector-tag">mark</span> (<span class="hljs-number">0</span>x200E = <span class="hljs-number">8206</span>)<br>; - Unicode RTL (<span class="hljs-attribute">Right</span>-<span class="hljs-selector-tag">to</span>-<span class="hljs-attribute">Left</span>) <span class="hljs-selector-tag">mark</span> (<span class="hljs-number">0</span>x200F = <span class="hljs-number">8207</span>)<br>, date:<span class="hljs-built_in">RegExReplace</span>(Match[<span class="hljs-number">4</span>], A_IsUnicode ? <span class="hljs-string">&quot;[\x&#123;200E&#125;-\x&#123;200F&#125;]&quot;</span> : <span class="hljs-string">&quot;\?&quot;</span>)&#125;<br>break<br>&#125;<br>&#125;<br>DllCall(&quot;CloseHandle&quot;, &quot;Ptr&quot;, hProcess)<br>&#125;<br>return <span class="hljs-attribute">Icon</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>3、保存编辑的文件，右击，选择Run Script，运行成功后就可以使用了！</p><h2 id="开机自启"><a class="markdownIt-Anchor" href="#开机自启"></a> 开机自启</h2><p>如果想要功能在开机的时候自动启动，可以进行如下操作： 整体的思路就是生成exe文件，放到系统自启动文件内。</p><p>1、打开Convert .ahk to .exe文件，对ahk脚本进行exe文件生成：</p><p><img src="https://s2.loli.net/2022/12/25/bRBa627Gq8iSmDt.png" alt="" /></p><p>2、进行文件选择和生成文件命名：</p><p><img src="https://s2.loli.net/2022/12/25/s4VMbXx7tH9IUTh.png" alt="" /></p><p>3.在系统启动文件夹 C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp 内粘贴 生成的exe文件。此时会有查毒软件提醒，允许就行。</p><p><img src="https://s2.loli.net/2022/12/25/bRBa627Gq8iSmDt.png" alt="" /></p><p>大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> Autohotkey </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Autohotkey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web开发</title>
      <link href="/2022/12/22/Web/"/>
      <url>/2022/12/22/Web/</url>
      
        <content type="html"><![CDATA[<h1 id="web开发"><a class="markdownIt-Anchor" href="#web开发"></a> Web开发</h1><h2 id="flask"><a class="markdownIt-Anchor" href="#flask"></a> Flask</h2><p>Flask框架为了方便书写标签，用户把返回给浏览器的字符串写入到文件里，再由flask框架读取文件。</p><h2 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h2><h3 id="头部信息"><a class="markdownIt-Anchor" href="#头部信息"></a> 头部信息</h3><h4 id="浏览器标签页的标题"><a class="markdownIt-Anchor" href="#浏览器标签页的标题"></a> 浏览器标签页的标题</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>文档标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="返回字符串的编码方式"><a class="markdownIt-Anchor" href="#返回字符串的编码方式"></a> 返回字符串的编码方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="body信息"><a class="markdownIt-Anchor" href="#body信息"></a> body信息</h3><h4 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h4><p>一级标题，随着数字变化标题级数变化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>first<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="div和span"><a class="markdownIt-Anchor" href="#div和span"></a> div和span</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>内容<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><br>内容<br><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>div中的内容占用一整行，块级标签</li><li>span，自己多大占多少，内联标签</li></ul><h3 id="超链接"><a class="markdownIt-Anchor" href="#超链接"></a> 超链接</h3><p>跳转到我的博客，target=&quot;_blank&quot;加入是新生成一个标签页</p><p>a标签无法直接添加宽度和高度</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://chuiyugin.github.io/&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>我的博客<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图片地址&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 10% ; height: 20%&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="嵌套"><a class="markdownIt-Anchor" href="#嵌套"></a> 嵌套</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://chuiyugin.github.io/&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 50%&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/fast_conv_1.png&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="列表标签"><a class="markdownIt-Anchor" href="#列表标签"></a> 列表标签</h3><p>无序号列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>带序号列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>         <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span> ID <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>    <br>         <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span> 姓名 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>     <br>         <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span> 年龄 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>    <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <br>  <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>   <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>fcs<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>     <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>       <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>   <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>xyj<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>     <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>       <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>   <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>shy<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>    <br>         <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>       <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>    <br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="input系列"><a class="markdownIt-Anchor" href="#input系列"></a> Input系列</h3><p>文本输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>密码输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>选择文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>单选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;n1&quot;</span>&gt;</span>男<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;n1&quot;</span>&gt;</span>女<br></code></pre></td></tr></table></figure><p>复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;buton&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span>  ---&gt;普通按钮<br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span> ---&gt;提交表单<br></code></pre></td></tr></table></figure><p>下拉框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span>广州<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><p>多行文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="请求"><a class="markdownIt-Anchor" href="#请求"></a> 请求</h2><h3 id="get请求"><a class="markdownIt-Anchor" href="#get请求"></a> GET请求</h3><p>现象：跳转，向后台传入数据会拼接在URL上。</p><ul><li>GET请求的数据会在URL上体现。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/do/reg&quot;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">do_register</span>():<br>    <span class="hljs-comment">#1.接收到的数据</span><br>    <span class="hljs-built_in">print</span>(request.args)<br>    <span class="hljs-comment">#给用户返回结果</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;注册成功&quot;</span><br></code></pre></td></tr></table></figure><h3 id="post请求"><a class="markdownIt-Anchor" href="#post请求"></a> POST请求</h3><p>现象：提交数据不在URL中，体现在请求体中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/post/reg&quot;</span>,methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">post_register</span>():<br>    <span class="hljs-comment">#1.接收到的数据</span><br>    <span class="hljs-built_in">print</span>(request.form)<br>    user = request.form.get(<span class="hljs-string">&quot;user&quot;</span>)<br>    psw = request.form.get(<span class="hljs-string">&quot;psw&quot;</span>)<br>    <span class="hljs-built_in">print</span>(user)<br>    <span class="hljs-built_in">print</span>(psw)<br>    <span class="hljs-comment">#给用户返回结果</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;注册成功&quot;</span><br></code></pre></td></tr></table></figure><h3 id="提交数据"><a class="markdownIt-Anchor" href="#提交数据"></a> 提交数据</h3><p>form标签包裹要提交的数据标签</p><ul><li>提交方式：method=&quot;get&quot;或者method=“post”</li><li>提交的地址：action=“/xx/xx/xxx”</li><li>在form标签里必须要有submit标签</li><li>Input系列标签必须要加name，提交时能够解析对应的名字，而且只有Input的内容才会提交</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>注册界面<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/post/reg&quot;</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                 用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span>/&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                 密码： <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;psw&quot;</span>/&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <br>              <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                 <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="css样式"><a class="markdownIt-Anchor" href="#css样式"></a> CSS样式</h2><h3 id="demo"><a class="markdownIt-Anchor" href="#demo"></a> Demo</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;!DOCTYPE <span class="hljs-selector-tag">html</span>&gt;<br>&lt;<span class="hljs-selector-tag">html</span> lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-<span class="hljs-number">8</span>&quot;&gt;<br>    &lt;title&gt;用户注册&lt;/title&gt;<br>    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/commons<span class="hljs-selector-class">.css</span>&quot;&gt;<br>    &lt;style&gt;<br>        <span class="hljs-selector-class">.c1</span>&#123;<br>            <span class="hljs-attribute">color</span>:green;<br>        &#125;<br><br>        <span class="hljs-selector-class">.c2</span>&#123;<br>            <span class="hljs-attribute">height</span>:<span class="hljs-number">50px</span>;<br>        &#125;<br><br>    &lt;/style&gt;<br><br>&lt;/head&gt;<br>&lt;<span class="hljs-selector-tag">body</span>&gt;<br><br>&lt;<span class="hljs-selector-tag">h1</span> class=&quot;bl&quot;&gt;注册界面&lt;/<span class="hljs-selector-tag">h1</span>&gt;<br>    &lt;<span class="hljs-selector-tag">form</span> method=&quot;post&quot; action=&quot;/post/reg&quot;&gt;<br>          &lt;<span class="hljs-selector-tag">div</span> class=&quot;c2&quot;&gt;<br>             用户名：&lt;<span class="hljs-selector-tag">input</span> type=&quot;text&quot; name=&quot;user&quot;/&gt;<br>          &lt;/<span class="hljs-selector-tag">div</span>&gt;<br><br>          &lt;<span class="hljs-selector-tag">div</span> class=&quot;c2&quot;&gt;<br>             密码： &lt;<span class="hljs-selector-tag">input</span> type=&quot;password&quot; name=&quot;psw&quot;/&gt;<br>          &lt;/<span class="hljs-selector-tag">div</span>&gt;<br> &lt;<span class="hljs-selector-tag">div</span>&gt;<br>    &lt;<span class="hljs-selector-tag">input</span> type=&quot;submit&quot; /&gt;<br>  &lt;/<span class="hljs-selector-tag">div</span>&gt;<br>    &lt;/<span class="hljs-selector-tag">form</span>&gt;<br>&lt;/<span class="hljs-selector-tag">body</span>&gt;<br>&lt;/<span class="hljs-selector-tag">html</span>&gt;<br></code></pre></td></tr></table></figure><ul><li>放在head部位用css样式。</li></ul><h3 id="选择器"><a class="markdownIt-Anchor" href="#选择器"></a> 选择器</h3><ul><li>ID选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">#标识名&#123;<br>        属性:属性值;<br>        属性:属性值;<br>        &#125;<br></code></pre></td></tr></table></figure><ul><li><p>类选择器（用的最多）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">.类名&#123;<br>        属性:属性值;<br>        属性:属性值;<br>        &#125;<br></code></pre></td></tr></table></figure></li><li><p>标签选择器</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">标签名&#123;<br>   <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>属性选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&#x27;text&#x27;</span>]</span>&#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>&#125;<br><br><span class="hljs-selector-class">.v1</span><span class="hljs-selector-attr">[xx=<span class="hljs-string">&quot;123&quot;</span>]</span>&#123;<br>    <span class="hljs-attribute">color</span>:gold;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>后代选择器</li></ul><p>先找到包含yy这个类的部分，再将yy内部含有li标签的都变为这个样式。（子子孙孙）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.yy</span> <span class="hljs-selector-tag">li</span>&#123;<br>   <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><p>只找子代</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.yy</span>&gt;<span class="hljs-selector-tag">li</span>&#123;<br>   <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="样式"><a class="markdownIt-Anchor" href="#样式"></a> 样式</h3><h4 id="高度和宽度"><a class="markdownIt-Anchor" href="#高度和宽度"></a> 高度和宽度</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.c1</span>&#123;<br>   <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span><br>   width:<span class="hljs-number">500px</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>宽度支持百分比，高度不支持。</li><li>行内标签：默认无效</li><li>块级标签：默认有效</li></ul><h4 id="块级和行内标签"><a class="markdownIt-Anchor" href="#块级和行内标签"></a> 块级和行内标签</h4><ul><li>display: inline-block;</li><li>具有行内和块级特性</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.c3</span>&#123;<br>                <span class="hljs-attribute">display</span>: inline-block;<br>                <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;<br>                <span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;<br>                <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>            &#125;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>display: inline;强制行内</p><p>display: block;强制块级</p><h4 id="字体和颜色"><a class="markdownIt-Anchor" href="#字体和颜色"></a> 字体和颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.bl</span>&#123;<br>    <span class="hljs-attribute">color</span>:deepskyblue;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">59px</span>;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;<br>    <span class="hljs-attribute">font-family</span>:  Microsoft Yahei;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="文字对齐方式"><a class="markdownIt-Anchor" href="#文字对齐方式"></a> 文字对齐方式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.test</span>&#123;<br>         <span class="hljs-attribute">height</span>:<span class="hljs-number">100px</span>;<br>         <span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;<br>         <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br><br>         <span class="hljs-attribute">text-align</span>: center;<span class="hljs-comment">/*水平方向居中*/</span><br>         <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;<span class="hljs-comment">/*垂直方向居中 和高度像素值相同*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="浮动"><a class="markdownIt-Anchor" href="#浮动"></a> 浮动</h3><p>将span内容移动到右边显示</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span>&gt;<br>        &lt;<span class="hljs-selector-tag">span</span>&gt;测试<span class="hljs-number">1</span>&lt;/<span class="hljs-selector-tag">span</span>&gt;<br>        &lt;<span class="hljs-selector-tag">span</span> style=&quot;<span class="hljs-attribute">float</span><span class="hljs-selector-pseudo">:right</span>&quot;&gt;测试<span class="hljs-number">2</span>&lt;/<span class="hljs-selector-tag">span</span>&gt;<br>    &lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><p>浮动之后，块级标签不会占用一整行，但是浮动之后无法破坏了文档流，<strong>需要在最后加入</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">clear</span>: both;&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="内边距"><a class="markdownIt-Anchor" href="#内边距"></a> 内边距</h3><p>边框内部设置内边距,不加左右就是全部</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">padding-top</span>:<span class="hljs-number">20px</span>;<br><span class="hljs-attribute">padding-left</span>:<span class="hljs-number">20px</span>;<br><span class="hljs-attribute">padding-right</span>:<span class="hljs-number">20px</span>;<br><span class="hljs-attribute">padding-bottom</span>:<span class="hljs-number">20px</span>;<br><span class="hljs-attribute">padding</span>:<span class="hljs-number">20px</span>;<br></code></pre></td></tr></table></figure><h3 id="外边距"><a class="markdownIt-Anchor" href="#外边距"></a> 外边距</h3><p>margin-top、margin-left、margin-right、margin-bottom</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">height</span>:<span class="hljs-number">200px</span>;<span class="hljs-attribute">background-color</span>:dodgerblue;&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">height</span>:<span class="hljs-number">200px</span>;<span class="hljs-attribute">background-color</span>:red;<span class="hljs-attribute">margin-top</span>:<span class="hljs-number">20px</span>;&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="去除外部间距"><a class="markdownIt-Anchor" href="#去除外部间距"></a> 去除外部间距</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>     <span class="hljs-selector-tag">body</span>&#123;<br>           <span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> ;<br>         &#125;<br>&lt;/style&gt;    <br></code></pre></td></tr></table></figure><h3 id="居中"><a class="markdownIt-Anchor" href="#居中"></a> 居中</h3><ul><li>内容居中：text-align: center;</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">width</span>:<span class="hljs-number">200px</span>;<span class="hljs-attribute">text-align</span>: center;&quot;&gt;&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><ul><li>区域居中：自己要有宽度加</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">margin-left</span>:auto;<br><span class="hljs-attribute">margin-right</span>:auto;<br></code></pre></td></tr></table></figure><h3 id="鼠标放上去变色"><a class="markdownIt-Anchor" href="#鼠标放上去变色"></a> 鼠标放上去变色</h3><p>主要： ：hover</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.sub-header</span> <span class="hljs-selector-class">.menu_list</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff6700</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="position定位"><a class="markdownIt-Anchor" href="#position定位"></a> position定位</h3><h4 id="fixed"><a class="markdownIt-Anchor" href="#fixed"></a> fixed</h4><p>固定在窗口的某个位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.back</span>&#123;<br>    <span class="hljs-attribute">position</span>: fixed;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">60px</span>;<br>    <span class="hljs-attribute">height</span>:<span class="hljs-number">60px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>    <span class="hljs-attribute">right</span>:<span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">top</span>:<span class="hljs-number">500px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="relative和absolute"><a class="markdownIt-Anchor" href="#relative和absolute"></a> relative和absolute</h4><p>加入absolute的相对relative的位置变化。</p><h2 id="bootstrap"><a class="markdownIt-Anchor" href="#bootstrap"></a> BootStrap</h2><h3 id="导航"><a class="markdownIt-Anchor" href="#导航"></a> 导航</h3><p><a href="https://v3.bootcss.com/components/#nav">组件 · Bootstrap v3 中文文档 | Bootstrap 中文网 (bootcss.com)</a></p><h3 id="栅格"><a class="markdownIt-Anchor" href="#栅格"></a> 栅格</h3><p><a href="https://v3.bootcss.com/css/#grid">全局 CSS 样式 · Bootstrap v3 中文文档 | Bootstrap 中文网 (bootcss.com)</a></p><ul><li><p>把整体分为12格</p></li><li><p>分类</p><ul><li><p>响应式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.col-sm-</span>  <span class="hljs-number">750px</span><br><span class="hljs-selector-class">.col-md-</span>  <span class="hljs-number">970px</span><br><span class="hljs-selector-class">.col-lg-</span>  <span class="hljs-number">1170px</span><br></code></pre></td></tr></table></figure></li><li><p>非响应式</p><p>.col-xs-</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-xs-<span class="hljs-number">6</span>&quot; style=&quot;<span class="hljs-attribute">background-color</span>: <span class="hljs-number">#2aabd2</span><span class="hljs-string">&quot;&gt;  1&lt;/div&gt;</span><br><span class="hljs-string"> &lt;div class=&quot;</span>col-xs-<span class="hljs-number">10</span><span class="hljs-string">&quot; style=&quot;</span>background-color: <span class="hljs-number">#5cb85c</span><span class="hljs-string">&quot;&gt; 2 &lt;/div&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>列偏移</p></li></ul><p>col-xs-offset-2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-xs-offset-<span class="hljs-number">2</span> col-xs-<span class="hljs-number">6</span>&quot; style=&quot;<span class="hljs-attribute">background-color</span>: <span class="hljs-number">#2aabd2</span><span class="hljs-string">&quot;&gt;  1&lt;/div&gt;</span><br></code></pre></td></tr></table></figure><h3 id="container"><a class="markdownIt-Anchor" href="#container"></a> container</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;container&quot;&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-sm-<span class="hljs-number">9</span>&quot;&gt;左边&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-sm-<span class="hljs-number">3</span>&quot;&gt;右边&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span> class=&quot;container-fluid&quot;&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-sm-<span class="hljs-number">9</span>&quot;&gt;左边&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=&quot;col-sm-<span class="hljs-number">3</span>&quot;&gt;右边&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure><h3 id="图标"><a class="markdownIt-Anchor" href="#图标"></a> 图标</h3><p>1.bootsrap</p><p>2.font awesome</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;script <span class="hljs-attribute">src</span>=&quot;https://kit.fontawesome.com/<span class="hljs-number">5</span>efd8aed42.js<span class="hljs-string">&quot; crossorigin=&quot;</span>anonymous<span class="hljs-string">&quot;&gt;&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><h2 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> JavaScript</h2><p>是一门编程语言，浏览器是JavaScript语言的解释器。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;script <span class="hljs-attribute">src</span>=&quot;static/js/jquery-<span class="hljs-number">3.6</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.min</span><span class="hljs-selector-class">.js</span>&quot;&gt;&lt;/script&gt;<br>&lt;script <span class="hljs-attribute">src</span>=&quot;static/plugins/bootstrap-<span class="hljs-number">3.4</span>.<span class="hljs-number">1</span>/js/bootstrap<span class="hljs-selector-class">.min</span><span class="hljs-selector-class">.js</span>&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="dom和bom"><a class="markdownIt-Anchor" href="#dom和bom"></a> DOM和BOM</h3><p>相当于语言的内置模块</p><h4 id="dom"><a class="markdownIt-Anchor" href="#dom"></a> DOM</h4><p>DOM，就是一个模块，模块可以对HTML页面中的标签进行操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//创建标签&lt;div&gt;&lt;/div&gt;</span><br><span class="hljs-keyword">var</span> tag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElementById</span>(<span class="hljs-string">&quot;div&quot;</span>);<br><br><span class="hljs-comment">//在标签中添加内容</span><br> tag.<span class="hljs-property">innerText</span> = <span class="hljs-string">&quot;123&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//根据ID获取标签</span><br><span class="hljs-keyword">var</span> tag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;xx&quot;</span>);<br><br><span class="hljs-comment">//在标签中添加内容</span><br> tag.<span class="hljs-property">innerText</span> = <span class="hljs-string">&quot;123&quot;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;city&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--    &lt;li&gt;北京&lt;/li&gt; --&gt;</span><br>    <span class="hljs-comment">&lt;!--    &lt;li&gt;上海&lt;/li&gt; --&gt;</span><br>    <span class="hljs-comment">&lt;!--    &lt;li&gt;深圳&lt;/li&gt; --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> cityList = [<span class="hljs-string">&quot;北京&quot;</span>, <span class="hljs-string">&quot;上海&quot;</span>, <span class="hljs-string">&quot;深圳&quot;</span>, <span class="hljs-string">&quot;广州&quot;</span>];</span><br><span class="language-javascript">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> idx <span class="hljs-keyword">in</span> cityList) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> text = cityList[idx];</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">//创建li标签</span></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> tag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;li&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-comment">//在标签中添加内容</span></span><br><span class="language-javascript">        tag.<span class="hljs-property">innerText</span> = text;</span><br><span class="language-javascript">        <span class="hljs-comment">//添加到id=city的标签中(DOM)</span></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> parent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;city&quot;</span>);</span><br><span class="language-javascript">        parent.<span class="hljs-title function_">append</span>(tag);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="jquery"><a class="markdownIt-Anchor" href="#jquery"></a> jQuery</h3><p>相当于第三方模块</p><h3 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;小明&quot;</span>;<span class="hljs-comment">//变量</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name);<span class="hljs-comment">//打印</span><br></code></pre></td></tr></table></figure><h3 id="字符串类型"><a class="markdownIt-Anchor" href="#字符串类型"></a> 字符串类型</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;小明&quot;</span>;<span class="hljs-comment">//变量</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;小明&quot;</span>);<span class="hljs-comment">//变量</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//常见功能</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;中国联通&quot;</span>;<br><br><span class="hljs-keyword">var</span> v1 = name.<span class="hljs-property">length</span>;<span class="hljs-comment">//获取长度</span><br><span class="hljs-keyword">var</span> v2 = name[<span class="hljs-number">0</span>];<span class="hljs-comment">//获得第一个&quot;中”</span><br><span class="hljs-keyword">var</span> v3 = name.<span class="hljs-title function_">trim</span>();<span class="hljs-comment">//去除空白</span><br><span class="hljs-keyword">var</span> v4 = name.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>);<span class="hljs-comment">//前取后不取，获得&quot;中国&quot;</span><br></code></pre></td></tr></table></figure><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3><p>定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> v1 = [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>];<br><span class="hljs-keyword">var</span> v2 = <span class="hljs-title class_">Array</span>([<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>]);<br></code></pre></td></tr></table></figure><p>操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> v1 = [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>];<br><span class="hljs-comment">//获取值</span><br><span class="hljs-keyword">var</span> v2 = v1[<span class="hljs-number">0</span>];<br><span class="hljs-comment">//修改值</span><br>v1[<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;小明&quot;</span>;<br><span class="hljs-comment">//在尾部添加值</span><br>v1.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;联通&quot;</span>);<br><span class="hljs-comment">//在前面插入值</span><br>v1.<span class="hljs-title function_">unshift</span>(<span class="hljs-string">&quot;移动&quot;</span>);<br><span class="hljs-comment">//指定位置插入值</span><br><span class="hljs-comment">//格式：v1.splice(索引位置,0,元素);</span><br>v1.<span class="hljs-title function_">splice</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;元素&quot;</span>);<span class="hljs-comment">//[11,&quot;中国&quot;,22,33,44]</span><br><br><span class="hljs-comment">//删除</span><br>v1.<span class="hljs-title function_">pop</span>()<span class="hljs-comment">//尾部删除</span><br>v1.<span class="hljs-title function_">shift</span>()<span class="hljs-comment">//头部删除</span><br>v1.<span class="hljs-title function_">splice</span>(索引位置,<span class="hljs-number">1</span>);<span class="hljs-comment">//删除索引位置的元素</span><br>v1.<span class="hljs-title function_">splice</span>(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<span class="hljs-comment">//删除索引位置2的元素 [11,33,44]</span><br></code></pre></td></tr></table></figure><h3 id="循环"><a class="markdownIt-Anchor" href="#循环"></a> 循环</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> v1 = [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>];<br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> idx <span class="hljs-keyword">in</span> v1)&#123;<br>    <br>   <span class="hljs-comment">//idx=0/1/2/3    data=v1[idx] </span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> v1 = [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>];<br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;v1.<span class="hljs-property">length</span>;i++)&#123;<br>    <br>   <span class="hljs-comment">//i=0/1/2/3    data=v1[idx] </span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="动态标签"><a class="markdownIt-Anchor" href="#动态标签"></a> 动态标签</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> cityList=[<span class="hljs-string">&quot;北京&quot;</span>,<span class="hljs-string">&quot;上海&quot;</span>,<span class="hljs-string">&quot;深圳&quot;</span>,<span class="hljs-string">&quot;广州&quot;</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> idx <span class="hljs-keyword">in</span> cityList)&#123;<br>        <span class="hljs-keyword">var</span> text = cityList[idx];<br><br>        <span class="hljs-comment">//创建li标签</span><br>        <span class="hljs-keyword">var</span> tag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;li&quot;</span>);<br>        <span class="hljs-comment">//在标签中添加内容</span><br>        tag.<span class="hljs-property">innerText</span> = text;<br>        <span class="hljs-comment">//添加到id=city的标签中(DOM)</span><br>        <span class="hljs-keyword">var</span> parent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;city&quot;</span>);<br>        parent.<span class="hljs-title function_">append</span>(tag);<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="对象字典"><a class="markdownIt-Anchor" href="#对象字典"></a> 对象（字典）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">info = &#123;<br>    <span class="hljs-attr">name</span>:<span class="hljs-string">&quot;小明&quot;</span><br>    <span class="hljs-attr">age</span>:<span class="hljs-number">18</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="对对象进行操作"><a class="markdownIt-Anchor" href="#对对象进行操作"></a> 对对象进行操作</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">info.<span class="hljs-property">age</span>  <span class="hljs-comment">//获取内容</span><br>info.<span class="hljs-property">name</span>=<span class="hljs-string">&quot;小红&quot;</span>;  <span class="hljs-comment">//修改内容</span><br><span class="hljs-keyword">delete</span> info[<span class="hljs-string">&quot;name&quot;</span>];  <span class="hljs-comment">//删除内容</span><br></code></pre></td></tr></table></figure><h4 id="对对象进行循环"><a class="markdownIt-Anchor" href="#对对象进行循环"></a> 对对象进行循环</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> info)&#123;<br>   <span class="hljs-comment">//key=name/age     data=info[key]</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="动态表格"><a class="markdownIt-Anchor" href="#动态表格"></a> 动态表格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> dataList = [<br>        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小明&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>&#125;,<br>        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小白&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>&#125;,<br>        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小红&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>&#125;,<br>        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小军&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>&#125;,<br>        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小李&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>&#125;<br>    ];<br><br>    <span class="hljs-keyword">for</span> (idx <span class="hljs-keyword">in</span> dataList) &#123;<br>        <span class="hljs-keyword">var</span> info = dataList[idx];<br>        <span class="hljs-keyword">var</span> tr = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;tr&quot;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> info) &#123;<br>            <span class="hljs-keyword">var</span> my_text = info[key];<br>            <span class="hljs-keyword">var</span> td = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;td&quot;</span>)<br>            td.<span class="hljs-property">innerText</span> = my_text;<br>            tr.<span class="hljs-title function_">appendChild</span>(td);<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> body_tag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;body&quot;</span>);<br>        body_tag.<span class="hljs-title function_">append</span>(tr);<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="条件语句"><a class="markdownIt-Anchor" href="#条件语句"></a> 条件语句</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span>( 条件 ) &#123;<br><br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>&#123;<br><br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>)&#123;<br>   ...<br>&#125;<br><br><span class="hljs-comment">//执行函数</span><br>   <span class="hljs-title function_">func</span>();<br></code></pre></td></tr></table></figure><h3 id="事件绑定"><a class="markdownIt-Anchor" href="#事件绑定"></a> 事件绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my_txt&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;点击添加&quot;</span>  <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;addCityInfo()&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my_city&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addCityInfo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//找到标签</span></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> txtTag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;my_txt&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-comment">//获取用户输入的内容</span></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> new_string = txtTag.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">        <span class="hljs-comment">//判断用户输入是否为空</span></span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (new_string.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//创建新的标签</span></span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> newTag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;li&quot;</span>);</span><br><span class="language-javascript">            newTag.<span class="hljs-property">innerText</span> = new_string;</span><br><span class="language-javascript">            <span class="hljs-comment">//标签添加到ul中</span></span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> parentTag = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;my_city&quot;</span>);</span><br><span class="language-javascript">            parentTag.<span class="hljs-title function_">appendChild</span>(newTag);</span><br><span class="language-javascript">            <span class="hljs-comment">//将输入框内容清空</span></span><br><span class="language-javascript">            txtTag.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-javascript">        &#125;<span class="hljs-keyword">else</span>&#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;输入不能为空！&quot;</span>);</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="jquery-2"><a class="markdownIt-Anchor" href="#jquery-2"></a> JQuery</h2><h3 id="初识jquery"><a class="markdownIt-Anchor" href="#初识jquery"></a> 初识JQuery</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;JQ_test&quot;</span>&gt;</span> JQuery测试 <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  </span><br><span class="language-javascript">    <span class="hljs-comment">//利用JQuery实现某些功能</span></span><br><span class="language-javascript">    <span class="hljs-comment">//找到id=&quot;&quot;的标签并修改</span></span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#JQ_test&quot;</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&quot;JQ修改&quot;</span>);</span><br><span class="language-javascript">    </span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="直接寻找标签"><a class="markdownIt-Anchor" href="#直接寻找标签"></a> 直接寻找标签</h3><ul><li>ID选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;JQ_test&quot;</span>&gt;</span> JQuery测试 <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;#JQ_test&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>样式选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span>中国联通<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;.c1&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>标签选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>中国联通<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;.c1&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>层级选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;.c1.c2 a&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>多选择器</li></ul><p>选择多个标签同时操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;c2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;u1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;.c1,#u1,p&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>属性选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;n1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;n2&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;input[name=&#x27;n1&#x27;]&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="间接寻找标签"><a class="markdownIt-Anchor" href="#间接寻找标签"></a> 间接寻找标签</h3><ul><li>找到上一个兄弟</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>广州<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">prev</span>()<span class="hljs-comment">//上一个</span><br>$(<span class="hljs-string">&quot;#c1&quot;</span>)<br>$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">next</span>()<span class="hljs-comment">//下一个</span><br>$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">next</span>().<span class="hljs-title function_">next</span>()<span class="hljs-comment">//下下一个</span><br>$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">siblings</span>()<span class="hljs-comment">//所有同级标签（兄弟）</span><br></code></pre></td></tr></table></figure><ul><li>找父子</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c2&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>老大<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d2&quot;</span>&gt;</span>老二<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">parent</span>()<span class="hljs-comment">//父亲</span><br>$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">parent</span>()<span class="hljs-comment">//祖父</span><br>$(<span class="hljs-string">&quot;#c2&quot;</span>).<span class="hljs-title function_">children</span>()<span class="hljs-comment">//所有孩子</span><br>$(<span class="hljs-string">&quot;#c2&quot;</span>).<span class="hljs-title function_">children</span>(<span class="hljs-string">&quot;.d2&quot;</span>)<span class="hljs-comment">//所有的孩子中寻找class=d2的孩子</span><br>$(<span class="hljs-string">&quot;#c2&quot;</span>).<span class="hljs-title function_">find</span>(<span class="hljs-string">&quot;.d2&quot;</span>)<span class="hljs-comment">//去寻找class=d2的所有子孙</span><br>$(<span class="hljs-string">&quot;#c2&quot;</span>).<span class="hljs-title function_">find</span>(<span class="hljs-string">&quot;div&quot;</span>)<span class="hljs-comment">//去寻找div标签的所有子孙</span><br></code></pre></td></tr></table></figure><h3 id="案例菜单切换"><a class="markdownIt-Anchor" href="#案例菜单切换"></a> 案例：菜单切换</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>菜单<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.menu</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#2aabd2</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.menu</span> <span class="hljs-selector-class">.header</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">cursor</span>: pointer; <span class="hljs-comment">/* 鼠标放上去变成手 */</span></span><br><span class="language-css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">5px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> dotted <span class="hljs-number">#ddd</span>;</span><br><span class="language-css">            <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">#37ff00</span>, <span class="hljs-number">#16a5d3</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.item</span> <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">            <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="language-css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span>;</span><br><span class="language-css">            <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> dotted <span class="hljs-number">#ddd</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.hide</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;menu&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickme(this)&quot;</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content hide&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>海淀区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>朝阳区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>大兴区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>昌平区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickme(this)&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content hide&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>宝山区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>普陀区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>浦东新区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>青浦区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickme(this)&quot;</span>&gt;</span>北京2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content hide&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>海淀区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>朝阳区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>大兴区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>昌平区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickme(this)&quot;</span>&gt;</span>上海2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content hide&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>宝山区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>普陀区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>浦东新区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>青浦区<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">//方法一：大家都可以展示</span></span><br><span class="language-javascript">    <span class="hljs-comment">// let i = 0;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// function clickme(self) &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     if (i++ % 2 === 0) &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//         $(self).next().removeClass(&quot;hide&quot;);</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     &#125; else &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//         $(self).next().addClass(&quot;hide&quot;);</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     &#125;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//方法二：大家都可以展示</span></span><br><span class="language-javascript">    <span class="hljs-comment">// function clickme(self) &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     var hasHide = $(self).next().hasClass(&quot;hide&quot;)</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     if (hasHide) &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//         $(self).next().removeClass(&quot;hide&quot;);</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     &#125; else &#123;</span></span><br><span class="language-javascript">    <span class="hljs-comment">//         $(self).next().addClass(&quot;hide&quot;);</span></span><br><span class="language-javascript">    <span class="hljs-comment">//     &#125;</span></span><br><span class="language-javascript">    <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">//只展示自己，隐藏别人</span></span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">clickme</span>(<span class="hljs-params">self</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//把自己的内容展示出来</span></span><br><span class="language-javascript">        $(self).<span class="hljs-title function_">next</span>().<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&quot;hide&quot;</span>);</span><br><span class="language-javascript">        $(self).<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">siblings</span>().<span class="hljs-title function_">find</span>(<span class="hljs-string">&quot;.content&quot;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&quot;hide&quot;</span>);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="操作样式"><a class="markdownIt-Anchor" href="#操作样式"></a> 操作样式</h3><ul><li><p>addClass</p></li><li><p>removeClass</p></li><li><p>hasClass</p></li></ul><h3 id="值的操作"><a class="markdownIt-Anchor" href="#值的操作"></a> 值的操作</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c1&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">text</span>() <span class="hljs-comment">//获取内容</span><br>$(<span class="hljs-string">&quot;#c1&quot;</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&quot;测试&quot;</span>) <span class="hljs-comment">//设置内容</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c2&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;c2&quot;</span>).<span class="hljs-title function_">val</span>()   <span class="hljs-comment">//获取用户输入值</span><br>$(<span class="hljs-string">&quot;c2&quot;</span>).<span class="hljs-title function_">val</span>(<span class="hljs-string">&quot;txt&quot;</span>)   <span class="hljs-comment">//设置用户输入值</span><br></code></pre></td></tr></table></figure><h3 id="案例动态创建数据"><a class="markdownIt-Anchor" href="#案例动态创建数据"></a> 案例：动态创建数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>动态创建数据<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txtUser&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txtEmail&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;邮箱&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;getinfo()&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;view&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">getinfo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> username = $(<span class="hljs-string">&quot;#txtUser&quot;</span>).<span class="hljs-title function_">val</span>();   <span class="hljs-comment">//设置用户输入值</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> email = $(<span class="hljs-string">&quot;#txtEmail&quot;</span>).<span class="hljs-title function_">val</span>();</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> datastr = username + <span class="hljs-string">&#x27;-&#x27;</span> + email;</span><br><span class="language-javascript">        <span class="hljs-comment">//创建li标签</span></span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> lusr = $(<span class="hljs-string">&quot;&lt;li&gt;&quot;</span>).<span class="hljs-title function_">text</span>(datastr);</span><br><span class="language-javascript">        <span class="hljs-comment">//把新创建的li标签添加到ul里面</span></span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#view&quot;</span>).<span class="hljs-title function_">append</span>(lusr);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="事件"><a class="markdownIt-Anchor" href="#事件"></a> 事件</h3><p>绑定事件直接用 <code>$(&quot;&quot;)</code> 获取到标签直接定义事件即可 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&quot;.item&quot;</span>).<span class="hljs-title function_">children</span>().<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&quot;hello python&quot;</span>)<br>        $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">remove</span>()<br>    &#125;)<br></code></pre></td></tr></table></figure><h3 id="案例设置和删除标签"><a class="markdownIt-Anchor" href="#案例设置和删除标签"></a> 案例：设置和删除标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>设置和删除标签<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.item</span> <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">            <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">let</span> a = $(<span class="hljs-string">&quot;.item&quot;</span>).<span class="hljs-title function_">children</span>();</span><br><span class="language-javascript">    $(a).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&quot;hello python&quot;</span>);<span class="hljs-comment">//设置标签</span></span><br><span class="language-javascript">        $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">remove</span>();<span class="hljs-comment">//删除标签</span></span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>当页面框架加载完成之后执行代码(封装在$function之内):</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    $(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            $(<span class="hljs-string">&quot;.item&quot;</span>).<span class="hljs-title function_">children</span>().<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">text</span>(<span class="hljs-string">&quot;hello python&quot;</span>);</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="案例表格操作"><a class="markdownIt-Anchor" href="#案例表格操作"></a> 案例：表格操作</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Alleyf<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;删除&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>CHUIYUGIN<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;删除&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>小明<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;删除&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    $(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 找到所有class为delete的标签</span></span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;.delete&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 删除当前行</span></span><br><span class="language-javascript">            $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">parent</span>().<span class="hljs-title function_">remove</span>();</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="前端整合"><a class="markdownIt-Anchor" href="#前端整合"></a> 前端整合</h2><ul><li>HTNL</li><li>CSS</li><li>JavaScript</li><li>Bootstrap(动态效果依赖jQuery)</li></ul><h3 id="案例添加数据页面"><a class="markdownIt-Anchor" href="#案例添加数据页面"></a> 案例：添加数据页面</h3><blockquote><p>人员信息录入功能，需要提供用户信息：</p><p>用户名、年龄、薪资、部门、入职时间（*）</p><ul><li>时间的选择：不能输入；选择：（插件）datetimepicker</li></ul><ul><li>下载插件</li><li>应用插件</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>添加数据页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--生产版本--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;static/plugins/bootstrap-3.4.1/css/bootstrap.min.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;static/plugins/bootstrap-datetimepicker-master/css/bootstrap-datetimepicker.min.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 20px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-horizontal&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row clearfix&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-6&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-10&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;姓名&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-6&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-10&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;年龄&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row clearfix&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-6&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>薪资<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-10&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;薪资&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-6&quot;</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>部门<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-10&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;brabch&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;inputbranch&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>IT部门<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>销售部门<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>人事资源管理部门<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>售后部门<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>运营部门<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row clearfix&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-6&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-2 control-label&quot;</span>&gt;</span>入职日期<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-10&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dt&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;入职日期&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-sm-offset-6 col-sm-10&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>提 交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><br><span class="hljs-comment">&lt;!--JS代码块位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://kit.fontawesome.com/5efd8aed42.js&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/js/jquery-3.6.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/plugins/bootstrap-3.4.1/js/bootstrap.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/plugins/bootstrap-datetimepicker-master/js/bootstrap-datetimepicker.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;static/plugins/bootstrap-datetimepicker-master/js/locales/bootstrap-datetimepicker.zh-CN.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">    $(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        $(<span class="hljs-string">&#x27;#dt&#x27;</span>).<span class="hljs-title function_">datetimepicker</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">fomat</span>: <span class="hljs-string">&#x27;yyyy-mm-dd&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">startDate</span>: <span class="hljs-string">&#x27;0&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">language</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">autoclose</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="mysql"><a class="markdownIt-Anchor" href="#mysql"></a> MySQL</h2><h3 id="进入mysqlcmd进入终端"><a class="markdownIt-Anchor" href="#进入mysqlcmd进入终端"></a> 进入MySQL：cmd进入终端</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql <span class="hljs-operator">-</span>u root <span class="hljs-operator">-</span>p1234<br></code></pre></td></tr></table></figure><h3 id="查看"><a class="markdownIt-Anchor" href="#查看"></a> 查看</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure><h3 id="退出"><a class="markdownIt-Anchor" href="#退出"></a> 退出</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">exit;<br></code></pre></td></tr></table></figure><h3 id="基本数据类型"><a class="markdownIt-Anchor" href="#基本数据类型"></a> 基本数据类型</h3><table><thead><tr><th style="text-align:left">类型</th><th>用途</th></tr></thead><tbody><tr><td style="text-align:left">tinyint</td><td>短整形()，相当于java的short，有符号(默认)，取值范围：-128<sub>127；无符号(用关键词unsigned指定)，取值范围：0</sub>255</td></tr><tr><td style="text-align:left"><strong>int</strong></td><td>整形，相当于java的int</td></tr><tr><td style="text-align:left">bigint</td><td>长整形，相当于java的long</td></tr><tr><td style="text-align:left">float</td><td>单精度浮点型</td></tr><tr><td style="text-align:left"><strong>double</strong></td><td>双精度浮点型</td></tr><tr><td style="text-align:left">decimal</td><td>准确的小数值，eg：wage decimal(m,n) –总共m位数(负号不算)，其中小数点后有n位，m<s>max</s>=65，n<s>max</s>=30.</td></tr><tr><td style="text-align:left"><strong>datatime</strong></td><td>日期类型，YYYY-MM-DD HH:MM:SS(2022-12-09 21:03:00)，dt转为字符串类型显示**（dt.strftime(“%Y-%m-%d %H:%M:%S”)）**</td></tr><tr><td style="text-align:left">data</td><td>日期类型（无时分秒）YYYY-MM-DD</td></tr><tr><td style="text-align:left">timestamp</td><td>日期类型（可存储时间戳）</td></tr><tr><td style="text-align:left"><strong>char</strong></td><td>定长字符，固定字符长度，最大255个字符，速度快，常存储：手机号，邮箱，加密后的密码等</td></tr><tr><td style="text-align:left"><strong>varchar</strong></td><td>不定长字符，有多少存多少，最大65535个字节，节省空间，长度是动态变化的。</td></tr><tr><td style="text-align:left">text</td><td>大文字，用于存储很长的字符内容，可存储65535个字符，例如：文章，新闻等。</td></tr><tr><td style="text-align:left">mediumtext</td><td>中等文本，最多存储16777215（2<sup>24</sup>-1)个字符</td></tr><tr><td style="text-align:left">longtext</td><td>长文本，最多存储4294967295（4GB）（2<sup>32</sup>-1)个字符</td></tr><tr><td style="text-align:left">blob</td><td>字节数据类型，存储图片、音频等文件</td></tr></tbody></table><h3 id="数据库管理文件夹"><a class="markdownIt-Anchor" href="#数据库管理文件夹"></a> 数据库管理(文件夹)</h3><ul><li>查看当前已有数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure><ul><li>创建数据库 (文件夹)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database 数据库名；<br><span class="hljs-keyword">create</span> database 数据库名 <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br></code></pre></td></tr></table></figure><ul><li>删除数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database 数据库名；<br></code></pre></td></tr></table></figure><ul><li>进入数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">use 数据库名；<br></code></pre></td></tr></table></figure><ul><li>查看当前数据库下的所有数据表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> tables；<br></code></pre></td></tr></table></figure><h3 id="数据表管理"><a class="markdownIt-Anchor" href="#数据表管理"></a> 数据表管理</h3><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名(<br>字段名 类型，<br>    字段名 类型，<br>    ···<br>    字段名 类型<br>)<span class="hljs-keyword">default</span> charset<span class="hljs-operator">=</span>utf8；<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名(<br>字段名 类型 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment <span class="hljs-keyword">primary</span> key，<span class="hljs-comment">--主键（不允许为空，不允许重复）自增特性</span><br>    字段名 类型 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>，<span class="hljs-comment">--不允许为空</span><br>    字段名 类型 <span class="hljs-keyword">default</span> <span class="hljs-number">3</span>，<span class="hljs-comment">--插入数据时，默认值为3，当不插入值时默认为3</span><br>    ···<br>    字段名 类型 <span class="hljs-keyword">null</span> <span class="hljs-comment">--允许为空（默认）</span><br>)<span class="hljs-keyword">default</span> charset<span class="hljs-operator">=</span>utf8；<br></code></pre></td></tr></table></figure><blockquote><p><mark>主键一般用于表示当前行的编号</mark>（类似于身份证）。</p></blockquote><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> medocsys(<br>id <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment <span class="hljs-keyword">primary</span> key,<br>name <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    pwd <span class="hljs-type">varchar</span>(<span class="hljs-number">15</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br>) <span class="hljs-keyword">default</span> charset<span class="hljs-operator">=</span>utf8;<br></code></pre></td></tr></table></figure><ul><li>查看创建表的信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> 表名<br></code></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">单条插入<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>，···，字段名) <span class="hljs-keyword">values</span>(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据);<br>批量插入<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>，···，字段名) <span class="hljs-keyword">values</span>(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据),(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据),···(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据);<br></code></pre></td></tr></table></figure><h3 id="数据行操作"><a class="markdownIt-Anchor" href="#数据行操作"></a> 数据行操作</h3><h4 id="新增数据"><a class="markdownIt-Anchor" href="#新增数据"></a> 新增数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">单条插入<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>，···，字段名) <span class="hljs-keyword">values</span>(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据);<br>批量插入<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>，···，字段名) <span class="hljs-keyword">values</span>(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据),(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据),···(数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，···，数据);<br></code></pre></td></tr></table></figure><h4 id="删除数据"><a class="markdownIt-Anchor" href="#删除数据"></a> 删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名；<span class="hljs-comment">--删除所有数据</span><br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件；<span class="hljs-comment">--删除满足条件的数据</span><br></code></pre></td></tr></table></figure><blockquote><p>delete from tb1 where id&gt;=10 or name=”yugin”;</p></blockquote><h4 id="修改数据"><a class="markdownIt-Anchor" href="#修改数据"></a> 修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段名<span class="hljs-operator">=</span>值；<br><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段名<span class="hljs-number">1</span><span class="hljs-operator">=</span>值，字段名<span class="hljs-number">2</span><span class="hljs-operator">=</span>值；<br><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段名<span class="hljs-operator">=</span>值 <span class="hljs-keyword">where</span> 条件；<br>eg：<span class="hljs-keyword">update</span> tb1 <span class="hljs-keyword">set</span> name<span class="hljs-operator">=</span>&quot;yugin&quot;, pwd<span class="hljs-operator">=</span>pwd<span class="hljs-operator">+</span>&quot;10&quot;;<br></code></pre></td></tr></table></figure><h4 id="查询数据"><a class="markdownIt-Anchor" href="#查询数据"></a> 查询数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql">查询表所有数据<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名；<br>查询对应字段的数据<br><span class="hljs-keyword">select</span> 字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span> <span class="hljs-keyword">from</span> 表名；<br>条件查询数据<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> id <span class="hljs-operator">&gt;</span> <span class="hljs-number">3</span>；<br></code></pre></td></tr></table></figure><h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3><p>一般开发：</p><ul><li>创建数据库</li><li>创建数据表</li></ul><blockquote><p><mark>提前用工具创建好</mark></p></blockquote><ul><li>创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database unicom <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br></code></pre></td></tr></table></figure><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> admin(<br>id <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment <span class="hljs-keyword">primary</span> key,<br>    username <span class="hljs-type">varchar</span>(<span class="hljs-number">16</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    password <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    mobile <span class="hljs-type">char</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <br>)<span class="hljs-keyword">default</span> charset<span class="hljs-operator">=</span>utf8;<br></code></pre></td></tr></table></figure><h3 id="python操作mysql"><a class="markdownIt-Anchor" href="#python操作mysql"></a> Python操作MySQL</h3><ul><li>创建数据</li></ul><blockquote><p>在进行增删改的时候需要执行<code>commit</code>，不然数据库没有数据</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><span class="hljs-comment">#1.连接上本地mysql</span><br>conn = pymysql.connect(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,port=<span class="hljs-number">3306</span>,user=<span class="hljs-string">&quot;root&quot;</span>,password=<span class="hljs-string">&quot;1234&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>,db=<span class="hljs-string">&quot;unicom&quot;</span>)<br>cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)<br><br><span class="hljs-comment">#发送指令</span><br>sql=<span class="hljs-string">&quot;insert into admin(username,password,mobile) values(%(name)s,%(psw)s,%(mobile)s)&quot;</span><br>cursor.execute(sql,&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&#x27;alleyf2&#x27;</span>,<span class="hljs-string">&quot;psw&quot;</span>:<span class="hljs-string">&#x27;alleyf1234&#x27;</span>,<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&#x27;18127896898&#x27;</span>&#125;)<br>conn.commit()<br><br><span class="hljs-comment">#关闭</span><br>cursor.close()<br>conn.close()<br></code></pre></td></tr></table></figure><ul><li>查询数据</li></ul><blockquote><p>在进行查询的时候不需要执行<code>commit</code>，但是要执行<code>fetchall/fetchone</code>获取到返回的数据</p><p>返回列表的形式，列表里面包含字典。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br><br><br><span class="hljs-comment">#1.连接上本地mysql</span><br>conn = pymysql.connect(host=<span class="hljs-string">&quot;127.0.0.1&quot;</span>,port=<span class="hljs-number">3306</span>,user=<span class="hljs-string">&quot;root&quot;</span>,password=<span class="hljs-string">&quot;1234&quot;</span>,charset=<span class="hljs-string">&quot;utf8&quot;</span>,db=<span class="hljs-string">&quot;unicom&quot;</span>)<br>cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)<br><br><span class="hljs-comment">#发送指令</span><br>sql=<span class="hljs-string">&quot;select * from admin&quot;</span><br><br><span class="hljs-comment"># 获取返回的所有数据（包含字典成员的列表）</span><br>cursor.execute(sql)<br>data_list = cursor.fetchall()<br><br><span class="hljs-comment"># 获取返回的第一条数据</span><br>cursor.execute(sql)<br>my_first = cursor.fetchone()<br><br><span class="hljs-keyword">for</span> row_dict <span class="hljs-keyword">in</span> data_list:<br> <span class="hljs-built_in">print</span>(row_dict)<br><br><span class="hljs-built_in">print</span>(my_first)<br><br><span class="hljs-comment">#关闭</span><br>cursor.close()<br>conn.close()<br></code></pre></td></tr></table></figure><h2 id="django"><a class="markdownIt-Anchor" href="#django"></a> Django</h2><h3 id="默认文件介绍"><a class="markdownIt-Anchor" href="#默认文件介绍"></a> 默认文件介绍</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs stylus">│  manage<span class="hljs-selector-class">.py</span>【项目的管理，启动项目，创建app，数据管理】【不能动】【常常用】<br>│<br>├─<span class="hljs-selector-class">.idea</span><br>│  │  <span class="hljs-selector-class">.gitignore</span><br>│  │  misc<span class="hljs-selector-class">.xml</span><br>│  │  modules<span class="hljs-selector-class">.xml</span><br>│  │  mysite<span class="hljs-selector-class">.iml</span><br>│  │  workspace<span class="hljs-selector-class">.xml</span><br>│  │<br>│  └─inspectionProfiles<br>│          profiles_settings<span class="hljs-selector-class">.xml</span><br>│<br>├─mysite<br>│  │  settings<span class="hljs-selector-class">.py</span>【项目配置文件】【常修改】<br>│  │  urls<span class="hljs-selector-class">.py</span>【URL和函数的对应关系】【常修改】<br>│  │  asgi<span class="hljs-selector-class">.py</span>【接收网络请求】【不能动】<br>│  │  wsgi<span class="hljs-selector-class">.py</span>【接收网络请求】【不能动】<br>│  │  __init__<span class="hljs-selector-class">.py</span><br>│  │<br>│  └─__pycache__<br>│          settings<span class="hljs-selector-class">.cpython-310</span><span class="hljs-selector-class">.pyc</span><br>│          __init__<span class="hljs-selector-class">.cpython-310</span><span class="hljs-selector-class">.pyc</span><br>│<br>└─__pycache__<br>        manage<span class="hljs-selector-class">.cpython-310</span>.pyc<br></code></pre></td></tr></table></figure><h3 id="app"><a class="markdownIt-Anchor" href="#app"></a> APP</h3><h4 id="创建app"><a class="markdownIt-Anchor" href="#创建app"></a> 创建APP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python manage.py startapp [名字]<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">-项目<br>-app，用户管理【表结构、函数、<span class="hljs-selector-tag">HTML</span>模板、CSS等独立】<br>-app，订单管理【表结构、函数、<span class="hljs-selector-tag">HTML</span>模板、CSS等独立】<br>-app，后台管理【表结构、函数、<span class="hljs-selector-tag">HTML</span>模板、CSS等独立】<br>   -app，网站管理【表结构、函数、<span class="hljs-selector-tag">HTML</span>模板、CSS等独立】<br>   -app，API    【表结构、函数、<span class="hljs-selector-tag">HTML</span>模板、CSS等独立】<br>   ···<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs visual">├─app1<br>│  │  admin.py【固定，不用动】django默认提供了admin后台管理<br>│  │  apps.py【固定，不用动】app启动类<br>│  │  models.py【重要，模型层】对数据库操作<br>│  │  tests.py【固定，不用动】单元测试<br>│  │  views.py【重要，视图层】前后端交互处理请求返回结果的函数<br>│  │  __init__.py<br>│  │<br>│  └─migrations【固定，不用动】数据库变更记录<br>│          __init__.py<br></code></pre></td></tr></table></figure><h3 id="快速上手"><a class="markdownIt-Anchor" href="#快速上手"></a> 快速上手</h3><ul><li><strong>确保app已注册【<a href="http://setting.py">setting.py</a>】</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">INSTALLED_APPS = [<br>    <span class="hljs-string">&quot;django.contrib.admin&quot;</span>,<br>    <span class="hljs-string">&quot;django.contrib.auth&quot;</span>,<br>    <span class="hljs-string">&quot;django.contrib.contenttypes&quot;</span>,<br>    <span class="hljs-string">&quot;django.contrib.sessions&quot;</span>,<br>    <span class="hljs-string">&quot;django.contrib.messages&quot;</span>,<br>    <span class="hljs-string">&quot;django.contrib.staticfiles&quot;</span>,<br>    <span class="hljs-string">&quot;app01.apps.App01Config&quot;</span>          <span class="hljs-comment">#注册app01</span><br></code></pre></td></tr></table></figure><ul><li><strong>编写URL和视图函数对应关系【<a href="http://urls.py">urls.py</a>】</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> app01 <span class="hljs-keyword">import</span> views<br><br>urlpatterns = [<br>    <span class="hljs-comment"># path(&quot;admin/&quot;, admin.site.urls),</span><br>    path(<span class="hljs-string">&quot;index/&quot;</span>, views.index),<br>]<br></code></pre></td></tr></table></figure><ul><li><strong>编写视图函数【<a href="http://view.py">view.py</a>】</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse<br><br><br><span class="hljs-comment"># Create your views here.</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;欢迎访问YUGIN Blog&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>启动Django项目</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1.</span>命令行启动<br>python manage.py runserver<br><span class="hljs-number">2.</span>pycharm启动<br>直接点击pycharm里的启动按钮<br></code></pre></td></tr></table></figure><h3 id="编写页面"><a class="markdownIt-Anchor" href="#编写页面"></a> 编写页面</h3><h4 id="引入html"><a class="markdownIt-Anchor" href="#引入html"></a> 引入HTML</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-comment"># 根据app注册顺序,去每个app目录下的templates中寻找对应的html</span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;user_list.html&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="静态文件"><a class="markdownIt-Anchor" href="#静态文件"></a> 静态文件</h4><p>一般开发过程中：</p><ul><li>图片</li><li>CSS</li><li>Js</li></ul><p>都会当做静态文件处理！</p><ul><li><p>一般在app目录下放置static文件夹</p></li><li><p>注意Django一般引入静态文件：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户列表<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>用户列表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/jquery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="模板语法"><a class="markdownIt-Anchor" href="#模板语法"></a> 模板语法</h3><ul><li><p>本质上：在html中写一些占位符，由数据对这些占位符进行替换和处理。</p></li><li><p>注意：取单独值的时候用<code>.</code>进行索引</p></li></ul><p><strong><a href="http://views.py">views.py</a></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">tpl</span>(<span class="hljs-params">request</span>):<br>    name = <span class="hljs-string">&quot;小明&quot;</span><br>    roles = [<span class="hljs-string">&quot;管理员&quot;</span>, <span class="hljs-string">&quot;CEO&quot;</span>, <span class="hljs-string">&quot;保安&quot;</span>]<br>    user_info = &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;郭志&quot;</span>, <span class="hljs-string">&quot;salary&quot;</span>: <span class="hljs-string">&quot;101000&quot;</span>, <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;CTO&quot;</span>&#125;<br><br>    data_list = [<br>        &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;郭志&quot;</span>, <span class="hljs-string">&quot;salary&quot;</span>: <span class="hljs-string">&quot;101000&quot;</span>, <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;CTO&quot;</span>&#125;,<br>        &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;赵健&quot;</span>, <span class="hljs-string">&quot;salary&quot;</span>: <span class="hljs-string">&quot;1010&quot;</span>, <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;保安&quot;</span>&#125;,<br>        &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;芦荟&quot;</span>, <span class="hljs-string">&quot;salary&quot;</span>: <span class="hljs-string">&quot;201000&quot;</span>, <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;CEO&quot;</span>&#125;<br>    ]<br><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;tpl.html&quot;</span>, &#123;<span class="hljs-string">&quot;n1&quot;</span>: name, <span class="hljs-string">&quot;n2&quot;</span>: roles, <span class="hljs-string">&quot;n3&quot;</span>: user_info,<span class="hljs-string">&quot;n4&quot;</span>:data_list&#125;)<br></code></pre></td></tr></table></figure><p><strong>HTML</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>模板语法的学习<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>模板语法的学习<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>&#123;#字符串#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; n1 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;#列表#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; n2.0 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; n2.1 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; n2.2 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;#循环列表#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    &#123;% for item in n2 %&#125;<br>     <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><br>    &#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;#字典#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; n3.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; n3.salary &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; n3.role &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><br>&#123;#循环字典#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    &#123;% for key,valuse in n3.items %&#125;<br>     <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; key &#125;&#125; = &#123;&#123; valuse &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><br>    &#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>&#123;#列表套字典#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; n4.1 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; n4.1.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>&#123;#列表套字典加循环#&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    &#123;% for item in n4 %&#125;<br>     <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; item.name &#125;&#125; = &#123;&#123;item.salary &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    &#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>&#123;#条件语句#&#125;<br>&#123;% if n1 == &quot;小明&quot;%&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>是小明<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>&#123;% else %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>不是小明<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>&#123;% endif %&#125;<br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="案例热搜展示"><a class="markdownIt-Anchor" href="#案例热搜展示"></a> 案例：热搜展示</h4><p><strong><a href="http://views.py">views.py</a></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">news</span>(<span class="hljs-params">request</span>):<br>    url = <span class="hljs-string">&quot;http://api.54dh.cn/API/search/rs/?type=weibo&quot;</span><br>    dic = &#123;<span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0&#x27;</span>&#125;<br>    r = requests.post(url, headers=dic)<br>    r.raise_for_status()<br>    r.encoding = r.apparent_encoding<br>    info = &#123;<span class="hljs-string">&#x27;info&#x27;</span>: r.json()&#125;<br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;news.html&quot;</span>, info)<br></code></pre></td></tr></table></figure><p><strong>HTML</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>热搜展示<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        * &#123;</span><br><span class="language-css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">font-family</span>: 微软雅黑, serif;</span><br><span class="language-css">            <span class="hljs-attribute">letter-spacing</span>: .<span class="hljs-number">05em</span>;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-class">.container</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span> auto;</span><br><span class="language-css">            <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(to right, <span class="hljs-number">#a997a4</span>, <span class="hljs-number">#b3e8ee</span>);</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-12 text-center&quot;</span>&gt;</span>热搜展示---&#123;&#123; info.time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot; text-center&quot;</span>&gt;</span><br>        &#123;% for item in info.data %&#125;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; item.link &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; item.title &#125;&#125;--&#123;&#123; item.heat &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        &#123;% endfor %&#125;<br><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/jquery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="请求和响应"><a class="markdownIt-Anchor" href="#请求和响应"></a> 请求和响应</h3><ul><li><strong>通过此方式可以获取到get请求中的参数和post请求中的数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">something</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>        <span class="hljs-comment"># 获取get请求中携带的参数</span><br>        parameters = request.GET<br>        <span class="hljs-comment"># 获取post请求中提交的数据</span><br>        data = request.POST<br>        <span class="hljs-built_in">print</span>(parameters)<br>        <span class="hljs-built_in">print</span>(data)<br>        <span class="hljs-keyword">return</span> HttpResponse(parameters[<span class="hljs-string">&#x27;name&#x27;</span>])<br></code></pre></td></tr></table></figure><ul><li><strong>重定向：返回重定向的网址给浏览器，浏览器去请求该网址</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;https://www.baidu.com&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="案例用户登录"><a class="markdownIt-Anchor" href="#案例用户登录"></a> 案例：用户登录</h4><p><strong><a href="http://views.py">views.py</a></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse,redirect<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>       <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;login.html&quot;</span>)<br>    <span class="hljs-comment">#POST请求</span><br>    <span class="hljs-keyword">else</span>:<br>        username=request.POST.get(<span class="hljs-string">&quot;user&quot;</span>)<br>        pwd = request.POST.get(<span class="hljs-string">&quot;pwd&quot;</span>)<br>        <span class="hljs-comment">#print(request.POST)</span><br>        <span class="hljs-keyword">if</span> username == <span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">and</span> pwd == <span class="hljs-string">&#x27;1234&#x27;</span>:<br>             <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;http://chuiyugin.github.io&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>             <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;login.html&quot;</span>,&#123;<span class="hljs-string">&quot;error_msg&quot;</span>:<span class="hljs-string">&quot;用户名或密码错误&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><p><strong>HTML</strong></p><ul><li>注意： 在html表单（form）中加上<code>&#123;% csrf_token %&#125;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/login/&quot;</span>&gt;</span><br>    &#123;#提交表单一定要添加#&#125;<br>    &#123;% csrf_token %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;row container&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;col-xs-12 &quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:darkred;&quot;</span>&gt;</span>&#123;&#123; error_msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/jquery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="数据库操作"><a class="markdownIt-Anchor" href="#数据库操作"></a> 数据库操作</h3><blockquote><p>Django使用ORM框架实现对数据库的操作，安装<code>mysqlclient</code>第三方库辅助操作</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pip install mysqlclient<br></code></pre></td></tr></table></figure><h4 id="orm"><a class="markdownIt-Anchor" href="#orm"></a> ORM</h4><blockquote><p>ORM可以帮助我们完成两件事：</p><ol><li>创建、修改、删除数据库中的表（不用写SQL语句）【无法创建数据库】</li><li>操作表中的数据</li></ol></blockquote><h4 id="配置settingpy文件"><a class="markdownIt-Anchor" href="#配置settingpy文件"></a> 配置setting.py文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>, <span class="hljs-comment">#连接MYSQL数据库</span><br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;day15&#x27;</span>,  <span class="hljs-comment"># 数据库名</span><br>        <span class="hljs-string">&#x27;USER&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,  <span class="hljs-comment"># 数据库用户名</span><br>        <span class="hljs-string">&#x27;PASSWORD&#x27;</span>: <span class="hljs-string">&#x27;1234&#x27;</span>,  <span class="hljs-comment"># 数据库密码</span><br>        <span class="hljs-string">&#x27;HOST&#x27;</span>: <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,  <span class="hljs-comment"># 数据库主机地址</span><br>        <span class="hljs-string">&#x27;PORT&#x27;</span>: <span class="hljs-number">3306</span>,  <span class="hljs-comment"># 数据库连接端口号</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="django操作表"><a class="markdownIt-Anchor" href="#django操作表"></a> Django操作表</h4><h5 id="创建表"><a class="markdownIt-Anchor" href="#创建表"></a> 创建表</h5><ul><li>在models.py中创建表类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Userinfo</span>(models.Model):<br>    name = models.CharField(max_length=<span class="hljs-number">32</span>)<br>    password = models.CharField(max_length=<span class="hljs-number">64</span>)<br>    mobile = models.CharField(max_length=<span class="hljs-number">11</span>)<br>    email = models.CharField(max_length=<span class="hljs-number">32</span>)<br>    age = models.IntegerField()<br></code></pre></td></tr></table></figure><ul><li>在终端执行命令创建该表</li></ul><p>注意：<strong>1.终端路径在项目名目录下。2.app需要已经注册。3.表名是app的名称加上类名</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python manage.py makemigrations<br>python manage.py migrate<br></code></pre></td></tr></table></figure><h5 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h5><p>直接将<code>models.py</code>里面的类注释掉即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Userinfo</span>(models.Model):<br><span class="hljs-comment">#     name = models.CharField(max_length=32)</span><br><span class="hljs-comment">#     password = models.CharField(max_length=64)</span><br><span class="hljs-comment">#     mobile = models.CharField(max_length=11)</span><br><span class="hljs-comment">#     email = models.CharField(max_length=32)</span><br><span class="hljs-comment">#     age = models.IntegerField()</span><br><span class="hljs-comment">#     docpath = models.CharField(max_length=64, default=&quot;&quot;)</span><br><span class="hljs-comment">#     imgpath = models.CharField(max_length=64, null=True, blank=True)</span><br></code></pre></td></tr></table></figure><h5 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h5><ul><li>删除字段（直接注释掉）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#删除imgpath字段</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Userinfo</span>(models.Model):<br>    name = models.CharField(max_length=<span class="hljs-number">32</span>)<br>    password = models.CharField(max_length=<span class="hljs-number">64</span>)<br>    mobile = models.CharField(max_length=<span class="hljs-number">11</span>)<br>    email = models.CharField(max_length=<span class="hljs-number">32</span>)<br>    age = models.IntegerField()<br>    docpath = models.CharField(max_length=<span class="hljs-number">64</span>, default=<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-comment">#imgpath = models.CharField(max_length=64, null=True, blank=True)</span><br></code></pre></td></tr></table></figure><ul><li>修改字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#修改max_length属性</span><br>docpath = models.CharField(max_length=<span class="hljs-number">128</span>, default=<span class="hljs-string">&quot;&quot;</span>)<span class="hljs-comment">#将max_length直接改为128</span><br></code></pre></td></tr></table></figure><ul><li>添加字段</li></ul><blockquote><p>在表中新建字段（列）时，由于已存在的字段可能已有数据，所以新增列必须要指定新增列对应的数据：</p><ol><li>手动输入一个值（全部行都为输入的值）</li><li>设置默认值(default后面的值)</li></ol></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">docpath = models.CharField(default=<span class="hljs-string">&quot;&quot;</span>)<br>docpath = models.CharField(default=<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ol start="3"><li>允许为空</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">imgpath = models.CharField(null=<span class="hljs-literal">True</span>, blank=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h5 id="操作表中的数据"><a class="markdownIt-Anchor" href="#操作表中的数据"></a> 操作表中的数据</h5><ol><li>添加数据( <a href="http://models.py">models.py</a> )</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># ***************添加数据***************</span><br><span class="hljs-comment"># 本质：insert into app1_userinfo(name,password,mobile,email) values(&quot;yugin&quot;,&quot;123456&quot;,&quot;18127896898&quot;,&quot;1726123207@qq.com&quot;)</span><br>Userinfo.objects.create(name=<span class="hljs-string">&quot;yugin&quot;</span>, password=<span class="hljs-string">&quot;123456&quot;</span>, mobile=<span class="hljs-string">&quot;18127896898&quot;</span>, email=<span class="hljs-string">&quot;1726123207@qq.com&quot;</span>)<br></code></pre></td></tr></table></figure><p>在views.py中引入models.py中的类即可进行添加数据：</p><ul><li><a href="http://models.py">models.py</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Department</span>(models.Model):<br>    title = models.CharField(max_length=<span class="hljs-number">16</span>)<br></code></pre></td></tr></table></figure><ul><li><a href="http://views.py">views.py</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> app01.models <span class="hljs-keyword">import</span> Department,Userinfo<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">orm</span>(<span class="hljs-params">request</span>):<br><br>    <span class="hljs-comment">#测试orm操作表中的数据</span><br>    Department.objects.create(title=<span class="hljs-string">&quot;销售部门&quot;</span>)<br>    Department.objects.create(title=<span class="hljs-string">&quot;IT部门&quot;</span>)<br>    Department.objects.create(title=<span class="hljs-string">&quot;运营部门&quot;</span>)<br><br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;成功&quot;</span>)<br></code></pre></td></tr></table></figure><ol start="2"><li>更新数据</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 条件更新</span><br>Userinfo.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=<span class="hljs-number">2</span>).update(password=<span class="hljs-string">&#x27;a123456&#x27;</span>)<br><span class="hljs-comment"># 全更新</span><br>Userinfo.objects.<span class="hljs-built_in">all</span>().update(mobile=<span class="hljs-string">&#x27;13125018525&#x27;</span>)<br></code></pre></td></tr></table></figure><ol start="3"><li>删除数据</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 条件删除</span><br>Userinfo.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=<span class="hljs-number">2</span>).delete()<br><span class="hljs-comment"># 删除表中全部数据</span><br>Userinfo.objects.<span class="hljs-built_in">all</span>().delete()<br></code></pre></td></tr></table></figure><ol start="4"><li>查询数据</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#条件查询</span><br><span class="hljs-comment">#查询结果不唯一时，返回包含对象的queryset(列表)：</span><br>    userinfo = Userinfo.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span>) <br><span class="hljs-comment">#已知查询结果唯一时利用first()获取第一条数据，返回对象：</span><br>    userobj = Userinfo.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span>).first()<br><span class="hljs-comment">#全查询</span><br><span class="hljs-comment">#返回包含对象的列表：</span><br>userinfo = Userinfo.objects.<span class="hljs-built_in">all</span>()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_list</span>(<span class="hljs-params">request</span>):<br>    userlist = []<br>    userinfo = Userinfo.objects.<span class="hljs-built_in">all</span>()<br>    <span class="hljs-keyword">for</span> info <span class="hljs-keyword">in</span> userinfo:<br>        datadic = &#123;<span class="hljs-string">&#x27;id&#x27;</span>: info.<span class="hljs-built_in">id</span>, <span class="hljs-string">&#x27;name&#x27;</span>: info.name, <span class="hljs-string">&#x27;password&#x27;</span>: info.password, <span class="hljs-string">&#x27;mobile&#x27;</span>: info.mobile, <span class="hljs-string">&#x27;email&#x27;</span>: info.email&#125;<br>        userlist.append(datadic)<br>    <span class="hljs-built_in">print</span>(userlist)<br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;user_list.html&quot;</span>, &#123;<span class="hljs-string">&#x27;userlist&#x27;</span>: userlist&#125;)<br></code></pre></td></tr></table></figure><h4 id="案例用户管理"><a class="markdownIt-Anchor" href="#案例用户管理"></a> 案例：用户管理</h4><p>要求：</p><ol><li>展示用户列表<ul><li>url路由</li><li>view函数<ol><li>获取用户信息</li><li>HTML渲染</li></ol></li></ul></li><li>添加用户<ul><li>post请求</li><li>添加用户</li><li>HTML渲染</li></ul></li><li>删除用户<ul><li>a标签传递用户id参数get请求</li><li>筛选删除指定用户</li></ul></li></ol><ul><li>展示数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户管理系统<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>INFO列表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/info/add/&quot;</span>&gt;</span>点此添加数据<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>    &#123;% for obj in data_list %&#125;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.password &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.age &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/info/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    &#123;% endfor %&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/jquery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>添加数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户管理系统<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>添加用户<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/info/add/&quot;</span>&gt;</span><br><br>    &#123;% csrf_token %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;年龄&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提 交&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/jquery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><a href="http://views.py">views.py</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, HttpResponse,redirect<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> app01.models <span class="hljs-keyword">import</span> Department,Userinfo<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">orm</span>(<span class="hljs-params">request</span>):<br><br>    <span class="hljs-comment">#测试orm操作表中的数据</span><br>    Department.objects.create(title=<span class="hljs-string">&quot;销售部门&quot;</span>)<br>    Department.objects.create(title=<span class="hljs-string">&quot;IT部门&quot;</span>)<br>    Department.objects.create(title=<span class="hljs-string">&quot;运营部门&quot;</span>)<br><br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;成功&quot;</span>)<br><br><span class="hljs-keyword">from</span> app01.models <span class="hljs-keyword">import</span> Department,Userinfo<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">info_list</span>(<span class="hljs-params">request</span>):<br><br>    <span class="hljs-comment">#获取数据库中所有的用户信息</span><br>    <span class="hljs-comment">#[对象,对象]</span><br>    data_list = Userinfo.objects.<span class="hljs-built_in">all</span>()<br><br>    <span class="hljs-comment">#渲染，返回给用户</span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;info_list.html&quot;</span>,&#123;<span class="hljs-string">&quot;data_list&quot;</span>:data_list&#125;)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">info_add</span>(<span class="hljs-params">request</span>):<br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>       <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;info_add.html&quot;</span>)<br><br>    <span class="hljs-comment">#获取到用户提交的数据</span><br>    user = request.POST.get(<span class="hljs-string">&quot;user&quot;</span>)<br>    pwd = request.POST.get(<span class="hljs-string">&quot;pwd&quot;</span>)<br>    age = request.POST.get(<span class="hljs-string">&quot;age&quot;</span>)<br><br><br><br>    <span class="hljs-comment">#添加到数据库</span><br>    Userinfo.objects.create(name=user,password=pwd,age=age)<br><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/info/list/&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">info_delete</span>(<span class="hljs-params">request</span>):<br>    nid = request.GET.get(<span class="hljs-string">&quot;nid&quot;</span>)<br>    Userinfo.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=nid).delete()<br><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/info/list/&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="django开发"><a class="markdownIt-Anchor" href="#django开发"></a> Django开发</h2><h3 id="设置表结构"><a class="markdownIt-Anchor" href="#设置表结构"></a> 设置表结构</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Department</span>(models.Model):<br>    <span class="hljs-string">&quot;&quot;&quot;部门表&quot;&quot;&quot;</span><br>    title = models.CharField(verbose_name=<span class="hljs-string">&quot;标题&quot;</span>, max_length=<span class="hljs-number">32</span>)<br><br><span class="hljs-comment">#关联部门表</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserInfo</span>(models.Model):<br>    <span class="hljs-string">&quot;&quot;&quot;员工表&quot;&quot;&quot;</span><br>    name = models.CharField(verbose_name=<span class="hljs-string">&quot;姓名&quot;</span>, max_length=<span class="hljs-number">16</span>)<br>    password = models.CharField(verbose_name=<span class="hljs-string">&quot;密码&quot;</span>, max_length=<span class="hljs-number">16</span>)<br>    age = models.IntegerField(verbose_name=<span class="hljs-string">&quot;年龄&quot;</span>)<br>    account = models.DecimalField(verbose_name=<span class="hljs-string">&quot;账户余额&quot;</span>, max_digits=<span class="hljs-number">10</span>, decimal_places=<span class="hljs-number">2</span>, default=<span class="hljs-number">0</span>)<br>    create_time = models.DateTimeField(verbose_name=<span class="hljs-string">&quot;入职时间&quot;</span>)<br>    <span class="hljs-comment"># Dejango中对字段值域的约束</span><br>    gender_choices = (<br>        (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;男&#x27;</span>),<br>        (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;女&#x27;</span>),<br>    )<br>    gender = models.SmallIntegerField(verbose_name=<span class="hljs-string">&#x27;性别&#x27;</span>, choices=gender_choices)<br>    <span class="hljs-comment"># 无约束</span><br>    <span class="hljs-comment"># depart_id = models.BigIntegerField(verbose_name=&#x27;部门ID&#x27;)</span><br>    <span class="hljs-comment"># 有约束</span><br>    <span class="hljs-comment">#    -to:与之关联的表</span><br>    <span class="hljs-comment">#    -to.field：与之关联的字段</span><br>    <span class="hljs-comment"># 1.Django自动</span><br>    <span class="hljs-comment">#     -将关联字段名添加到被关联的字段的后面(depart_id)</span><br>    <span class="hljs-comment"># 2.外键表(部门表)的关联字段被删除</span><br>    <span class="hljs-comment"># -2.1级联删除</span><br>    depart = models.ForeignKey(to=<span class="hljs-string">&#x27;Department&#x27;</span>, to_field=<span class="hljs-string">&#x27;id&#x27;</span>, on_delete=models.CASCADE)<br>    <span class="hljs-comment"># -2.1置空</span><br>    <span class="hljs-comment"># depart = models.ForeignKey(to=&#x27;Department&#x27;,to_field=&#x27;id&#x27;,null=True,blank=True,on_delete=models.SET_NULL)</span><br></code></pre></td></tr></table></figure><h3 id="部门管理"><a class="markdownIt-Anchor" href="#部门管理"></a> 部门管理</h3><h4 id="部门列表"><a class="markdownIt-Anchor" href="#部门列表"></a> 部门列表</h4><blockquote><p>重要知识点 : <mark>url中传递动态参数</mark></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#urls.py</span><br>path(<span class="hljs-string">&quot;depart/&lt;int:nid&gt;/edit/&quot;</span>, views.depart_edit),<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Create your views here.</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">depart_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;部门列表&quot;&quot;&quot;</span><br><br>    <span class="hljs-comment"># 去数据库中获取所有的部门信息</span><br>    queryset = models.Department.objects.<span class="hljs-built_in">all</span>()<br><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;depart_list.html&quot;</span>, &#123;<span class="hljs-string">&quot;queryset&quot;</span>: queryset&#125;)<br></code></pre></td></tr></table></figure><h4 id="新建部门"><a class="markdownIt-Anchor" href="#新建部门"></a> 新建部门</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">depart_add</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;添加部门&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;depart_add.html&quot;</span>)<br>    <span class="hljs-comment"># 获取用户POST提交过来的数据</span><br>    title = request.POST.get(<span class="hljs-string">&quot;title&quot;</span>)<br>    <span class="hljs-comment">#保存到数据库</span><br>    models.Department.objects.create(title=title)<br>    <span class="hljs-comment">#重定向回到部门列表</span><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/depart/list/&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="删除部门"><a class="markdownIt-Anchor" href="#删除部门"></a> 删除部门</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">depart_delete</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;删除部门&quot;&quot;&quot;</span><br>    nid = request.GET.get(<span class="hljs-string">&quot;nid&quot;</span>)<br>    models.Department.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=nid).delete()<br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/depart/list/&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="修改部门"><a class="markdownIt-Anchor" href="#修改部门"></a> 修改部门</h4><blockquote><p>重要知识点 : <mark>url中传递动态参数</mark></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#urls.py</span><br>path(<span class="hljs-string">&quot;depart/&lt;int:nid&gt;/edit/&quot;</span>, views.depart_edit),<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">depart_edit</span>(<span class="hljs-params">request,nid</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;修改部门&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>        row_object = models.Department.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=nid).first()<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;depart_edit.html&quot;</span>,&#123;<span class="hljs-string">&quot;row_object&quot;</span>:row_object&#125;)<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;POST&quot;</span>:<br>        title = request.POST.get(<span class="hljs-string">&quot;title&quot;</span>)<br>        models.Department.objects.<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=nid).update(title=title)<br>        <span class="hljs-comment"># 重定向回到部门列表</span><br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/depart/list/&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="html模板继承"><a class="markdownIt-Anchor" href="#html模板继承"></a> HTML模板继承</h3><blockquote><p>模板继承可以使父模板的内容复用，子模版直接继承父模板的全部内容并可以覆盖父模板中相应的块。</p></blockquote><p><strong>语法—父模板中：</strong></p><p>1.定义父模板中的块block标签</p><p>2.标识出哪些在子模版中是允许被修改的</p><p>3.block标签：在父模板中定义，可以在子模版中覆盖</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% block block_name %&#125;<br>父模板可以被覆盖的内容<br>&#123;% endblock blocl_name%&#125;  (**切记一定要写endblock**)<br></code></pre></td></tr></table></figure><p><strong>语法—子模版中：</strong></p><p>1.继承模板extends标签（<strong>写在模板文件的第一行</strong>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% entends &#x27;layout.html&#x27; %&#125;<br></code></pre></td></tr></table></figure><p>2.子模版 重写父模板中的内容块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% block block_name %&#125;<br>子模版用来覆盖父模板中 block_name 块的内容<br>&#123;% endblock blocl_name%&#125;  (**切记一定要写endblock**)<br></code></pre></td></tr></table></figure><h4 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h4><ul><li>父模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &quot;layout.html&quot; %&#125;<br><br>&#123;% block  content %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/add/&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>新建部门<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel-default&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 20px&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- Default panel contents --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-heading&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pushpin&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                部门列表<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- Table --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>部门名称<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                &#123;% for obj in queryset %&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/&#123;&#123; obj.id &#125;&#125;/edit/&quot;</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                &#123;% endfor %&#125;<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><ul><li>继承模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &quot;layout.html&quot; %&#125;<br><br>&#123;% block  content %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/add/&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>新建部门<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel-default&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 20px&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- Default panel contents --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-heading&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pushpin&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                部门列表<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- Table --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>部门名称<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                &#123;% for obj in queryset %&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/&#123;&#123; obj.id &#125;&#125;/edit/&quot;</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                &#123;% endfor %&#125;<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><h3 id="主题一用户管理"><a class="markdownIt-Anchor" href="#主题一用户管理"></a> 主题一：用户管理</h3><ul><li>向数据库插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> app01_userinfo(name,password,age,account,create_time,gender,depart_id_id) <span class="hljs-keyword">values</span>(&quot;刘冬&quot;,&quot;1234&quot;,&quot;23&quot;,&quot;100.87&quot;,&quot;2010-1-11&quot;,&quot;1&quot;,&quot;1&quot;);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> app01_userinfo(name,password,age,account,create_time,gender,depart_id_id) <span class="hljs-keyword">values</span>(&quot;Alleyf&quot;,&quot;1234&quot;,&quot;20&quot;,&quot;9000.87&quot;,&quot;2012-1-11&quot;,&quot;1&quot;,&quot;2&quot;);<br><br><br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+---------------+------+-----+---------+----------------+</span><br><span class="hljs-operator">|</span> Field        <span class="hljs-operator">|</span> Type          <span class="hljs-operator">|</span> <span class="hljs-keyword">Null</span> <span class="hljs-operator">|</span> Key <span class="hljs-operator">|</span> <span class="hljs-keyword">Default</span> <span class="hljs-operator">|</span> Extra          <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+---------------+------+-----+---------+----------------+</span><br><span class="hljs-operator">|</span> id           <span class="hljs-operator">|</span> <span class="hljs-type">bigint</span>        <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span> PRI <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span> auto_increment <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> name         <span class="hljs-operator">|</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">16</span>)   <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> password     <span class="hljs-operator">|</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>)   <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> age          <span class="hljs-operator">|</span> <span class="hljs-type">int</span>           <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> account      <span class="hljs-operator">|</span> <span class="hljs-type">decimal</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>) <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> create_time  <span class="hljs-operator">|</span> datetime(<span class="hljs-number">6</span>)   <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> gender       <span class="hljs-operator">|</span> <span class="hljs-type">smallint</span>      <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span>     <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> depart_id_id <span class="hljs-operator">|</span> <span class="hljs-type">bigint</span>        <span class="hljs-operator">|</span> <span class="hljs-keyword">NO</span>   <span class="hljs-operator">|</span> MUL <span class="hljs-operator">|</span> <span class="hljs-keyword">NULL</span>    <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+---------------+------+-----+---------+----------------+</span><br></code></pre></td></tr></table></figure><h3 id="modelform和form"><a class="markdownIt-Anchor" href="#modelform和form"></a> ModelForm和Form</h3><ul><li><p>原始方式：不会采用（本质）【麻烦】</p><ul><li><p>没有数据校验</p></li><li><p>错误，应该有提示</p></li><li><p>页面上，每个字段都需要我们重新写一遍，数据冗余</p></li><li><p>关联的数据，需要手动获取并循环展示在页面中</p></li></ul></li><li><p>Django组件</p><ol><li>Form组件（较简便）</li><li>ModelForm组件（最简便）</li></ol></li></ul><h4 id="modelform示例"><a class="markdownIt-Anchor" href="#modelform示例"></a> ModelForm示例</h4><ul><li><a href="http://models.py">models.py</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserInfo</span>(models.Model):<br>    <span class="hljs-string">&quot;&quot;&quot; 员工表 &quot;&quot;&quot;</span><br>    name = models.CharField(verbose_name=<span class="hljs-string">&#x27;姓名&#x27;</span>, max_length=<span class="hljs-number">16</span>)<br>    password = models.CharField(verbose_name=<span class="hljs-string">&quot;密码&quot;</span>, max_length=<span class="hljs-number">64</span>)<br>    age = models.IntegerField(verbose_name=<span class="hljs-string">&quot;年龄&quot;</span>)<br>    account = models.DecimalField(verbose_name=<span class="hljs-string">&quot;账户余额&quot;</span>, max_digits=<span class="hljs-number">10</span>, decimal_places=<span class="hljs-number">2</span>, default=<span class="hljs-number">0</span>)<br>    create_time = models.DateTimeField(verbose_name=<span class="hljs-string">&quot;入职时间&quot;</span>)<br><br>    depart_id = models.ForeignKey(to=<span class="hljs-string">&quot;Department&quot;</span>, to_field=<span class="hljs-string">&quot;id&quot;</span>, on_delete=models.CASCADE,verbose_name=<span class="hljs-string">&quot;部门&quot;</span>)<br>    <span class="hljs-comment"># Dejango中对字段值域的约束</span><br>    gender_choices = (<br>        (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;男&#x27;</span>),<br>        (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;女&#x27;</span>),<br>    )<br>    gender = models.SmallIntegerField(verbose_name=<span class="hljs-string">&#x27;性别&#x27;</span>, choices=gender_choices)<br></code></pre></td></tr></table></figure><ul><li><a href="http://views.py">views.py</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 用户管理</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-comment"># 获取所有的用户列表</span><br>    queryset = models.UserInfo.objects.<span class="hljs-built_in">all</span>()<br><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;user_list.html&quot;</span>, &#123;<span class="hljs-string">&quot;queryset&quot;</span>: queryset&#125;)<br><br><br><span class="hljs-comment"># ModelForm</span><br><span class="hljs-keyword">from</span> django <span class="hljs-keyword">import</span> forms<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">userInfoForm</span>(forms.ModelForm):<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        model = models.UserInfo<br>        fields = [<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-string">&quot;create_time&quot;</span>, <span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-string">&quot;depart_id&quot;</span>]<br>        widgets = &#123;<br>            <span class="hljs-comment"># &quot;name&quot;: forms.TextInput(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>            <span class="hljs-comment"># &quot;password&quot;: forms.PasswordInput(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>            <span class="hljs-comment"># &quot;age&quot;: forms.TextInput(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>            <span class="hljs-comment"># &quot;account&quot;: forms.TextInput(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>            <span class="hljs-string">&quot;create_time&quot;</span>: forms.DateTimeInput(attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot; form-control input&quot;</span>, <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;datetime-local&quot;</span>&#125;),<br>            <span class="hljs-comment"># &quot;gender&quot;: forms.Select(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>            <span class="hljs-comment"># &quot;depart&quot;: forms.Select(attrs=&#123;&quot;class&quot;: &quot;form-control input&quot;&#125;),</span><br>        &#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-built_in">super</span>().__init__(*args, **kwargs)<br>        <span class="hljs-comment"># 循环找到所有的字段,给其添加样式</span><br>        <span class="hljs-keyword">for</span> name, field <span class="hljs-keyword">in</span> self.fields.items():<br>            <span class="hljs-comment"># 想让某一个不加</span><br>            <span class="hljs-keyword">if</span> name == <span class="hljs-string">&quot;create_time&quot;</span>:<br>                <span class="hljs-keyword">continue</span><br>            field.widget.attrs = &#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;input form-control&quot;</span>, <span class="hljs-string">&quot;placeholder&quot;</span>: field.label&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_add</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-comment"># 添加用户</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;GET&quot;</span>:<br>        form = userInfoForm()<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;user_add.html&quot;</span>, &#123;<span class="hljs-string">&quot;form&quot;</span>: form&#125;)<br>    <span class="hljs-comment"># 用户POST提交数据，数据校验</span><br>    form = userInfoForm(data=request.POST)<br>    <span class="hljs-keyword">if</span> form.is_valid():<br>      <span class="hljs-comment"># 如果合法保存到数据库</span><br>      form.save()<br>      <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/user/list&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;user_add.html&quot;</span>,&#123;<span class="hljs-string">&quot;form&quot;</span>: form&#125;)<br></code></pre></td></tr></table></figure><ul><li>user_list.html(未用ModelForm)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &quot;layout.html&quot; %&#125;<br><br>&#123;% block  content %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/user/add/&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>新建用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel-default&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 20px&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- Default panel contents --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-heading&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;glyphicon glyphicon-pushpin&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                用户列表<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>            <span class="hljs-comment">&lt;!-- Table --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ID<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>余额<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>入职时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>性别<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>所属部门<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                &#123;% for obj in queryset %&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.password &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.age &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.account &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.create_time|date:&quot;Y-m-d&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.get_gender_display &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123; obj.depart_id.title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/&#123;&#123; obj.id &#125;&#125;/edit/&quot;</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger btn-xs&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/depart/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>                &#123;% endfor %&#125;<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><ul><li>user_add.html(使用ModelForm)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &quot;layout.html&quot; %&#125;<br><br>&#123;% block  content %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel-default&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-heading&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-title&quot;</span>&gt;</span>新建用户<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel-body&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">novalidate</span>&gt;</span><br>                    &#123;% csrf_token %&#125;<br>                    &#123;% for field in form %&#125;<br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>&#123;&#123; field.label &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                            &#123;&#123; field &#125;&#125;<br>                         <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #2aabd2&quot;</span>&gt;</span>&#123;&#123; field.errors.0 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    &#123;% endfor %&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>提 交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><ul><li>在配置文件<code>settings.py</code>中可以设置语言种类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># LANGUAGE_CODE = &quot;en-us&quot; 英文</span><br>LANGUAGE_CODE = <span class="hljs-string">&quot;zh-hans&quot;</span> 中文<br></code></pre></td></tr></table></figure><h3 id="主题二靓号管理"><a class="markdownIt-Anchor" href="#主题二靓号管理"></a> 主题二：靓号管理</h3><p>靓号管理</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字滤波器设计</title>
      <link href="/2022/12/21/signal_5/"/>
      <url>/2022/12/21/signal_5/</url>
      
        <content type="html"><![CDATA[<h1 id="数字滤波器设计"><a class="markdownIt-Anchor" href="#数字滤波器设计"></a> 数字滤波器设计</h1><h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2><p>​         在子作业4的基础上，采用MATLAB的filterDesigner或fdatool工具箱，设计出相应的IIR滤波器和FIR滤波器。</p><h2 id="音频加噪处理"><a class="markdownIt-Anchor" href="#音频加噪处理"></a> 音频加噪处理</h2><p>​         由于在子作业1中的音频较为纯净，没有过多噪声。为了方便数字滤波器性能指标的分析和数字滤波器的设计，需要对原有的音频进行加噪处理。本项目通过在音频的8.5kHz至10kHz中增加带限噪声，并在绘制出其时域波形和频域波形。</p><p><img src="https://s2.loli.net/2022/12/21/kT9Rgsn4iAvPCjH.png" alt="" /></p><h2 id="加噪程序设计"><a class="markdownIt-Anchor" href="#加噪程序设计"></a> 加噪程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear ;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;puppy love.mp3&#x27;</span>);<br>x=x(:,<span class="hljs-number">1</span>);<span class="hljs-comment">%由于x是双声道，所以取它的左声道</span><br>x=x.&#x27;;<span class="hljs-comment">%转置</span><br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">221</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">222</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%加入带限噪声</span><br>noise=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> f=<span class="hljs-number">8500</span>:<span class="hljs-number">20</span>:<span class="hljs-number">10000</span><br>noise=noise+<span class="hljs-number">0.01</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>*f*time);<br><span class="hljs-keyword">end</span><br>xa=x+noise;<br>subplot(<span class="hljs-number">223</span>);<br><span class="hljs-built_in">plot</span>(time,xa);<br>title(<span class="hljs-string">&#x27;加噪声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%加噪信号傅里叶变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(xa,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">224</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;加噪后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="数字滤波器性能指标分析"><a class="markdownIt-Anchor" href="#数字滤波器性能指标分析"></a> 数字滤波器性能指标分析</h2><p>假设数字滤波器的频率响应表示为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>H</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msup><mi>e</mi><mrow><mi>j</mi><mi>β</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">H(e^{j \omega})=|H(e^{j \omega})|e^{j \beta(j \omega)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据下图中理想低通滤波器逼近的误差容限可以看出，频率响应有通带、过渡带、阻带三个范围。</p><p><img src="https://s2.loli.net/2022/12/21/rRg3Gf7yNHwQFXJ.png" alt="" /></p><p>下图为不同滤波器的技术指标：</p><p><img src="https://s2.loli.net/2022/12/21/AuCfvezdnyDWF6E.png" alt="" /></p><p>​        因此我们对加噪后的音频频谱进行分析，可以确定出<strong>通带截止频率</strong>为8kHz，<strong>阻带截止频率</strong>为8.5kHz。<strong>通带最大允许衰减</strong>为1dB,<strong>阻带最小允许衰减</strong>为80dB。</p><h2 id="matlab数字滤波器设计"><a class="markdownIt-Anchor" href="#matlab数字滤波器设计"></a> Matlab数字滤波器设计</h2><p>​        经过上述分析得到数字滤波器的性能指标后，采用MATLAB的filterDesigner或fdatool工具箱，设计出相应的IIR滤波器和FIR滤波器。设计过程如下图所示：</p><ul><li>FIR滤波器设计(凯撒窗函数)</li></ul><p><img src="https://s2.loli.net/2022/12/21/BWoN8tjI15MGYyZ.png" alt="" /></p><ul><li>IIR滤波器设计(切比雪夫II型)</li></ul><p><img src="https://s2.loli.net/2022/12/21/hsDkcNaCMFmXOzQ.png" alt="" /></p><h2 id="滤波程序设计"><a class="markdownIt-Anchor" href="#滤波程序设计"></a> 滤波程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear ;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;puppy love.mp3&#x27;</span>);<br>x=x(:,<span class="hljs-number">1</span>);<span class="hljs-comment">%由于x是双声道，所以取它的左声道</span><br>x=x.&#x27;;<span class="hljs-comment">%转置</span><br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">421</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br><span class="hljs-comment">%axis([0 300 -3 3]);</span><br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">422</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%加入带限噪声</span><br>noise=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> f=<span class="hljs-number">8500</span>:<span class="hljs-number">20</span>:<span class="hljs-number">10000</span><br>noise=noise+<span class="hljs-number">0.01</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>*f*time);<br><span class="hljs-keyword">end</span><br>xa=x+noise;<br>subplot(<span class="hljs-number">423</span>);<br><span class="hljs-built_in">plot</span>(time,xa);<br><span class="hljs-comment">%axis([0 300 -3 3]);</span><br>title(<span class="hljs-string">&#x27;加噪声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%加噪信号傅里叶变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(xa,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">424</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;加噪后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%FIR滤波器(凯撒窗)设计</span><br>y = filter(my_fir,xa);  <span class="hljs-comment">% 直接使用设计好的滤波器进行滤波，filter函数是滤波函数</span><br>subplot(<span class="hljs-number">425</span>);<br><span class="hljs-built_in">plot</span>(time,y);<br>title(<span class="hljs-string">&#x27;FIR滤波器(凯撒窗)滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">426</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;FIR滤波器(凯撒窗)滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%IIR滤波器(切比雪夫二型)设计</span><br>y1 = filter(my_iir,xa);  <span class="hljs-comment">% 直接使用设计好的滤波器进行滤波，filter函数是滤波函数</span><br>subplot(<span class="hljs-number">427</span>);<br><span class="hljs-built_in">plot</span>(time,y1);<br>title(<span class="hljs-string">&#x27;IIR滤波器(切比雪夫二型)滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y1,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">428</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;IIR滤波器(切比雪夫二型)滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%sound(y,Fs)</span><br><span class="hljs-comment">%sound(xa,Fs)</span><br><span class="hljs-comment">%sound(x,Fs)</span><br>clear sound<br></code></pre></td></tr></table></figure><h2 id="分析总结"><a class="markdownIt-Anchor" href="#分析总结"></a> 分析总结</h2><p>​         通过上述分析实验可以看出加噪后的音频在经过采用MATLAB的filterDesigner或fdatool工具箱，设计出相应的IIR滤波器和FIR滤波器滤除后的频谱图中噪声信号已经完全滤除，时域波形也与原信号相似，在对滤波的音频试听后发现，噪声几乎已经完全听不见，滤波效果较好。滤波效果如下图所示：</p><p><img src="https://s2.loli.net/2022/12/21/ZEIgyHuPURQAlpS.png" alt="" /></p><h2 id="项目开源"><a class="markdownIt-Anchor" href="#项目开源"></a> 项目开源</h2><p>点击🔗即可下载完整可运行项目： <a href="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bc82cde5-9df0-4e04-8d4f-a0e9e1bd241b/7651f145-1aed-46ad-8a08-5c827d191994.zip">项目下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 数字信号处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字滤波器性能指标分析</title>
      <link href="/2022/12/21/signal_4/"/>
      <url>/2022/12/21/signal_4/</url>
      
        <content type="html"><![CDATA[<h1 id="数字滤波器设计"><a class="markdownIt-Anchor" href="#数字滤波器设计"></a> 数字滤波器设计</h1><h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2><p>​         为了完成对子作业1中音频信号的滤波，对子作业1中的音频信号进行频谱分析，并获取滤波器设计所需要的性能指标。</p><h2 id="音频加噪处理"><a class="markdownIt-Anchor" href="#音频加噪处理"></a> 音频加噪处理</h2><p>​         由于在子作业1中的音频较为纯净，没有过多噪声。为了方便数字滤波器性能指标的分析和数字滤波器的设计，需要对原有的音频进行加噪处理。本项目通过在音频的8.5kHz至10kHz中增加带限噪声，并在绘制出其时域波形和频域波形。</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/%E5%99%AA%E5%A3%B0.png" alt="" /></p><h2 id="加噪程序设计"><a class="markdownIt-Anchor" href="#加噪程序设计"></a> 加噪程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear ;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;puppy love.mp3&#x27;</span>);<br>x=x(:,<span class="hljs-number">1</span>);<span class="hljs-comment">%由于x是双声道，所以取它的左声道</span><br>x=x.&#x27;;<span class="hljs-comment">%转置</span><br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">221</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">222</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%加入带限噪声</span><br>noise=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> f=<span class="hljs-number">8500</span>:<span class="hljs-number">20</span>:<span class="hljs-number">10000</span><br>noise=noise+<span class="hljs-number">0.01</span>*<span class="hljs-built_in">sin</span>(<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>*f*time);<br><span class="hljs-keyword">end</span><br>xa=x+noise;<br>subplot(<span class="hljs-number">223</span>);<br><span class="hljs-built_in">plot</span>(time,xa);<br>title(<span class="hljs-string">&#x27;加噪声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%加噪信号傅里叶变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(xa,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">224</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;加噪后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="数字滤波器性能指标分析"><a class="markdownIt-Anchor" href="#数字滤波器性能指标分析"></a> 数字滤波器性能指标分析</h2><p>假设数字滤波器的频率响应表示为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>H</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msup><mi>e</mi><mrow><mi>j</mi><mi>β</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">H(e^{j \omega})=|H(e^{j \omega})|e^{j \beta(j \omega)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据下图中理想低通滤波器逼近的误差容限可以看出，频率响应有通带、过渡带、阻带三个范围。</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/%E6%BB%A4%E6%B3%A2%E5%99%A8.png" alt="" /></p><p>下图为不同滤波器的技术指标：</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/%E6%BB%A4%E6%B3%A2%E5%99%A82.png" alt="" /></p><p>​        因此我们对加噪后的音频频谱进行分析，可以看出音频在5kHz之后的幅值已经非常小，所以可以确定出<strong>通带截止频率</strong>为8kHz，<strong>阻带截止频率</strong>为8.5kHz。<strong>通带最大允许衰减</strong>为1dB,<strong>阻带最小允许衰减</strong>为80dB。</p><h2 id="项目开源"><a class="markdownIt-Anchor" href="#项目开源"></a> 项目开源</h2><p>点击🔗即可下载完整可运行项目： <a href="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bc82cde5-9df0-4e04-8d4f-a0e9e1bd241b/dbd83ec7-d54c-48be-9672-43e5c875bbe4.zip">项目下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 数字信号处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速卷积实现滤波</title>
      <link href="/2022/11/14/signal_3/"/>
      <url>/2022/11/14/signal_3/</url>
      
        <content type="html"><![CDATA[<h1 id="快速卷积实现滤波"><a class="markdownIt-Anchor" href="#快速卷积实现滤波"></a> 快速卷积实现滤波</h1><h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2><p>​        选择子作业１中的音频信号，自行给定滤波器的单位取样响应，采用<strong>快速卷积</strong>实现对音频信号的滤波，比较滤波前后信号的波形和回放的效果。</p><h2 id="滤波器设计原理"><a class="markdownIt-Anchor" href="#滤波器设计原理"></a> 滤波器设计原理</h2><ul><li>对于FIR数字滤波器（有限长单位冲激响应滤波器），由于</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><msub><mi>b</mi><mi>k</mi></msub><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><mi>h</mi><mrow><mo fence="true">[</mo><mi>k</mi><mo fence="true">]</mo></mrow><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H(z)=\sum _{k=0}^{M}b_{k}z^{-k}=\sum _{k=0}^{M}h\left[ k \right] z^{-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>因此设计FIR数字滤波器时，我们只需要求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，即滤波器的单位冲激响应，与音频信号进行卷积后得到滤除高频噪声的音频信号。</li></ul><h2 id="快速卷积设计原理"><a class="markdownIt-Anchor" href="#快速卷积设计原理"></a> 快速卷积设计原理</h2><p>通过数字信号处理课程的学习，我们知道对信号<strong>在时域上卷积，再对卷积后的结果作傅里叶变换，就是在频域上乘积</strong>。利用这个定理，我们将 h(n) 和 x(n) 通过<strong>快速傅里叶变换</strong>得到频域信号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>，然后相乘得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>，最后将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>通过 IFFT 从频域变换为时域即可。流程图如下：<br /><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/fast_conv_1.png" alt="" /></p><h2 id="程序设计"><a class="markdownIt-Anchor" href="#程序设计"></a> 程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;Carmen_overture_noisy_8k_9.5k.wav&#x27;</span>);<br>x=x.&#x27;;<br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">321</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半subplot(222);</span><br>subplot(<span class="hljs-number">322</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%fir（默认汉宁窗）滤波器设计</span><br>h=fir1(<span class="hljs-number">3000</span>,<span class="hljs-number">7.99e3</span>*<span class="hljs-number">2</span>/<span class="hljs-number">22.05e3</span>);<br><br><span class="hljs-comment">%快速卷积替代原matlab卷积函数</span><br>L=<span class="hljs-built_in">pow2</span>(<span class="hljs-built_in">nextpow2</span>(<span class="hljs-built_in">length</span>(x)+<span class="hljs-built_in">length</span>(h)<span class="hljs-number">-1</span>));<br>xk=fft(x,L);<br>hk=fft(h,L);<br>yk=xk.*hk;<br>y=ifft(yk,L);<br><br><span class="hljs-comment">%y = conv(x,h);%卷积运算</span><br>y(:,<span class="hljs-built_in">length</span>(x)+<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(y)) = [];<span class="hljs-comment">%将卷积后信号的长度变换为原信号长度</span><br>subplot(<span class="hljs-number">323</span>);<br><span class="hljs-built_in">plot</span>(time,y);<br>title(<span class="hljs-string">&#x27;快速卷积法滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">324</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;快速卷积法滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%与matlab原程序对比</span><br>y = conv(x,h);<span class="hljs-comment">%卷积运算</span><br>y(:,<span class="hljs-built_in">length</span>(x)+<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(y)) = [];<span class="hljs-comment">%将卷积后信号的长度变换为原信号长度</span><br>subplot(<span class="hljs-number">325</span>);<br><span class="hljs-built_in">plot</span>(time,y);<br>title(<span class="hljs-string">&#x27;卷积法滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">326</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;卷积法滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%试听和写入信号</span><br>audiowrite(<span class="hljs-string">&#x27;fir_conv.wav&#x27;</span>,y,Fs);<br> <br><span class="hljs-built_in">figure</span>(<span class="hljs-number">2</span>);<br>stem(h,<span class="hljs-string">&#x27;.&#x27;</span>);<br>title(<span class="hljs-string">&#x27;FIR单位冲激响应&#x27;</span>)<br>axis([<span class="hljs-number">1460</span> <span class="hljs-number">1540</span> <span class="hljs-number">-0.3</span> <span class="hljs-number">0.8</span>]);<br></code></pre></td></tr></table></figure><h2 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h2><ul><li><strong>Hamming窗函数</strong>(单位冲激响应)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/FIR%E5%8D%95%E4%BD%8D%E5%86%B2%E6%BF%80%E5%93%8D%E5%BA%94.png" alt="" /></p><ul><li><strong>快速卷积</strong>和<strong>Matlab卷积函数</strong>滤波效果对比</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/fast_conv.png" alt="" /></p><h2 id="分析总结"><a class="markdownIt-Anchor" href="#分析总结"></a> 分析总结</h2><ul><li>根据<strong>信号的时域处理</strong>的实验得到的<strong>FIR型滤波器系数</strong>，我们只需要重新设计<strong>快速卷积函数</strong>替换原本在<strong>matlab的卷积函数</strong>即可。查阅相关资料我们可以了解到快速卷积的实现可以利用<strong>两次快速傅里叶变换</strong>将<strong>原始音频的采样序列</strong>和<strong>滤波器系数组成的序列</strong>变换为<strong>频域</strong>后相乘，得到其时域卷积下的<strong>频域序列</strong>，再利用<strong>快速傅里叶逆变换转换</strong>为<strong>时域</strong>即可。这个过程总共使用了<strong>三次快速傅里叶变换</strong>，从上述图片的结果可以看出，快速卷积和Matlab卷积函数实现的<strong>滤波效果基本一致</strong>。</li></ul><h3 id="数字信号处理教程推荐"><a class="markdownIt-Anchor" href="#数字信号处理教程推荐"></a> 数字信号处理教程推荐</h3><style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-vzMSVtrQRSjBBEHc" src="https://player.bilibili.com/player.html?bvid=BV127411M7BU&page=1&high_quality=1&danmaku=false" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-vzMSVtrQRSjBBEHc").style.height=document.getElementById("mmedia-vzMSVtrQRSjBBEHc").scrollWidth*0.76+"px";    window.onresize = function(){      document.getElementById("mmedia-vzMSVtrQRSjBBEHc").style.height=document.getElementById("mmedia-vzMSVtrQRSjBBEHc").scrollWidth*0.76+"px";    }; </script>]]></content>
      
      
      <categories>
          
          <category> 数字信号处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA程序设计实验练习二</title>
      <link href="/2022/10/28/exercise2/"/>
      <url>/2022/10/28/exercise2/</url>
      
        <content type="html"><![CDATA[<h1 id="实验题目"><a class="markdownIt-Anchor" href="#实验题目"></a> 实验题目</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目：</h2><p>模拟实现以下商品管理业务系统，商品管理系统的整体功能有：</p><blockquote><p>注：商品数据存储在一个数据库中(用静态HashMap来模拟)，MySQL</p></blockquote><p>1、用户可以通过输入商品信息来向库中添加商品，如：</p><p><strong>idname,price,库存数量  p01,透明胶带,8.8,1000</strong></p><p>2、用户可以查看数据库中所有的商品</p><p>3、用户可以通过输入一个id来查看一个商品</p><p>4、用户可以通过输入一个name来查看一个商品</p><p>5、用户可以通过输入一个价格范围（比如： 100-&gt;200）来查看符合条件的商品</p><p>6、用户可以通过输入一个id来从数据库中删除一个商品</p><p>额外添加的需求:</p><p>7、用户可以通过指定一个id来修改一个商品的名称</p><p>8、用户可以通过制定一个id来修改一个商品的价格</p><p>9、用户可以通过制定一个id来修改一个商品的库存数量</p><p>要求：</p><p>a、整个程序要分成：交互层、 业务逻辑（service）层、 数据访问（dao）层</p><p>b、交互层和service层之间要用“面向接口编程”的模式来写</p><p>c、业务逻辑层和dao层之间要用“面向接口编程”的模式来写</p><blockquote><p>注：交互层打印菜单的过程很麻烦，可以不写交互层，只要完成service层的接口及实现类， dao层的接口及实现类即可。</p></blockquote><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><ul><li>需要完成这个项目，不仅需要有一定的Java基础知识，还需要掌握一定的数据库的操作和Java GUI的设计，对于这方面内容，推荐读者阅读《MySql必知必会》这本书入门数据库的基本操作。在构建项目的时候还需要勤查百度和相关文档。为了让没有相关基础的读者快速掌握关于该项目中的一些简单操作，在此推荐B站中的三个视频供大家参考：</li><li>Java图像界面编程：<a href="https://www.bilibili.com/video/BV1wh411d7it/?p=51">Java图形界面编程</a></li><li>MySQL数据库SQL语言入门：<a href="https://www.bilibili.com/video/BV1YY411s7Nk/?vd_source=ef77f99dbf6da2761d373027f1ca87d7">MySQL数据库SQL语言入门</a></li><li>Java语言连接操作MySQL数据库，JDBC技术：<a href="https://www.bilibili.com/video/BV13F411z7Ls/?vd_source=ef77f99dbf6da2761d373027f1ca87d7">Java语言连接操作MySQL数据库，JDBC技术</a></li><li>当然，视频的作用只是辅助快速入门，关键还是需要多查询文档和百度。</li></ul><h3 id="程序设计"><a class="markdownIt-Anchor" href="#程序设计"></a> 程序设计</h3><ul><li>首先建立与数据库的连接并获取数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> service;<br><br><span class="hljs-keyword">import</span> java.sql.*;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">getData</span> &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">        通过id和name搜索</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  List&lt;Object&gt; <span class="hljs-title function_">search</span><span class="hljs-params">(String My_id)</span> &#123;<br><br>        <span class="hljs-comment">//创建列表</span><br>        List&lt;Object&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Object&gt;();<br><br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">resultset</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">ps</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-comment">//System.out.println(&quot;输入要搜索商品的id或者name：&quot;);</span><br>        <span class="hljs-comment">//Scanner sc1 = new Scanner(System.in);</span><br>        <span class="hljs-comment">//String search = sc1.nextLine();</span><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                connection = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/goods&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>);<br><br>                statement = connection.createStatement();<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select * from goods where id =? or name = ?&quot;</span>;<br>                ps=connection.prepareStatement(sql);<span class="hljs-comment">//添加数据预处理</span><br>                ps.setString(<span class="hljs-number">1</span>, My_id);<br>                ps.setString(<span class="hljs-number">2</span>, My_id);<br>                resultset = ps.executeQuery();<br><br>                <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">while</span>(resultset.next())&#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> resultset.getString(<span class="hljs-string">&quot;id&quot;</span>);<br>                    list.add(i,id);<br>                    i++;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> resultset.getString(<span class="hljs-string">&quot;name&quot;</span>);<br>                    list.add(i,name);<br>                    i++;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> resultset.getInt(<span class="hljs-string">&quot;price&quot;</span>);<br>                    list.add(i,price);<br>                    i++;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> resultset.getInt(<span class="hljs-string">&quot;num&quot;</span>);<br>                    list.add(i,num);<br>                    i++;<br>                    <span class="hljs-comment">//System.out.println(&quot;id:&quot;+id+&quot;   &quot;+&quot;name:&quot;+name+&quot;   &quot;+&quot;price:&quot;+price+&quot;   &quot;+&quot;num:&quot;+num);</span><br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span>&#123;<br>            close(connection);<br>            close(statement);<br>            close(resultset);<br>        &#125;<br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">            关闭连接</span><br><span class="hljs-comment">            */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(AutoCloseable autoCloseable)</span>&#123;<br>        <span class="hljs-keyword">if</span>(autoCloseable != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                autoCloseable.close();<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>向数据库中添加数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> service;<br><br><span class="hljs-keyword">import</span> java.sql.*;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">addData</span> &#123;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    添加数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addData</span><span class="hljs-params">(String id,String name,<span class="hljs-type">int</span> price,<span class="hljs-type">int</span> num)</span> &#123;<br><br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">resultset</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">ps</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                connection = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/goods&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>);<br><br><span class="hljs-comment">//                if(connection != null)&#123;</span><br><span class="hljs-comment">//                    System.out.println(&quot;连接成功&quot;+connection);</span><br><span class="hljs-comment">//                    connection.close();</span><br><span class="hljs-comment">//                &#125;</span><br>                statement = connection.createStatement();<br>                resultset =  statement.executeQuery(<span class="hljs-string">&quot;select * from goods&quot;</span>);<br>                String sql;<br>                sql=<span class="hljs-string">&quot;INSERT INTO goods VALUES(?,?,?,?)&quot;</span>;<span class="hljs-comment">//向goods表里添加数据</span><br>                ps=connection.prepareStatement(sql);<span class="hljs-comment">//添加数据预处理</span><br>                ps.setString(<span class="hljs-number">1</span>, id);<br>                ps.setString(<span class="hljs-number">2</span>, name);<br>                ps.setInt(<span class="hljs-number">3</span>, price);<br>                ps.setInt(<span class="hljs-number">4</span>, num);<br>                ps.executeUpdate();<span class="hljs-comment">//执行添加数据</span><br>                System.out.println(<span class="hljs-string">&quot;添加&quot;</span>+id+<span class="hljs-string">&quot;数据成功！&quot;</span>);<br>                <span class="hljs-comment">// 完成后关闭</span><br>                ps.close();<br>                statement.close();<br>                connection.close();<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span>&#123;<br>            close(connection);<br>            close(statement);<br>            close(resultset);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">            关闭连接</span><br><span class="hljs-comment">            */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(AutoCloseable autoCloseable)</span>&#123;<br>        <span class="hljs-keyword">if</span>(autoCloseable != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                autoCloseable.close();<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>更改数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> gui.service;<br><br><span class="hljs-keyword">import</span> java.sql.*;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">changeData</span> &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">            修改</span><br><span class="hljs-comment">        */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">change</span><span class="hljs-params">(String My_id,String My_name ,<span class="hljs-type">int</span> My_price,<span class="hljs-type">int</span> My_num)</span> &#123;<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">resultset</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">ps</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                connection = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/goods&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>);<br><br><span class="hljs-comment">//                if(connection != null)&#123;</span><br><span class="hljs-comment">//                    System.out.println(&quot;连接成功&quot;+connection);</span><br><span class="hljs-comment">//                    connection.close();</span><br><span class="hljs-comment">//                &#125;</span><br>                statement = connection.createStatement();<br><br>                <span class="hljs-comment">//拼接字符串，直接使用？会自动加上单引号。</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;UPDATE goods SET &quot;</span>;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;name = ? &quot;</span>;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;,price = ? ,&quot;</span>;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql4</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;num = ?&quot;</span>;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql5</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot; WHERE id=?&quot;</span>;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql6</span> <span class="hljs-operator">=</span> sql1+sql2+sql3+sql4+sql5;<br><br>                ps=connection.prepareStatement(sql6);<span class="hljs-comment">//添加数据预处理</span><br>                ps.setString(<span class="hljs-number">1</span>, My_name);<br>                    ps.setInt(<span class="hljs-number">2</span>, My_price);<br>                    ps.setInt(<span class="hljs-number">3</span>, My_num);<br>                    ps.setString(<span class="hljs-number">4</span>, My_id);<br>                    ps.executeUpdate();<span class="hljs-comment">//执行修改数据</span><br><br>            &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span>&#123;<br>            close(connection);<br>            close(statement);<br>            close(resultset);<br>            close(ps);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">               关闭连接</span><br><span class="hljs-comment">               */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(AutoCloseable autoCloseable)</span>&#123;<br>        <span class="hljs-keyword">if</span>(autoCloseable != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                autoCloseable.close();<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> gui.service;<br><br><span class="hljs-keyword">import</span> java.sql.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">delData</span> &#123;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">      删除数据</span><br><span class="hljs-comment">       */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">del_data</span><span class="hljs-params">(String My_id)</span> &#123;<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">resultset</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">ps</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                connection = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/goods&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>);<br><br><span class="hljs-comment">//                if(connection != null)&#123;</span><br><span class="hljs-comment">//                    System.out.println(&quot;连接成功&quot;+connection);</span><br><span class="hljs-comment">//                    connection.close();</span><br><span class="hljs-comment">//                &#125;</span><br>                statement = connection.createStatement();<br>                resultset =  statement.executeQuery(<span class="hljs-string">&quot;select * from goods&quot;</span>);<br>                String sql;<br>                sql=<span class="hljs-string">&quot;DELETE FROM goods WHERE id=?&quot;</span>;<span class="hljs-comment">//向goods表里删除数据</span><br>                ps=connection.prepareStatement(sql);<span class="hljs-comment">//添加数据预处理</span><br>                ps.setString(<span class="hljs-number">1</span>,My_id);<span class="hljs-comment">//第1个问号的值</span><br>                ps.executeUpdate();<span class="hljs-comment">//执行添加数据</span><br>                System.out.println(<span class="hljs-string">&quot;删除&quot;</span>+My_id+<span class="hljs-string">&quot;数据成功！&quot;</span>);<br>                <span class="hljs-comment">// 完成后关闭</span><br>                ps.close();<br>                statement.close();<br>                connection.close();<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span>&#123;<br>            close(connection);<br>            close(statement);<br>            close(resultset);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     关闭连接</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(AutoCloseable autoCloseable)</span>&#123;<br>        <span class="hljs-keyword">if</span>(autoCloseable != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                autoCloseable.close();<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>筛选数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> gui.service;<br><br><span class="hljs-keyword">import</span> java.sql.*;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">chooseData</span> &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">        通过id和name搜索</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;Object&gt; <span class="hljs-title function_">search</span><span class="hljs-params">(String My_data)</span> &#123;<br><br>        <span class="hljs-comment">//创建列表</span><br>        List&lt;Object&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Object&gt;();<br><br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">statement</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">resultset</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">PreparedStatement</span> <span class="hljs-variable">ps</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                connection = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/goods&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;1234&quot;</span>);<br><br><span class="hljs-comment">//                if(connection != null)&#123;</span><br><span class="hljs-comment">//                    System.out.println(&quot;连接成功&quot;+connection);</span><br><span class="hljs-comment">//                    connection.close();</span><br><span class="hljs-comment">//                &#125;</span><br>                statement = connection.createStatement();<br>                <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select * from goods where id =? or name = ?&quot;</span>;<br>                ps=connection.prepareStatement(sql);<span class="hljs-comment">//添加数据预处理</span><br>                ps.setString(<span class="hljs-number">1</span>, My_data);<br>                ps.setString(<span class="hljs-number">2</span>, My_data);<br>                resultset = ps.executeQuery();<br><br>                <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">while</span>(resultset.next())&#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> resultset.getString(<span class="hljs-string">&quot;id&quot;</span>);<br>                    list.add(i,id);<br>                    i++;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> resultset.getString(<span class="hljs-string">&quot;name&quot;</span>);<br>                    list.add(i,name);<br>                    i++;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> resultset.getInt(<span class="hljs-string">&quot;price&quot;</span>);<br>                    list.add(i,price);<br>                    i++;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> resultset.getInt(<span class="hljs-string">&quot;num&quot;</span>);<br>                    list.add(i,num);<br>                    i++;<br>                    <span class="hljs-comment">//System.out.println(&quot;id:&quot;+id+&quot;   &quot;+&quot;name:&quot;+name+&quot;   &quot;+&quot;price:&quot;+price+&quot;   &quot;+&quot;num:&quot;+num);</span><br>                &#125;<br><br>            &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException e) &#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">finally</span>&#123;<br>            close(connection);<br>            close(statement);<br>            close(resultset);<br>        &#125;<br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">               关闭连接</span><br><span class="hljs-comment">               */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">(AutoCloseable autoCloseable)</span>&#123;<br>        <span class="hljs-keyword">if</span>(autoCloseable != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                autoCloseable.close();<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="swing组件gui设计"><a class="markdownIt-Anchor" href="#swing组件gui设计"></a> Swing组件GUI设计</h3><ul><li><p>该层主要采用<strong>Swing类</strong>的各种组件和方法实现图形用户界面,并且下载了相应的主题优化了组件的外观，使其达到精美的效果！</p></li><li><p>使用<strong>JFrame</strong>作为面板组件的载体。</p></li><li><p>使用<strong>JPanel</strong>组件作为基础组件的载体，并且设置面板的大小，位置以及布局方式。</p></li><li><p>使用<strong>JBox</strong>打包对应组件为一个完整的整体，并确定竖直和横向的排布。</p></li><li><p>使用<strong>JLabel、JTextField、JButton、JPassword、JSplit</strong>等基本组件并且设置其<strong>格式</strong>，包括<strong>颜色</strong>、<strong>大小</strong>、<strong>位置</strong>等。</p></li><li><p>因为需要为交互的组件添加<strong>监视器</strong>来实现<strong>动态响应</strong>，最终组合<strong>JFrame</strong>的内容为总体系统。</p></li></ul><h3 id="项目展示"><a class="markdownIt-Anchor" href="#项目展示"></a> 项目展示</h3><ul><li>登录界面                   用户名:root                    密码:1234</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui1.png" alt=" " /></p><ul><li>数据管理界面，基本功能模块和数据表格显示</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui2.png" alt=" " /></p><ul><li>添加数据功能</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui3.png" alt=" " /></p><ul><li>修改数据功能</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui4.png" alt=" " /></p><ul><li>数据筛选功能</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui5.png" alt=" " /></p><ul><li>页眉部分拓展功能</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui.png" alt=" " /></p><ul><li>关于作者界面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/gui6.png" alt=" " /></p><h3 id="项目下载"><a class="markdownIt-Anchor" href="#项目下载"></a> 项目下载</h3><ul><li><p>由于本项目代码量巨大，详细工程就不展示在本博客中，同时为了促进大家相互学习和共同进步，在此提供公开版项目供大家使用，一起进步！</p></li><li><p>公开版项目是精简了一些冗余的外观，尽量保留原汁原味JavaGUI，更加关注后台数据处理和交互的过程！读者可以根据初始GUI进行深度定制，随时随地制作出合你心意的作品。鉴于本人水平有限，本项目依然有很多不足之处，欢迎大家在下方评论区留言指正！</p></li><li><p>本公开版项目能够直接运行Main.java即可，若连接数据库，读者需要首先自行在本机安装MySql并将相关内容在service文件夹即业务逻辑层修改部分代码才可完美运行。</p></li><li><p>本项目所有功能已经测试通过，如仍然有Bug欢迎指正！</p></li><li><p>下载连接：<a href="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bc82cde5-9df0-4e04-8d4f-a0e9e1bd241b/9220f08e-f2ed-484f-b9b1-60f13b8ea3ba.zip">公开版项目点此下载</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信号的时域处理</title>
      <link href="/2022/10/13/signal_2/"/>
      <url>/2022/10/13/signal_2/</url>
      
        <content type="html"><![CDATA[<h1 id="信号的时域处理"><a class="markdownIt-Anchor" href="#信号的时域处理"></a> <strong>信号的时域处理</strong></h1><h2 id="第一问"><a class="markdownIt-Anchor" href="#第一问"></a> 第一问</h2><h2 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h2><p>① 选择子作业１中的音频信号，自行给定滤波器的<strong>系统函数</strong>，采用<strong>差分方程方法</strong>对音频信号进行滤波处理，<strong>比较滤波前后信号的波形</strong>和回放的效果。</p><h2 id="实验原理"><a class="markdownIt-Anchor" href="#实验原理"></a> 实验原理</h2><ul><li>对于直接I型的<strong>IIR滤波器</strong>(<strong>无限长单位冲激响应滤波器</strong>)的系统函数为：</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>Y</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><msub><mi>b</mi><mi>k</mi></msub><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow><mrow><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>a</mi><mi>k</mi></msub><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(z)=\frac{Y(z)}{X(z)}=\frac{\sum _{k=0}^{M}b_{k}z^{-k}}{1-\sum _{k=1}^{N}a_{k}z^{-k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.841882em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>其对应的<strong>差分方程</strong>为：</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>a</mi><mi>k</mi></msub><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><msub><mi>b</mi><mi>k</mi></msub><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)=\sum _{k=1}^{N}a_{k}y(n-k)+\sum _{k=0}^{M}b_{k}x(n-k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></span></p><ul><li>由此，我们只需要求出对应的<strong>差分方程系数</strong>就能够确定一个IIR滤波器。</li></ul><h3 id="巴特沃斯滤波器的设计"><a class="markdownIt-Anchor" href="#巴特沃斯滤波器的设计"></a> 巴特沃斯滤波器的设计</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/butterworth.png" alt=" " /></p><ul><li>比较经典的<strong>IIR滤波器</strong>有<strong>巴特沃斯滤波器</strong>，我们可以根据我们所需要设计的需求来确定<strong>通带截止频率</strong>和<strong>阻带截止频率</strong>以及<strong>通带最大衰减分贝</strong>和<strong>阻带最小衰减分贝</strong>，运用<strong>Matlab</strong>完善的函数运算功能就能够确定出巴特沃斯滤波器的对应的<strong>差分方程系数</strong>。</li></ul><h2 id="程序设计"><a class="markdownIt-Anchor" href="#程序设计"></a> 程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;Carmen_overture_noisy_8k_9.5k.wav&#x27;</span>);<br>x=x.&#x27;;<span class="hljs-comment">%转置</span><br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">221</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">222</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%巴特沃斯滤波器设计</span><br>wp=<span class="hljs-number">2</span>*<span class="hljs-number">7760</span>/Fs;<span class="hljs-comment">%通带截止频率（数字滤波器作归一化变换）</span><br>ws=<span class="hljs-number">2</span>*<span class="hljs-number">8000</span>/Fs;<span class="hljs-comment">%阻带截止频率（数字滤波器作归一化变换）</span><br>Rp=<span class="hljs-number">2</span>;<span class="hljs-comment">%通带最大衰减2dB</span><br>As=<span class="hljs-number">30</span>;<span class="hljs-comment">%阻带最小衰减30dB</span><br>[N,wc]=buttord(wp,ws,Rp,As);<span class="hljs-comment">%求滤波器的阶数N与3dB截止频率wc</span><br>[b,a]=butter(N,wc);<span class="hljs-comment">%得到差分方程系数</span><br>y=filter(b,a,x);<span class="hljs-comment">%滤波</span><br>subplot(<span class="hljs-number">223</span>);<br><span class="hljs-built_in">plot</span>(time,y);<br>title(<span class="hljs-string">&#x27;直接法滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">224</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;直接法滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%绘制归一化滤波器参数</span><br><span class="hljs-built_in">figure</span>(<span class="hljs-number">2</span>);<br>freqz(b,a);<br><br><span class="hljs-comment">%写入和试听音频</span><br>audiowrite(<span class="hljs-string">&#x27;direct.wav&#x27;</span>,y,Fs);<br></code></pre></td></tr></table></figure><h2 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h2><ul><li><strong>巴特沃斯滤波器</strong>归一化频率<strong>幅频响应</strong>和<strong>相频响应</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/IIR%E5%B9%85%E9%A2%91%E5%93%8D%E5%BA%94.png" alt=" " /></p><ul><li><strong>巴特沃斯滤波器</strong>滤波效果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/IIR%E5%AF%B9%E6%AF%94%E5%9B%BE.png" alt="" /></p><h2 id="分析总结"><a class="markdownIt-Anchor" href="#分析总结"></a> 分析总结</h2><ul><li>首先对原始音频信号进行<strong>快速傅里叶变换</strong>观察其频谱，发现在<strong>8kHz-9.5kHz</strong>有<strong>高频噪声信号</strong>。因此，滤波器理论截止频率应该在8kHz。查阅资料，对于<strong>差分方程法</strong>，我们选择<strong>IIR型</strong>中的<strong>巴特沃斯滤波器</strong>。经过多次测试，发现设置<strong>通带截止频率</strong>为7.76kHz，<strong>阻带截止频率</strong>为8kHz，<strong>通带最大衰减</strong>2dB，<strong>阻带最小衰减</strong>30dB。通过运算后得到滤波器系统函数的<strong>分子、分母多项式系数</strong>向量b和向量a，即为<strong>差分方程的系数</strong>。根据系统函数直接运算得到滤波效果如上图所示，试听生成的音频发现高频噪声已经滤去。</li></ul><h2 id="第二问"><a class="markdownIt-Anchor" href="#第二问"></a> 第二问</h2><h2 id="要求-2"><a class="markdownIt-Anchor" href="#要求-2"></a> 要求</h2><p>②  选择子作业１中的音频信号，自行给定滤波器的<strong>系统函数</strong>，采用<strong>时域线性卷积</strong>对音频信号进行滤波处理，<strong>比较滤波前后信号的波形</strong>和回放的效果。</p><h2 id="实验原理-2"><a class="markdownIt-Anchor" href="#实验原理-2"></a> 实验原理</h2><ul><li>对于FIR数字滤波器（有限长单位冲激响应滤波器），由于</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><msub><mi>b</mi><mi>k</mi></msub><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>M</mi></munderover><mi>h</mi><mrow><mo fence="true">[</mo><mi>k</mi><mo fence="true">]</mo></mrow><msup><mi>z</mi><mrow><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H(z)=\sum _{k=0}^{M}b_{k}z^{-k}=\sum _{k=0}^{M}h\left[ k \right] z^{-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>因此设计FIR数字滤波器时，我们只需要求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，即滤波器的单位冲激响应，与音频信号进行卷积后得到滤除高频噪声的音频信号。</li></ul><h2 id="程序设计-2"><a class="markdownIt-Anchor" href="#程序设计-2"></a> 程序设计</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear;<br><br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;Carmen_overture_noisy_8k_9.5k.wav&#x27;</span>);<br>x=x.&#x27;;<br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br>subplot(<span class="hljs-number">221</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半;</span><br>subplot(<span class="hljs-number">222</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%fir（默认汉宁窗）滤波器设计</span><br>h=fir1(<span class="hljs-number">3000</span>,<span class="hljs-number">7.99e3</span>*<span class="hljs-number">2</span>/<span class="hljs-number">22.05e3</span>);<br>y = conv(x,h);<span class="hljs-comment">%卷积运算</span><br>y(:,<span class="hljs-built_in">length</span>(x)+<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(y)) = [];<span class="hljs-comment">%将卷积后信号的长度变换为原信号长度</span><br>subplot(<span class="hljs-number">223</span>);<br><span class="hljs-built_in">plot</span>(time,y);<br>title(<span class="hljs-string">&#x27;卷积法滤波后声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%滤波后信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(y,<span class="hljs-built_in">length</span>(time));<br>k(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(k)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>l=f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>;<br>l(:,<span class="hljs-built_in">ceil</span>(<span class="hljs-built_in">length</span>(l)/<span class="hljs-number">2</span>):<span class="hljs-keyword">end</span>) = [];<span class="hljs-comment">%去掉快速傅里叶变换对称的一半</span><br>subplot(<span class="hljs-number">224</span>);<br><span class="hljs-built_in">plot</span>(l,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;卷积法滤波后声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%试听和写入信号</span><br> audiowrite(<span class="hljs-string">&#x27;fir_conv.wav&#x27;</span>,y,Fs);<br> <br><span class="hljs-built_in">figure</span>(<span class="hljs-number">2</span>);<br>stem(h,<span class="hljs-string">&#x27;.&#x27;</span>);<br>title(<span class="hljs-string">&#x27;FIR单位冲激响应&#x27;</span>)<br>axis([<span class="hljs-number">1460</span> <span class="hljs-number">1540</span> <span class="hljs-number">-0.3</span> <span class="hljs-number">0.8</span>]);<br></code></pre></td></tr></table></figure><h2 id="实验结果-2"><a class="markdownIt-Anchor" href="#实验结果-2"></a> 实验结果</h2><ul><li><strong>Hamming窗函数</strong>(单位冲激响应)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/FIR%E5%8D%95%E4%BD%8D%E5%86%B2%E6%BF%80%E5%93%8D%E5%BA%94.png" alt="" /></p><ul><li><strong>Hamming窗函数</strong>滤波效果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/FIR%E5%AF%B9%E6%AF%94%E5%9B%BE.png" alt="" /></p><h2 id="分析总结-2"><a class="markdownIt-Anchor" href="#分析总结-2"></a> 分析总结</h2><ul><li>首先对原始音频信号进行<strong>快速傅里叶变换</strong>观察其频谱，发现在<strong>8kHz-9.5kHz</strong>有<strong>高频噪声信号</strong>。因此，滤波器理论截止频率应该在8kHz。查阅资料，对于<strong>时域卷积法</strong>，我们选择<strong>FIR型</strong>中的<strong>Hamming窗</strong>。经过多次测试，发现设置<strong>3000阶</strong>的<strong>幅值3dB衰减对应频率在7.99kHz</strong>时效果较好。通过运算后得到滤波器的部分单位冲激响应如上图所示。根据<strong>单位冲激响应</strong>直接和<strong>时域波形</strong>进行<strong>卷积运算</strong>得到滤波效果如上图所示，试听生成的音频发现高频噪声已经滤去。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数字信号处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA程序设计实验练习一</title>
      <link href="/2022/09/29/exercise1/"/>
      <url>/2022/09/29/exercise1/</url>
      
        <content type="html"><![CDATA[<h1 id="实验题目"><a class="markdownIt-Anchor" href="#实验题目"></a> 实验题目</h1><h2 id="题目一"><a class="markdownIt-Anchor" href="#题目一"></a> 题目一</h2><h3 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目：</h3><p>定义一个数组类，编写成员函数实现以下功能：</p><ol><li><p>随机生成函数RandomArray（int n, int max）:随机生成一个一维整数数组，数组长度为n，元素值不超过max；</p></li><li><p>判断函数CheckOrder（）：判断数组中元素是否按升序排练，若是返回1，否返回0；</p></li><li><p>数组和函数Sum（）：计算数组和。</p></li><li><p>判断某个元素函数CheckKey（int key）：找到数组中的某个值（key），若有返回1，无返回0；</p></li><li><p>编写main函数，调用测试以上功能；</p></li></ol><h3 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果"></a> 运行结果：</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/java1.png" alt=" " /></p><h3 id="源代码"><a class="markdownIt-Anchor" href="#源代码"></a> 源代码：</h3><ul><li>定义数组类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Array</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> n;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> max;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span>[] arr;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Array</span><span class="hljs-params">()</span>&#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Array</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> max)</span>&#123;<br>        <span class="hljs-built_in">this</span>.n=n;<br>        <span class="hljs-built_in">this</span>.max=max;<br>        <span class="hljs-comment">//arr = new int[n];</span><br>    &#125;<br><br>    <span class="hljs-comment">//生成随机数</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getRandomNumberInRange</span><span class="hljs-params">(<span class="hljs-type">int</span> min, <span class="hljs-type">int</span> max)</span> &#123;<br>        <span class="hljs-keyword">if</span> (min &gt;= max) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;max must be greater than min&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">Random</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-keyword">return</span> r.nextInt((max - min) + <span class="hljs-number">1</span>) + min;<br>    &#125;<br><br>    <span class="hljs-comment">//随机数组</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">RandomArray</span><span class="hljs-params">(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> max)</span>&#123;<br>        arr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++)<br>        &#123;<br>            <span class="hljs-comment">//public int[] arr = new int[n];</span><br>            arr[i]=getRandomNumberInRange(<span class="hljs-number">0</span>,max);<br>        &#125;<br>        System.out.println(<span class="hljs-string">&quot;元素值不超过 &quot;</span>+max);<br>        System.out.println(<span class="hljs-string">&quot;数组长度是 &quot;</span>+arr.length);<br>    &#125;<br><br>    <span class="hljs-comment">//判断升序</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">CheckOrder</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">right1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;arr.length-<span class="hljs-number">1</span>;i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i]&gt;arr[i+<span class="hljs-number">1</span>])<br>            &#123;<br>              right1=<span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> right1=<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> right1;<br>    &#125;<br><br>    <span class="hljs-comment">//计算和</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">int</span> sum1=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++)<br>        &#123;<br>            sum1+=arr[i];<br>        &#125;<br>        <span class="hljs-keyword">return</span> sum1;<br>    &#125;<br><br>    <span class="hljs-comment">//判断函数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">CheckKey</span><span class="hljs-params">(<span class="hljs-type">int</span> key)</span>&#123;<br>        <span class="hljs-type">int</span> right1=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;arr.length;i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i]==key)<br>            &#123;<br>                right1=<span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> right1=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> right1;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>主函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">// write your code here</span><br>        <span class="hljs-type">Array</span> <span class="hljs-variable">array</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>);<br>        array.RandomArray(<span class="hljs-number">5</span>,<span class="hljs-number">50</span>);<br>        System.out.println(<span class="hljs-string">&quot;判断数组是否有值 &quot;</span>+array.CheckKey(<span class="hljs-number">1</span>));<br>        System.out.println(<span class="hljs-string">&quot;判断数组是否升序 &quot;</span>+array.CheckOrder());<br>        System.out.println(<span class="hljs-string">&quot;数组元素的和 &quot;</span>+array.sum());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="题目二"><a class="markdownIt-Anchor" href="#题目二"></a> 题目二</h2><h3 id="题目-2"><a class="markdownIt-Anchor" href="#题目-2"></a> 题目：</h3><p>编写程序，求圆柱体的体积CylinderVolume:</p><ol><li><p>设计一个计算圆面积的接口area，包含计算面积的方法bottomArea；</p></li><li><p>设计一个圆柱体类Cylinder实现接口area，包含</p></li></ol><ul><li><p>包含成员变量：高度，半径；</p></li><li><p>实现构造方法，对成员变量进行赋值；</p></li><li><p>实现圆柱体底面积成员方法area；</p></li><li><p>实现计算圆柱体体积的成员方法volume；</p></li></ul><ol start="3"><li>编写测试类计算圆柱体体积。</li></ol><h3 id="运行结果-2"><a class="markdownIt-Anchor" href="#运行结果-2"></a> 运行结果：</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/java2.png" alt=" " /></p><h3 id="源代码-2"><a class="markdownIt-Anchor" href="#源代码-2"></a> 源代码：</h3><ul><li>计算圆面积的接口area</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">area</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">bottomArea</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>圆柱体类Cylinder</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cylinder</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">area</span>&#123;<br><br>    <span class="hljs-comment">//成员属性</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> h;<span class="hljs-comment">//高度</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> r;<span class="hljs-comment">//半径</span><br><br>    <span class="hljs-comment">//构造函数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Cylinder</span><span class="hljs-params">()</span>&#123;<br>    &#125;<br>    <span class="hljs-comment">//构造函数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Cylinder</span><span class="hljs-params">(<span class="hljs-type">int</span> h,<span class="hljs-type">int</span> r)</span>&#123;<br>        <span class="hljs-built_in">this</span>.r=r;<br>        <span class="hljs-built_in">this</span>.h=h;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">area</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> Math.PI*r*r;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">volume</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> Math.PI*r*r*h;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">bottomArea</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Math.PI*r*r;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>主函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">// write your code here</span><br>        <span class="hljs-type">int</span> h=<span class="hljs-number">2</span>;<br>        <span class="hljs-type">int</span> r=<span class="hljs-number">2</span>;<br>        <span class="hljs-type">Cylinder</span> <span class="hljs-variable">cylinder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cylinder</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);<br>        System.out.println(<span class="hljs-string">&quot;高度&quot;</span>+h+<span class="hljs-string">&quot; 半径&quot;</span>+r);<span class="hljs-comment">//接口方法</span><br>        System.out.println(<span class="hljs-string">&quot;接口方法面积&quot;</span>+cylinder.bottomArea());<span class="hljs-comment">//接口方法</span><br>        System.out.println(<span class="hljs-string">&quot;成员方法面积&quot;</span>+cylinder.area());<span class="hljs-comment">//成员方法</span><br>        System.out.println(<span class="hljs-string">&quot;成员方法体积&quot;</span>+cylinder.volume());<span class="hljs-comment">//成员方法</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="题目三"><a class="markdownIt-Anchor" href="#题目三"></a> 题目三</h2><h3 id="题目-3"><a class="markdownIt-Anchor" href="#题目-3"></a> 题目：</h3><ol><li>定义一个父类Animal类</li></ol><p>属性：kind(种类)</p><p>方法：创建带参（kind为参数）构造方法</p><p>创建cry():void方法</p><ol start="2"><li>编写三个具体的子类Cat类、Dog类、Sheep类</li></ol><p>分别重写父类中的 cry() 方法，输出信息分别为</p><p>Cat类：小猫的叫声：喵喵喵~~~</p><p>Dog类：小狗的叫声：汪汪汪~~~</p><p>Sheep类：小羊的叫声：咩咩咩~~~</p><ol start="3"><li>编写测试类，首先生成长度为5的父类对象数组，然后通过循环依次向数组中存入数据，现设定存储规则为：</li></ol><p>a) 每次随机产生一个0~2的正整数</p><p>b) 若数值为 0，则生成一个 Cat 类的对象，存入数组</p><p>c) 若数值为 1，则生成一个 Dog 类的对象，存入数组</p><p>d) 若数值为 2，则生成一个 Sheep 类的对象，存入数组</p><p>最后循环输出数组成员，并分别调用 cry() 方法。</p><h3 id="运行结果-3"><a class="markdownIt-Anchor" href="#运行结果-3"></a> 运行结果:</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/java3.png" alt=" " /></p><h3 id="源代码-3"><a class="markdownIt-Anchor" href="#源代码-3"></a> 源代码：</h3><ul><li>父类（动物）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> &#123;<br><br>    <span class="hljs-keyword">protected</span> String kind;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Animal</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Animal</span><span class="hljs-params">(String kind)</span>&#123;<br>          <span class="hljs-built_in">this</span>.kind=kind;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cry</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>子类（猫）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span>&#123;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">Cat</span><span class="hljs-params">(String kind)</span>&#123;<br>       <span class="hljs-built_in">super</span>(kind);<br>   &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cry</span><span class="hljs-params">()</span>&#123;<br>       System.out.println(<span class="hljs-built_in">this</span>.kind+<span class="hljs-string">&quot;的叫声：喵喵喵~~~&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>子类（狗）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dog</span><span class="hljs-params">(String kind)</span>&#123;<br>        <span class="hljs-built_in">super</span>(kind);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cry</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.kind+<span class="hljs-string">&quot;的叫声：汪汪汪~~~&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>子类（羊）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Sheep</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Sheep</span><span class="hljs-params">(String kind)</span>&#123;<br>        <span class="hljs-built_in">super</span>(kind);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cry</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.kind+<span class="hljs-string">&quot;的叫声：咩咩咩~~~&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>主函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.company;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">// write your code here</span><br>         Animal[] animal = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Animal</span>[<span class="hljs-number">5</span>];<span class="hljs-comment">//生成5个数组</span><br>        <span class="hljs-comment">//System.out.println(animal.length);</span><br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;animal.length;i++)<br>       &#123;<br>           <span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>().nextInt(<span class="hljs-number">3</span>);<br>           <span class="hljs-keyword">if</span>(num==<span class="hljs-number">0</span>)<br>           &#123;<br>             animal[i] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>(<span class="hljs-string">&quot;cat&quot;</span>+i);<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num==<span class="hljs-number">1</span>)<br>           &#123;<br>               animal[i] =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Dog</span>(<span class="hljs-string">&quot;dog&quot;</span>+i);<br>           &#125;<br>           <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num==<span class="hljs-number">2</span>)<br>           &#123;<br>               animal[i] =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Sheep</span>(<span class="hljs-string">&quot;sheep&quot;</span>+i);<br>           &#125;<br>       &#125;<br>        <span class="hljs-keyword">for</span>(Animal j:animal)<br>        &#123;<br>            j.cry();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信号的采样与重建</title>
      <link href="/2022/09/22/signal_1/"/>
      <url>/2022/09/22/signal_1/</url>
      
        <content type="html"><![CDATA[<h1 id="信号的采样与重建"><a class="markdownIt-Anchor" href="#信号的采样与重建"></a> <strong>信号的采样与重建</strong></h1><h2 id="第一问"><a class="markdownIt-Anchor" href="#第一问"></a> 第一问</h2><h3 id="要求"><a class="markdownIt-Anchor" href="#要求"></a> 要求</h3><p>①固定采样频率500 kHz，分别对100 kHz、250 kHz、400 kHz的正弦波信号（幅度，相位自定义）进行采样和重建，分析比较原信号与重建信号的波形；</p><h3 id="程序设计"><a class="markdownIt-Anchor" href="#程序设计"></a> 程序设计</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear<br><span class="hljs-comment">%参数设定</span><br>f1 = <span class="hljs-number">100000</span>;<span class="hljs-comment">%信号频率</span><br>fs = <span class="hljs-number">500000</span>;<span class="hljs-comment">%采样频率</span><br>dt = <span class="hljs-number">1</span>/fs; <span class="hljs-comment">% 采样间隔，采样间隔可以理解为采样信号的周期，周期 = 1/频率</span><br>Tf = <span class="hljs-number">1</span>/f1; <span class="hljs-comment">%  一个信号周期的时间</span><br><br><span class="hljs-comment">%可得参数</span><br>t = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">20</span>*Tf,<span class="hljs-number">1000</span>*<span class="hljs-number">20</span>); <span class="hljs-comment">% 原信号每个周期内的点数为1000个点</span><br>f_ori = <span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span> * <span class="hljs-built_in">pi</span> * f1 * t) ;<br><span class="hljs-comment">%figure(1);</span><br>subplot(<span class="hljs-number">221</span>);<br><span class="hljs-built_in">plot</span>(t, f_ori);title(strcat(num2str(f1/<span class="hljs-number">1000</span>),<span class="hljs-string">&#x27;kHz原始信号&#x27;</span>));xlabel(<span class="hljs-string">&#x27;t/s&#x27;</span>);<br><br><span class="hljs-comment">%采样</span><br>t2  = <span class="hljs-number">0</span>:dt:t(<span class="hljs-keyword">end</span>); <span class="hljs-comment">% 整个信号时间范围内采样</span><br>f_sam =  <span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span> * <span class="hljs-built_in">pi</span> * f1 * t2) ;<br><span class="hljs-comment">%figure(2);</span><br>subplot(<span class="hljs-number">222</span>);<br>stem(t2, f_sam,<span class="hljs-string">&#x27;.&#x27;</span>);title(<span class="hljs-string">&#x27;采样信号(500kHz采样率)&#x27;</span>);xlabel(<span class="hljs-string">&#x27;t/s&#x27;</span>);<br><br><span class="hljs-comment">%fft变换</span><br>f_<span class="hljs-built_in">true</span>=t2*fs/<span class="hljs-built_in">length</span>(t2);<br>k=fft(f_sam,<span class="hljs-built_in">length</span>(t2));<br><span class="hljs-comment">%figure(3);</span><br>subplot(<span class="hljs-number">223</span>);<br>stem(f_<span class="hljs-built_in">true</span>*fs/<span class="hljs-number">1e3</span>,<span class="hljs-built_in">abs</span>(k),<span class="hljs-string">&#x27;.&#x27;</span>);title(<span class="hljs-string">&#x27;采样信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%恢复</span><br>y = [];<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">length</span>(t)<br>    x = t(<span class="hljs-built_in">i</span>);<br>    h = sinc((x - t2).*fs);<br>    g = <span class="hljs-built_in">dot</span>(f_sam, h);<span class="hljs-comment">%向量相乘</span><br>    y = [y,g];<br><span class="hljs-keyword">end</span><br>subplot(<span class="hljs-number">224</span>);<br><span class="hljs-comment">%figure(4);</span><br><span class="hljs-built_in">plot</span>(t, y);title(<span class="hljs-string">&#x27;恢复信号&#x27;</span>);xlabel(<span class="hljs-string">&#x27;t/s&#x27;</span>);<br></code></pre></td></tr></table></figure><h3 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h3><ul><li><p>100kHz原始信号</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/100k_1.png" alt=" " /></p></li><li><p>250kHz原始信号</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/250k_1.png" alt=" " /></p></li><li><p>400kHz原始信号</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/400k_1.png" alt=" " /></p></li></ul><h3 id="分析总结"><a class="markdownIt-Anchor" href="#分析总结"></a> 分析总结</h3><ul><li>从上述图像中可以看出，当固定采样频率500kHz时，对于100kHz的信号采样并进行傅里叶变换后可以看出幅频特性较为准确，因为满足奈奎斯特采样定律，采样频率大于原始信号频率的两倍以上，处于过采样状态。当使用上述采样率采集250kHz的信号时出现了幅值一定的失真，此时处于临界采样状态。当使用上述采样率采集400kHz的信号时出现了幅值和频率的失真，此时处于欠采样状态。</li><li>上述程序设计中使用<code>dot</code>函数，具有一定创新性。</li></ul><h2 id="第二问"><a class="markdownIt-Anchor" href="#第二问"></a> 第二问</h2><h3 id="要求-2"><a class="markdownIt-Anchor" href="#要求-2"></a> 要求</h3><p>②采集一段音频信号，分别用欠采样、临界采样和过采样对信号进行重采样，并重建原音频信号，分析比较重建信号与原信号的差别。</p><h3 id="程序设计-2"><a class="markdownIt-Anchor" href="#程序设计-2"></a> 程序设计</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs matlab">clear<br><span class="hljs-comment">%声音信号的采样</span><br>[x,Fs] = audioread(<span class="hljs-string">&#x27;oba.mp3&#x27;</span>);<br>x=x(:,<span class="hljs-number">1</span>);<span class="hljs-comment">%由于x是双声道，所以取它的左声道</span><br>x = resample(x,<span class="hljs-number">13000</span>,Fs) ; <span class="hljs-comment">%重新采样</span><br>x=x.&#x27;;<br>Fs=<span class="hljs-number">13000</span>;<br>n=<span class="hljs-built_in">length</span>(x);<span class="hljs-comment">%获取x的采样点数</span><br>dt=<span class="hljs-number">1</span>/Fs;<span class="hljs-comment">%求采样间隔</span><br>time=(<span class="hljs-number">0</span>:n<span class="hljs-number">-1</span>)*dt;<span class="hljs-comment">%采样时间点</span><br><span class="hljs-comment">%figure(1);</span><br>subplot(<span class="hljs-number">321</span>);<br><span class="hljs-built_in">plot</span>(time,x);<br>title(<span class="hljs-string">&#x27;原始声音信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%原始信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(x,<span class="hljs-built_in">length</span>(time));<br><span class="hljs-comment">%figure(2);</span><br>subplot(<span class="hljs-number">322</span>);<br><span class="hljs-built_in">plot</span>(f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;原始声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%对原始信号进行采样</span><br>fs=Fs/<span class="hljs-number">2</span>; <span class="hljs-comment">%新的采样率</span><br>y = resample(x,fs,Fs) ; <span class="hljs-comment">%从x中第一个元素开始采样(奇采样)</span><br>n_sam=<span class="hljs-built_in">length</span>(y);<span class="hljs-comment">%获取y的采样点数</span><br>dt_sam=<span class="hljs-number">1</span>/fs;<span class="hljs-comment">%求采样间隔</span><br>time_sam=(<span class="hljs-number">0</span>:n_sam<span class="hljs-number">-1</span>)*dt_sam;<span class="hljs-comment">%新的采样时间点</span><br><span class="hljs-comment">%figure(3);</span><br>subplot(<span class="hljs-number">323</span>);<br><span class="hljs-built_in">plot</span>(time_sam,y);<br>title(<span class="hljs-string">&#x27;过采样信号时域波形&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;时间/s&#x27;</span>);<br><br><span class="hljs-comment">%采样信号fft变换</span><br>f_<span class="hljs-built_in">true</span>_sam=time_sam*Fs/<span class="hljs-built_in">length</span>(time_sam);<br>k=fft(y,<span class="hljs-built_in">length</span>(time_sam));<br><span class="hljs-comment">%figure(4);</span><br>subplot(<span class="hljs-number">324</span>);<br><span class="hljs-built_in">plot</span>(f_<span class="hljs-built_in">true</span>_sam*fs/<span class="hljs-number">1e3</span>,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;过采样信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%重建信号</span><br>z = [];<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span> : <span class="hljs-built_in">length</span>(x)<br>    m = time(<span class="hljs-built_in">i</span>);<br>    h = sinc((m - time_sam).*fs);<br>    g=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span>:<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(y)<br>        s=y(<span class="hljs-built_in">j</span>)*h(<span class="hljs-built_in">j</span>);<br>        g=g+s;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-comment">%g = dot(y, h);%向量相乘</span><br>    z = [z,g];<br><span class="hljs-keyword">end</span><br><span class="hljs-comment">%figure(5);</span><br>subplot(<span class="hljs-number">325</span>);<br><span class="hljs-built_in">plot</span>(time, z);title(<span class="hljs-string">&#x27;重建声音信号&#x27;</span>);xlabel(<span class="hljs-string">&#x27;t/s&#x27;</span>);<br><br><span class="hljs-comment">%重建信号fft变换</span><br>f_<span class="hljs-built_in">true</span>=time*Fs/<span class="hljs-built_in">length</span>(time);<br>k=fft(z,<span class="hljs-built_in">length</span>(time));<br><span class="hljs-comment">%figure(6);</span><br>subplot(<span class="hljs-number">326</span>);<br><span class="hljs-built_in">plot</span>(f_<span class="hljs-built_in">true</span>*Fs/<span class="hljs-number">1e3</span>,<span class="hljs-built_in">abs</span>(k));title(<span class="hljs-string">&#x27;重建声音信号傅里叶变换&#x27;</span>);xlabel(<span class="hljs-string">&#x27;kHz&#x27;</span>);<br><br><span class="hljs-comment">%试听和写入信号</span><br> sound(z,Fs);<br> audiowrite(<span class="hljs-string">&#x27;over_sampling.wav&#x27;</span>,z,Fs);<br></code></pre></td></tr></table></figure><h3 id="实验结果-2"><a class="markdownIt-Anchor" href="#实验结果-2"></a> 实验结果</h3><ul><li><p>临界采样</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/critical_sampling.png" alt=" " /></p></li><li><p>欠采样</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/under_sampling.png" alt=" " /></p></li><li><p>过采样</p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/over_sampling.png" alt=" " /></p></li></ul><h3 id="分析总结-2"><a class="markdownIt-Anchor" href="#分析总结-2"></a> 分析总结</h3><ul><li>首先对音频信号进行快速傅里叶变换和查阅人类发出声音的频率范围确定最高频率，此处取6.5kHz采样率作为临界采样率，由此可以得知低于6.5kHz采样率为欠采样，高于6.5kHz采样率为过采样。</li><li>按照上述分析理论进行设计并测试，对比其傅里叶变换频谱图看出符合上述理论，对比试听恢复的声音信号（见附件），可以听到临界采样恢复的声音信号和过采样恢复的声音信号与原信号差别不大，而欠采样的信号与原信号相比有较大失真，与奈奎斯特采样定理的理论相符合。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数字信号处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字信号处理 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打包.exe应用程序</title>
      <link href="/2022/09/06/Myexe/"/>
      <url>/2022/09/06/Myexe/</url>
      
        <content type="html"><![CDATA[<h1 id="打包exe应用程序"><a class="markdownIt-Anchor" href="#打包exe应用程序"></a> 打包.exe应用程序</h1><h2 id="用python打包exe应用程序-pyinstaller"><a class="markdownIt-Anchor" href="#用python打包exe应用程序-pyinstaller"></a> 用python打包exe应用程序-PyInstaller</h2><h3 id="1-pyinstaller简介"><a class="markdownIt-Anchor" href="#1-pyinstaller简介"></a> <strong>1、PyInstaller简介</strong></h3><p>PyInstaller是一个跨平台的Python应用打包工具，支持 Windows/Linux/MacOS三大主流平台，能够把 Python 脚本及其所在的 Python 解释器打包成可执行文件，从而允许最终用户在无需安装 Python 的情况下执行应用程序。<br />PyInstaller 制作出来的执行文件并不是跨平台的，如果需要为不同平台打包，就要在相应平台上运行PyInstaller进行打包。</p><h3 id="2-pyinstaller安装"><a class="markdownIt-Anchor" href="#2-pyinstaller安装"></a> <strong>2、PyInstaller安装</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple Pyinstaller<br></code></pre></td></tr></table></figure><h3 id="3参数含义"><a class="markdownIt-Anchor" href="#3参数含义"></a> 3.参数含义</h3><p><strong>-F</strong> 表示生成单个可执行文件</p><p><strong>-w</strong> 表示去掉控制台窗口，这在GUI界面时非常有用。不过如果是命令行程序的话那就把这个选项删除吧！</p><p><strong>-p</strong> 表示你自己自定义需要加载的类路径，一般情况下用不到</p><p><strong>-i</strong> 表示可执行文件的图标</p><h3 id="4示例"><a class="markdownIt-Anchor" href="#4示例"></a> 4.示例</h3><p>在<code>.py</code>和<code>.ico</code>文件夹下打开终端</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">pyinstaller -F -<span class="hljs-selector-tag">i</span> ./fac<span class="hljs-selector-class">.ico</span> tree.py<br></code></pre></td></tr></table></figure><p>这个时候多了很多文件和文件夹，dist目录就是我们打包好的地方。使用-w只生成<code>.exe</code>文件</p><h2 id="python使得exe文件运行完保留"><a class="markdownIt-Anchor" href="#python使得exe文件运行完保留"></a> PYTHON使得.exe文件运行完保留</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>os.system(<span class="hljs-string">&quot;pause&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="c使得exe文件运行完保留"><a class="markdownIt-Anchor" href="#c使得exe文件运行完保留"></a> C++使得.exe文件运行完保留</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;Pause&quot;</span>);<span class="hljs-comment">//生成的exe运行完程序保留，点任意键结束</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 可执行文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PYTHON </tag>
            
            <tag> exe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Graph Counts</title>
      <link href="/2021/12/12/graph%20counts/"/>
      <url>/2021/12/12/graph%20counts/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/4.png" alt=" " /></p><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/5.png" alt=" " /></p><h3 id="hints"><a class="markdownIt-Anchor" href="#hints"></a> Hints</h3><p>•Each edge has weight of 1.</p><p>•Find shortest path for every two nodes using <strong>Floyd</strong> algorithm. Use length[][] to know shortest path length.</p><h3 id="示例邻接表"><a class="markdownIt-Anchor" href="#示例邻接表"></a> 示例邻接表</h3><p>0;1;2;4<br />1;0<br />2;0;4<br />3;4;6<br />4;0;2;3;5<br />5;4;6<br />6;3;5</p><h3 id="实现原理"><a class="markdownIt-Anchor" href="#实现原理"></a> 实现原理</h3><p>​     导入邻接表放入一个二维数组中，根据该邻接表建立邻接矩阵，然后根据Floyd算法（从i号顶点到j号顶点只经过前k号点的最短路程）得到最短路径矩阵，最后根据DFS寻找连通子图。</p><h3 id="输出结果展示"><a class="markdownIt-Anchor" href="#输出结果展示"></a> 输出结果展示</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/3.png" alt=" " /></p><h3 id="完整代码实现"><a class="markdownIt-Anchor" href="#完整代码实现"></a> 完整代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> ============================================================================</span><br><span class="hljs-comment"> Name        : GraphMatrix.c</span><br><span class="hljs-comment"> Author      : YUGIN CHUI（Xu yujian）</span><br><span class="hljs-comment"> Version     :</span><br><span class="hljs-comment"> Copyright   :</span><br><span class="hljs-comment"> Description : read a graph from file, which descibe the formation of the</span><br><span class="hljs-comment">      graph by vertices at the beginning of each line, followed</span><br><span class="hljs-comment">      by connected vertices.</span><br><span class="hljs-comment"> ============================================================================</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ctype.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX 999</span><br><br><span class="hljs-type">int</span> sub_graphs = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">//打印矩阵函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PrintMatrix</span><span class="hljs-params">(<span class="hljs-type">int</span> **m, <span class="hljs-type">int</span> size)</span> &#123;<br>    <span class="hljs-type">int</span> i, j;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; size; j++)<br>            m[i][j] == MAX ? <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3c &quot;</span>, <span class="hljs-string">&#x27;x&#x27;</span>) : <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3d &quot;</span>, m[i][j]);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-comment">//Flyod函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Floyd</span><span class="hljs-params">(<span class="hljs-type">int</span> **A, <span class="hljs-type">int</span> size)</span> &#123;<br><span class="hljs-comment">//TO-DO: implement Floyd algorithm</span><br><span class="hljs-type">int</span> i,j,k;<br><span class="hljs-keyword">for</span>(k=<span class="hljs-number">0</span>;k&lt;size;k++)&#123;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;size;i++)&#123;<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;size;j++) &#123;<br>         <span class="hljs-keyword">if</span>(A[i][k] + A[k][j] &lt; A[i][j])&#123;<br>             A[i][j] =  A[i][k] + A[k][j];<br>         &#125;<br>        &#125;<br>    &#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//DFS函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">DFS</span><span class="hljs-params">(<span class="hljs-type">int</span> **A,<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> *visit,<span class="hljs-type">int</span> num_nodes)</span>&#123;<br>    visit[i] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;j&lt;num_nodes;j++)&#123;<br>        <span class="hljs-keyword">if</span>(A[i][j] == <span class="hljs-number">1</span> &amp;&amp; visit[j] == <span class="hljs-number">0</span>)<br>            DFS( A, j, visit, num_nodes);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//DFSTravel函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">DFSTravel</span><span class="hljs-params">(<span class="hljs-type">int</span> **A,<span class="hljs-type">int</span> *visit,<span class="hljs-type">int</span> num_nodes,<span class="hljs-type">int</span> e)</span>&#123;<br>    DFS(A, e, visit, num_nodes);<br>    sub_graphs++;<br>&#125;<br><br><span class="hljs-comment">//主函数</span><br><span class="hljs-type">int</span>  <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> i, j, k, num_nodes;<br>    <span class="hljs-type">int</span> **word;<br>    <span class="hljs-type">int</span> **M;<br>    <span class="hljs-type">int</span> *count;<br><br>    word = <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span> *) * <span class="hljs-number">255</span>);<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">255</span>; i++) &#123;<br>        word[i] = (<span class="hljs-type">int</span> *) <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>) * <span class="hljs-number">255</span>);<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">255</span>; j++)<br>            word[i][j] = <span class="hljs-number">-1</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//read graph from file.txt, store data in word[][]</span><br>    FILE *fp;<br>    fp = fopen(<span class="hljs-string">&quot;file.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span> (fp == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;can not open data file\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;;<br><br>    <span class="hljs-keyword">if</span> (fp != <span class="hljs-literal">NULL</span>) &#123;<br>        i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (!feof(fp)) &#123;<br>            <span class="hljs-type">char</span> *buff = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">255</span>);<br>            <span class="hljs-type">char</span> *c = <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>));<br>            j = <span class="hljs-number">0</span>;<br>            <span class="hljs-type">int</span> x = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">fscanf</span>(fp, <span class="hljs-string">&quot;%s&quot;</span>, buff);<br><br>            <span class="hljs-comment">//the while loop get rid of symbols like , . -</span><br>            <span class="hljs-keyword">while</span> (buff[x] != <span class="hljs-literal">NULL</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isdigit</span>(buff[x])) &#123;<br>                    c[<span class="hljs-number">0</span>] = buff[x];<br>                    word[i][j] = atoi(c);<br>                    j++;<br>                &#125;<br>                x++;<br>            &#125;<br>            i++;<br>        &#125;<br>        num_nodes = i;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Number of nodes: %d\n&quot;</span>, num_nodes);<br>    &#125;<br><br><span class="hljs-comment">//PrintMatrix(word, num_nodes);</span><br><br><span class="hljs-comment">// initialize M[][] with all MAX values, TYPICAL code example for initialing 2D matrix.</span><br>    M = <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span> *) * num_nodes);<br>    <span class="hljs-type">int</span> node;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_nodes; i++) &#123;<br>        M[i] = (<span class="hljs-type">int</span> *) <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>) * num_nodes);<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; num_nodes; j++) &#123;<br>            M[i][j] = MAX;<br>        &#125;<br>    &#125;<br><span class="hljs-comment">//build M[][] with the value read from file.txt</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_nodes; i++) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; num_nodes; j++) &#123;<br>            <span class="hljs-keyword">if</span> (word[i][j] != <span class="hljs-number">-1</span> &amp;&amp; j &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-comment">//TO-DO: assign value=1 to correct index of M[][]</span><br>                M[i][word[i][j]] = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;matrix: \n&quot;</span>);<br>    PrintMatrix(M, num_nodes);<br><br>    <span class="hljs-comment">//利用DFS寻找连通子图代码段</span><br>    <span class="hljs-type">int</span> visit[num_nodes];<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num_nodes;i++)&#123;<br>        visit[i] = <span class="hljs-number">0</span>;<br>    &#125;<br>        DFSTravel(M,visit,num_nodes,<span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;j&lt;num_nodes;j++) &#123;<br>            <span class="hljs-keyword">if</span> (visit[j] == <span class="hljs-number">0</span>)<br>                DFSTravel(M, visit, num_nodes, j);<br>        &#125;<br><br>    <span class="hljs-comment">//Flyod求解</span><br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; (num_nodes - <span class="hljs-number">3</span>); k++)<br>        Floyd(M, num_nodes);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Shortest path matrix between vertices\n&quot;</span>);<br>    PrintMatrix(M, num_nodes);<br><br><span class="hljs-comment">//count is used for output number of pairs in each distance</span><br>    count = <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span> *) * (num_nodes<span class="hljs-number">-1</span>)); <span class="hljs-comment">//Furthest distance is (num of nodes -1)</span><br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num_nodes<span class="hljs-number">-1</span>;i++) count[i]=<span class="hljs-number">0</span>;<br><br><span class="hljs-comment">//count number of subgraphs in num_graphs, and number of node-pairs in count[], e.g. node pairs in distance</span><br><span class="hljs-comment">//TO-DO: assign count[] values, and update sum</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_nodes; i++)&#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; num_nodes; j++)&#123;<br><span class="hljs-comment">//TO-DO: assign count[] values, and update sum</span><br>        <span class="hljs-keyword">if</span>(j&gt;i) &#123;<br>            count[M[i][j]]++;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Number of connected sub-graphs: %d\n&quot;</span>,sub_graphs);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%8s | %8s\n&quot;</span>,<span class="hljs-string">&quot;Distance&quot;</span>,<span class="hljs-string">&quot;Number of node-pairs&quot;</span>);<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num_nodes<span class="hljs-number">-1</span>;i++)<br><span class="hljs-keyword">if</span>(count[i]&gt;<span class="hljs-number">0</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%8d | %8d\n&quot;</span>, i, count[i]);<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Points</title>
      <link href="/2021/12/12/points/"/>
      <url>/2021/12/12/points/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/7.png" alt=" " /></p><h3 id="示例输入"><a class="markdownIt-Anchor" href="#示例输入"></a> 示例输入</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>第一个输入为有几个点，其下输入为点的坐标<br><span class="hljs-number">3</span><br><br><span class="hljs-number">1</span> <span class="hljs-number">1</span><br><br><span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="实现原理"><a class="markdownIt-Anchor" href="#实现原理"></a> 实现原理</h3><p>​        本次示例程序使用10000个点来测试分治法的效率，利用分治法求10000个点中的最小点对，首先将一万个点按照x的大小从小到大排序，若x相同，则按照y的大小排序，得到有序排列的一万个点，再取数组中间值的元素将一万个点分为s1和s2两部分，先分别求出s1和s2两部分的最小点对取其最小值，再与跨越s1和s2的点对距离进行对比，这里有筛选条件为当奋力在s1和s2两边的点如果x轴或者y轴到中间点的距离必须小于或等于s1与s2两部分点的最小值，即形成一个矩形内取点，通过不断递归得到最小点对。设置全局变量记录最小点对的坐标即可，经测试可以在1s内得到最小点对。</p><h3 id="示例结果"><a class="markdownIt-Anchor" href="#示例结果"></a> 示例结果</h3><p><img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/6.png" alt=" " /></p><h3 id="完整代码实现"><a class="markdownIt-Anchor" href="#完整代码实现"></a> 完整代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/time.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> INF 99999</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> N 10000</span><br><br><span class="hljs-type">int</span> m,t;<br><span class="hljs-type">int</span> temp[N];<span class="hljs-comment">//储存宽度为d的点</span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> &#123;</span><br>    <span class="hljs-type">double</span> x;<br>    <span class="hljs-type">double</span> y;<br>&#125;point[N];<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">compar</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span>* a, <span class="hljs-type">const</span> <span class="hljs-type">void</span>* b)</span><span class="hljs-comment">//用来比较两个元素的函数，即函数指针（回调函数）</span><br>&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> <span class="hljs-title">A</span> =</span> *(<span class="hljs-keyword">struct</span> node*)a;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> <span class="hljs-title">B</span> =</span> *(<span class="hljs-keyword">struct</span> node*)b;<br>    <span class="hljs-keyword">if</span> (A.x != B.x)<br>        <span class="hljs-keyword">return</span> A.x - B.x;<span class="hljs-comment">//按照x从小到大的顺序排序</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> A.y - B.y;<span class="hljs-comment">//当x相等的时候，按照y的从大到小的顺序排序</span><br>&#125;<br><br><span class="hljs-type">double</span> <span class="hljs-title function_">Min_distance</span><span class="hljs-params">(<span class="hljs-type">double</span> left, <span class="hljs-type">double</span> right)</span><span class="hljs-comment">//返回距离的大小关系</span><br>&#123;<br>    <span class="hljs-keyword">return</span> left &lt; right ? left : right;<br>&#125;<br><br><span class="hljs-type">double</span> <span class="hljs-title function_">distance</span><span class="hljs-params">(<span class="hljs-type">int</span> left, <span class="hljs-type">int</span> right)</span><span class="hljs-comment">//计算两点距离的函数</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sqrt</span>((point[left].x - point[right].x) * (point[left].x - point[right].x) + ((point[left].y - point[right].y) * (point[left].y - point[right].y)));<br>&#125;<br><br><span class="hljs-type">double</span> <span class="hljs-title function_">Closest_Pair</span><span class="hljs-params">(<span class="hljs-type">int</span> left, <span class="hljs-type">int</span> right)</span><br>&#123;<br>    <span class="hljs-type">double</span> End_dis = INF;<span class="hljs-comment">//距离的初始值,无穷大</span><br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>, k = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">if</span> (left == right)<span class="hljs-comment">//只有一个点的时候，返回无穷大</span><br>        <span class="hljs-keyword">return</span> End_dis;<br><br>    <span class="hljs-keyword">if</span> (right - left == <span class="hljs-number">1</span>)<span class="hljs-comment">// 刚好两个点的时候，返回两点的距离</span><br>        <span class="hljs-keyword">return</span> distance(left, right);<br><br>    <span class="hljs-type">int</span> mid = (left + right) / <span class="hljs-number">2</span>;<span class="hljs-comment">//大于或等于三个点的时候</span><br><br>    <span class="hljs-type">double</span> distance_left = Closest_Pair(left, mid);<span class="hljs-comment">//左边递归</span><br>    <span class="hljs-type">double</span> distancer_ight = Closest_Pair(mid + <span class="hljs-number">1</span>, right);<span class="hljs-comment">//右边递归</span><br><br>    End_dis = Min_distance(distance_left, distancer_ight);<span class="hljs-comment">//比较左右两边点对距离，找出其中的最小值</span><br><br><br>    <span class="hljs-keyword">for</span> (i = left; i &lt;= right; i++)<span class="hljs-comment">//找出符合要求的距离mid横坐标小于等于d的点</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">fabs</span>(point[mid].x - point[i].x) &lt;= End_dis)<br>            temp[k++] = i;<span class="hljs-comment">//temp用于储存符合要求的点的序号</span><br>    &#125;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt;= k - <span class="hljs-number">1</span>; i++)<span class="hljs-comment">//通过纵坐标寻找最短距离</span><br>        <span class="hljs-keyword">for</span> (j = i + <span class="hljs-number">1</span>; j &lt;= k - <span class="hljs-number">1</span> &amp;&amp; j &lt; i + <span class="hljs-number">7</span>; j++)<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">fabs</span>(point[temp[j]].y - point[temp[i]].y) &lt; End_dis)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(End_dis&gt;=distance(temp[i], temp[j]))<br>                &#123;<br>                    m=temp[i];<br>                    t=temp[j];<br>                &#125;<br>                <span class="hljs-keyword">else</span> m = left,t = right;<br>                End_dis = Min_distance(End_dis, distance(temp[i], temp[j]));<br>            &#125;<br>    <span class="hljs-keyword">return</span> End_dis;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">timeval</span> <span class="hljs-title">start</span>, <span class="hljs-title">end</span>;</span><br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-type">double</span> a;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %lf&quot;</span>, &amp;point[i].x, &amp;point[i].y);<br>        gettimeofday(&amp;start, <span class="hljs-literal">NULL</span>);<br>        qsort(point, n, <span class="hljs-keyword">sizeof</span>(point[<span class="hljs-number">0</span>]), compar);<br>        a = Closest_Pair(<span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>        gettimeofday(&amp;end, <span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the shortest distance is:%.10lf\n&quot;</span>, a);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the co-ordinates of the pair of points is:\n%.10lf %.10lf\n&quot;</span>,point[m].x,point[m].y);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.10lf %.10lf\n&quot;</span>,point[t].x,point[t].y);<br>        <span class="hljs-type">long</span> elapsed = (end.tv_sec - start.tv_sec)*<span class="hljs-number">1000000.0</span> + end.tv_usec - start.tv_usec;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.ld ms elapsed\n&quot;</span>, elapsed);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 分治法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排序算法与冒泡排序算法的比较</title>
      <link href="/2021/11/23/sort/"/>
      <url>/2021/11/23/sort/</url>
      
        <content type="html"><![CDATA[<h4 id="原理分析"><a class="markdownIt-Anchor" href="#原理分析"></a> 原理分析</h4><p><strong>1.冒泡排序：</strong></p><p>​</p><hr /><p>交换排序顾名思义就是通过元素的两两比较，判断是否符合要求，如过不符合就交换位置来达到排序的目的。冒泡排序名字的由来就是因为在交换过程中，类似水冒泡，小（大）的元素经过不断的交换由水底慢慢的浮到水的顶端。</p><p>冒泡排序的思想就是利用的比较交换，利用循环将第 i 小或者大的元素归位，归位操作利用的是对 n 个元素中相邻的两个进行比较，如果顺序正确就不交换，如果顺序错误就进行位置的交换。通过重复的循环访问数组，直到没有可以交换的元素，那么整个排序就已经完成了。</p><p>​       冒泡排序性能分析：</p><p>1.空间效率：仅使用常数个辅助单元，空间复杂度为Ο(1)。</p><p>2.时间效率：最坏情况与平均情况均为Ο(n²)。</p><hr /><p><strong>2.快速排序：</strong></p><p>​</p><p>​        快速排序使用分治法（Divide and conquer）策略来把一个串行（list）分为两个子串行（sub-lists）。</p><p>​        快速排序又是一种分而治之思想在排序算法上的典型应用。本质上来看，快速排序应该算是在冒泡排序基础上的递归分治法。</p><hr /><p>实现步骤：</p><p>1.从数列中挑出一个元素，称为 “基准”（pivot）;</p><p>2.重新排序数列，所有元素比基准值小的摆放在基准前面，所有元 素比基准值大的摆在基准的                 后面（相同的数可以到任一边）。在这个 分区退出之后，该基准就处于数列的中间位置。这个称为分区操   作；</p><p>3.递归地把小于基准值元素的子数列和大于基准值元素的子数列排序；</p><hr /><p>​           快速排序的最坏运行情况是 O(n²)，比如说顺序数列的快排。但它的平摊期望时间是 O(nlogn)，且 O(nlogn) 记号中隐含的常数因子很小，比复杂度稳定等于 O(nlogn) 的归并排序要小很多。所以，对绝大多数顺序性较弱的随机数列而言，快速排序总是优于归并排序。</p><hr /><h4 id="效率对比"><a class="markdownIt-Anchor" href="#效率对比"></a> 效率对比</h4><h5 id="生成了一万个随机数后利用两种排序法的时间对比"><a class="markdownIt-Anchor" href="#生成了一万个随机数后利用两种排序法的时间对比"></a> 生成了一万个随机数后利用两种排序法的时间对比</h5><h6 id="快速排序算法"><a class="markdownIt-Anchor" href="#快速排序算法"></a> 快速排序算法:</h6><p>​         <img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/1.png" alt="快速排序时间" /></p><h6 id="冒泡排序算法"><a class="markdownIt-Anchor" href="#冒泡排序算法"></a> 冒泡排序算法：</h6><p>​          <img src="https://cdn.jsdelivr.net/gh/chuiyugin/imgbed/2.png" alt="冒泡排序时间" /></p><hr /><h4 id="完整代码实现"><a class="markdownIt-Anchor" href="#完整代码实现"></a> 完整代码实现</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/time.h&gt;</span></span><br><br><span class="hljs-comment">//数组两个元素交换函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">swap</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> *b)</span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    t=*a;<br>    *a=*b;<br>    *b=t;<br>&#125;<br><br><span class="hljs-comment">//快速排序算法</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Quicksort</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> left,<span class="hljs-type">int</span> right)</span>&#123;<br>    <span class="hljs-keyword">if</span>(left&gt;=right)<br>        <span class="hljs-keyword">return</span>;<br>    <span class="hljs-type">int</span> pivot = a[right];<br>     <span class="hljs-type">int</span> m=left,n=right<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span>(m&lt;n)&#123;<br>        <span class="hljs-keyword">while</span>(a[m] &lt; pivot &amp;&amp; m&lt;n)<br>            m++;<br>        <span class="hljs-keyword">while</span>(a[n] &gt;= pivot &amp;&amp; m&lt;n)<br>            n--;<br>        swap(&amp;a[m], &amp;a[n]);<br>    &#125;<br>        <span class="hljs-keyword">if</span>(a[m]&gt;=a[right])<br>            swap(&amp;a[m], &amp;a[right]);<br>        <span class="hljs-keyword">else</span><br>            m++;<br>        <span class="hljs-keyword">if</span>(m)<br>            Quicksort(a, left, m - <span class="hljs-number">1</span>);<br>            Quicksort(a, m + <span class="hljs-number">1</span>, right);<br><br>&#125;<br><br><span class="hljs-comment">//快速排序算法标准接口</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Quick_Sort</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> n)</span>&#123;<br>    Quicksort(a,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);<br>&#125;<br><br><span class="hljs-comment">//冒泡算法</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Bubble_Sort</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> n)</span>&#123;<br>    <span class="hljs-type">int</span> i ,p ;<br>    <span class="hljs-type">int</span> flag = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(p=n<span class="hljs-number">-1</span>;p&gt;=<span class="hljs-number">0</span>;p--)&#123;<br>        <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;p;i++)&#123;<br>            <span class="hljs-keyword">if</span>(a[i] &gt; a[i+<span class="hljs-number">1</span>])&#123;<br>                swap(&amp;a[i],&amp;a[i+<span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-number">1</span>;<span class="hljs-comment">//标识发生变化</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<span class="hljs-comment">//全程无交换</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//主函数</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">timeval</span> <span class="hljs-title">start</span>, <span class="hljs-title">end</span>;</span><br>    gettimeofday(&amp;start, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-type">int</span> L[<span class="hljs-number">10000</span>];<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10000</span>;i++)&#123;<br>        L[i] = rand();<br>    &#125;<br>    <span class="hljs-comment">//Quick_Sort(L,10000);</span><br>    <span class="hljs-comment">//printf(&quot;the quick complete in &quot;);</span><br>    Bubble_Sort(L,<span class="hljs-number">10000</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the bubble complete in &quot;</span>);<br>    gettimeofday(&amp;end, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-type">long</span> elapsed = (end.tv_sec - start.tv_sec)*<span class="hljs-number">1000000.0</span> + end.tv_usec - start.tv_usec;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.ld ms elapsed\n&quot;</span>, elapsed);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h4><p>​         <strong>快速排序算法在运行时间上明显少于冒泡排序算法运行时间。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用循环队列求解约瑟夫环问题</title>
      <link href="/2021/11/20/Josephus/"/>
      <url>/2021/11/20/Josephus/</url>
      
        <content type="html"><![CDATA[<h4 id="循环队列求解约瑟夫环完整代码"><a class="markdownIt-Anchor" href="#循环队列求解约瑟夫环完整代码"></a> 循环队列求解约瑟夫环完整代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ERROR 1</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TRUE 1</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> Status;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> ElemType;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> &#123;</span><br>    ElemType data;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> *<span class="hljs-title">next</span>;</span><br>&#125;LNode, *Linklist;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LinkQuene</span>&#123;</span><br>     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> *<span class="hljs-title">front</span>;</span><br>     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">node</span> *<span class="hljs-title">rear</span>;</span><br>&#125;LinkQuene;<br><span class="hljs-comment">//初始化队列</span><br>Status <span class="hljs-title function_">init</span><span class="hljs-params">(LinkQuene q)</span>&#123;<br>   q.front = q.rear = (Linklist*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(LNode));<br>   <span class="hljs-keyword">if</span>(q.front!=q.rear)&#123;<br>       <span class="hljs-keyword">return</span> ERROR;<br>   &#125;<br>   q.front-&gt;next = <span class="hljs-literal">NULL</span>;<br>   <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><span class="hljs-comment">//插入约瑟夫环（人数为x，按顺序编号）</span><br>Status <span class="hljs-title function_">insert</span><span class="hljs-params">(LinkQuene *q,ElemType x)</span>&#123;<br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br>    Linklist p;<br>    p-&gt;next = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">for</span>(i = x;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>        Linklist s;<br>        s = (Linklist)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(LNode));<br>        <span class="hljs-keyword">if</span>(!s)&#123;<br>            <span class="hljs-keyword">return</span> ERROR;<br>        &#125;<br>        s-&gt;data = i;<br>        <span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>)&#123;<br>            q-&gt;front = s;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(i==x)&#123;<br>            q-&gt;rear = s;<br>        &#125;<br>        s-&gt;next = p-&gt;next;<br>        p-&gt;next = s;<br>        q-&gt;rear-&gt;next = q-&gt;front;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//出列操作</span><br>Linklist *<span class="hljs-title function_">out</span><span class="hljs-params">(LinkQuene *q)</span>&#123;<br>    Linklist s;<br>    s = q-&gt;front;<br>    q-&gt;front = s-&gt;next;<br>    q-&gt;rear-&gt;next = q-&gt;front;<br>    <span class="hljs-keyword">return</span> s;<br>&#125;<br><span class="hljs-comment">//入列操作</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(LinkQuene *q,Linklist s)</span>&#123;<br>    q-&gt;rear-&gt;next = s;<br>    s-&gt;next = q-&gt;front;<br>    q-&gt;rear = s;<br>&#125;<br><span class="hljs-comment">//约瑟夫环操作函数</span><br>Status <span class="hljs-title function_">Josephus</span><span class="hljs-params">(LinkQuene q,Linklist p,<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> m)</span>&#123;<br>    <span class="hljs-type">int</span> j;<br>    <span class="hljs-keyword">if</span>(i&gt;x)&#123;<br>        <span class="hljs-keyword">return</span> ERROR;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(j=<span class="hljs-number">1</span>;j&lt;i;j++)&#123;<br>            q.front = q.front-&gt;next;<br>            q.rear = q.rear-&gt;next;<br>        &#125;<br>    <span class="hljs-keyword">while</span>(q.front!=q.rear)&#123;<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">1</span>;j&lt;m;j++)&#123;<br>            p=out(&amp;q);<br>            in(&amp;q,p);<br>        &#125;<br>        p=out(&amp;q);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number of dead people is %d\n&quot;</span>,p-&gt;data);<br>        <span class="hljs-built_in">free</span>(p);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number of avoiding execution is %d&quot;</span>,q.front-&gt;data);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> x,i,m;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;how much people:\n&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;x);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the starting point:\n&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;how much people to skip:\n&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;m);<br>    LinkQuene q;<br>    Linklist *p;<br>    init(q);<br>    insert(&amp;q,x);<br>    Josephus(q,p,x,i,m);<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> c语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/20/hello-world/"/>
      <url>/2021/11/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>!</p><h3 id="some-useful-code"><a class="markdownIt-Anchor" href="#some-useful-code"></a> Some useful code</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;chuiyugin&quot;</span><br>git config --global user.email 1726123207@qq.com<br>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
